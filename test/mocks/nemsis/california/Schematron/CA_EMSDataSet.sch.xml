<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="//www.nemsis.org/media/nemsis_v3/master/Schematron/utilities/html/schematronHtml.xsl"?>
<sch:schema id="EMSDataSet" xmlns="http://purl.oclc.org/dsdl/schematron" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:dp="http://www.dpawson.co.uk/ns#" xmlns:xs="http://www.w3.org/2001/XMLSchema" queryBinding="xslt2" schemaVersion="3.4.0.150302_EMSDataSet_3.4.0_Elite_ICEMA">
	<sch:title>ISO schematron file for 3.4.0.150302_EMSDataSet_3.4.0_Elite_ICEMA. Effective 04/01/2020. Updated 03/31/2020 by ImageTrend Admin.</sch:title>
	<sch:ns prefix="dp" uri="http://www.dpawson.co.uk/ns#"/>
	<sch:ns prefix="nem" uri="http://www.nemsis.org"/>
	<!-- "Initialize" variables used by nemsisDiagnostic. -->
	<sch:let name="nemsisElements" value="()"/>
	<sch:let name="nemsisElementsMissing" value="''"/>
	<sch:let name="nemsisElementsMissingContext" value="()"/>

		<sch:pattern>
			<sch:title>eSituation.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.11"/> <sch:assert id="Rule_2537" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eSituation.11 and nem:eSituation.11 != '') and (not(nem:eSituation.11) or nem:eSituation.11 = '' or (nem:eSituation.11 != 'R10.84' and nem:eSituation.11 != 'R41.0' and nem:eSituation.11 != 'T71.9' and nem:eSituation.11 != 'T78.40' and nem:eSituation.11 != 'F10.92' and nem:eSituation.11 != 'R41.82' and nem:eSituation.11 != 'R68.13' and nem:eSituation.11 != 'T78.2' and nem:eSituation.11 != 'F99' and nem:eSituation.11 != 'T30.0' and nem:eSituation.11 != 'T58' and nem:eSituation.11 != 'I46.9' and nem:eSituation.11 != 'I49.9' and nem:eSituation.11 != 'R07.89' and nem:eSituation.11 != 'I21.3' and nem:eSituation.11 != 'I20.9' and nem:eSituation.11 != 'O80' and nem:eSituation.11 != 'J00' and nem:eSituation.11 != 'K59.1' and nem:eSituation.11 != 'R42' and nem:eSituation.11 != 'G24.0' and nem:eSituation.11 != 'T75.4' and nem:eSituation.11 != 'H93.90' and nem:eSituation.11 != 'R04.0' and nem:eSituation.11 != 'H57.9' and nem:eSituation.11 != 'I10' and nem:eSituation.11 != 'R50.9' and nem:eSituation.11 != 'T17.9' and nem:eSituation.11 != 'N39.9' and nem:eSituation.11 != 'R53.1' and nem:eSituation.11 != 'Z77.9' and nem:eSituation.11 != 'R51' and nem:eSituation.11 != 'E13.65' and nem:eSituation.11 != 'T67.0' and nem:eSituation.11 != 'E13.64' and nem:eSituation.11 != 'T68' and nem:eSituation.11 != 'J68.9' and nem:eSituation.11 != 'K92.1' and nem:eSituation.11 != 'R11.2' and nem:eSituation.11 != 'Z38.2' and nem:eSituation.11 != 'G89.1' and nem:eSituation.11 != 'R99' and nem:eSituation.11 != 'F19' and nem:eSituation.11 != 'M79.60' and nem:eSituation.11 != 'R00.2' and nem:eSituation.11 != 'O60.0' and nem:eSituation.11 != 'J96.9' and nem:eSituation.11 != 'J98.01' and nem:eSituation.11 != 'J80' and nem:eSituation.11 != 'J81.0' and nem:eSituation.11 != 'G40.901' and nem:eSituation.11 != 'G40.909' and nem:eSituation.11 != 'A41.9' and nem:eSituation.11 != 'I95.9' and nem:eSituation.11 != 'J70.5' and nem:eSituation.11 != 'I63.9' and nem:eSituation.11 != 'T75.1XXA' and nem:eSituation.11 != 'R55' and nem:eSituation.11 != 'I46.8' and nem:eSituation.11 != 'K92.0' and nem:eSituation.11 != 'T14.90' and nem:eSituation.11 != 'N93.9' and nem:eSituation.11 != 'Z00.00' and nem:eSituation.11 != 'O99' and nem:eSituation.11 != 'T63')) and ../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2019-01-15T00:00:00-06:00') and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &lt; xs:dateTime('2020-02-01T00:00:00-06:00'))">Rule to limit choices to EMSA&apos;s approved list. (eSitutation.11) </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eTimes.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.01"/> <sch:assert id="Rule_2543" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eTimes.01[@NV]) or (nem:eTimes.01[@NV!='7701001'] and nem:eTimes.01[@NV!='7701003']))) and ((not(nem:eTimes.01) or nem:eTimes.01 = '') or nem:eTimes.01 != '' and xs:dateTime(nem:eTimes.01) &lt; xs:dateTime('2019-01-01T00:00:00-06:00')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">PSAP Call Date/Time is  required and can not be prior to 2019</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eInjury.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.01"/> <sch:assert id="Rule_2602" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eInjury.01) or nem:eInjury.01 = '' or (count(nem:eInjury.01[text() = 'V00.8']) = 0 and count(nem:eInjury.01[text() = 'T74.2']) = 0 and count(nem:eInjury.01[text() = 'W50']) = 0 and count(nem:eInjury.01[text() = 'V80.9']) = 0 and count(nem:eInjury.01[text() = 'Y33']) = 0 and count(nem:eInjury.01[text() = 'T71.16']) = 0 and count(nem:eInjury.01[text() = 'T71.1']) = 0 and count(nem:eInjury.01[text() = 'T71.9']) = 0 and count(nem:eInjury.01[text() = 'Y00']) = 0 and count(nem:eInjury.01[text() = 'X99.9']) = 0 and count(nem:eInjury.01[text() = 'V49.3']) = 0 and count(nem:eInjury.01[text() = 'W55']) = 0 and count(nem:eInjury.01[text() = 'W31.9']) = 0 and count(nem:eInjury.01[text() = 'T75.0']) = 0 and count(nem:eInjury.01[text() = 'W40.9']) = 0 and count(nem:eInjury.01[text() = 'X31']) = 0 and count(nem:eInjury.01[text() = 'X30']) = 0 and count(nem:eInjury.01[text() = 'W88']) = 0 and count(nem:eInjury.01[text() = 'X00.1']) = 0 and count(nem:eInjury.01[text() = 'X00']) = 0 and count(nem:eInjury.01[text() = 'W01']) = 0 and count(nem:eInjury.01[text() = 'T76.9']) = 0 and count(nem:eInjury.01[text() = 'V29.9']) = 0 and count(nem:eInjury.01[text() = 'V86.99']) = 0 and count(nem:eInjury.01[text() = 'W17']) = 0 and count(nem:eInjury.01[text() = 'V19.3']) = 0 and count(nem:eInjury.01[text() = 'V19.9']) = 0 and count(nem:eInjury.01[text() = 'V03.9']) = 0 and count(nem:eInjury.01[text() = 'V09.9']) = 0 and count(nem:eInjury.01[text() = 'V89.9']) = 0 and count(nem:eInjury.01[text() = 'T50.90']) = 0 and count(nem:eInjury.01[text() = 'T75.4']) = 0 and count(nem:eInjury.01[text() = 'W22.8']) = 0 and count(nem:eInjury.01[text() = 'V95.9']) = 0 and count(nem:eInjury.01[text() = 'W74']) = 0 and count(nem:eInjury.01[text() = 'Y24.9']) = 0 and count(nem:eInjury.01[text() = 'V99']) = 0 and count(nem:eInjury.01[text() = 'V94.9']) = 0 and count(nem:eInjury.01[text() = 'T30']) = 0 and count(nem:eInjury.01[text() = 'Y28.9']) = 0 and count(nem:eInjury.01[text() = 'T63']) = 0)) and ../nem:eTimes/nem:eTimes.02 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.02) &gt; xs:dateTime('2019-04-23T00:00:00-06:00') and (nem:eInjury.01 and nem:eInjury.01 != '') and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &lt; xs:dateTime('2020-02-01T00:00:00-06:00'))">Document the cause of injury.Limited to the State cause of Injury list. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eResponse.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.07"/> <sch:assert id="Rule_2603" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = ('it2207.001', 'it2207.002', 'it2207.003')] or nem:eResponse.07 = '2207013') and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2019-08-13T00:00:00-06:00') and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404017'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404007'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404005'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404003'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404011'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404015'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404019'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404023'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404025'])) and (../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50637' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-51181' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-51190' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50555' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-51192' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-ICEMAD' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-51182'))">Vehicle Type Cant include Non Transport types for Transport vehicles.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>itVitals.057 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:itVitals.057"/> <sch:assert id="Rule_2608" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.057'][nem:eCustomResults.01 != '']) &lt; 1 and (not(../../nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.StrokeScaleGroup/nem:eVitals.29[@NV])) and (not(../../nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.StrokeScaleGroup/nem:eVitals.29[@PN])) and (not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.057']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.057'][nem:eCustomResults.01 = ''])) and ((../../nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.StrokeScaleGroup/nem:eVitals.29 = '3329005') or (../../nem:eSituation/nem:eSituation.12 = 'I63.9') or count(../../nem:eOther/nem:eOther.02[text() = '4502007']) != 0 or ../../nem:eSituation/nem:eSituation.11 = 'I63.9') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')) and ../../nem:eScene/nem:eScene.09 != 'Y92.23')">USE STROKE POWERTOOL to Document the Grip Strength component of the stroke assessment.  </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eVitals.30 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.StrokeScaleGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.30"/> <sch:assert id="Rule_2610" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eVitals.30 = '3330003' or nem:eVitals.30 = '3330011') and ../../../nem:eSituation/nem:eSituation.11 != 'I63.9' and count(../../../nem:eSituation/nem:eSituation.12[text() = 'I63.9']) = 0) and ((../../../nem:eSituation/nem:eSituation.12 = 'R10.84' or ../../../nem:eSituation/nem:eSituation.12 = 'R41.0' or ../../../nem:eSituation/nem:eSituation.12 = 'T71.9' or ../../../nem:eSituation/nem:eSituation.12 = 'F10.92' or ../../../nem:eSituation/nem:eSituation.12 = 'T78.40' or ../../../nem:eSituation/nem:eSituation.12 = 'R41.82' or ../../../nem:eSituation/nem:eSituation.12 = 'R68.13' or ../../../nem:eSituation/nem:eSituation.12 = 'T78.2' or ../../../nem:eSituation/nem:eSituation.12 = 'F99' or ../../../nem:eSituation/nem:eSituation.12 = 'T30.0' or ../../../nem:eSituation/nem:eSituation.12 = 'T58' or ../../../nem:eSituation/nem:eSituation.12 = 'N39.9' or ../../../nem:eSituation/nem:eSituation.12 = 'T17.9' or ../../../nem:eSituation/nem:eSituation.12 = 'R50.9' or ../../../nem:eSituation/nem:eSituation.12 = 'Z77.9' or ../../../nem:eSituation/nem:eSituation.12 = 'R53.1' or ../../../nem:eSituation/nem:eSituation.12 = 'R51' or ../../../nem:eSituation/nem:eSituation.12 = 'E13.65' or ../../../nem:eSituation/nem:eSituation.12 = 'T67.0' or ../../../nem:eSituation/nem:eSituation.12 = 'E13.64' or ../../../nem:eSituation/nem:eSituation.12 = 'T68' or ../../../nem:eSituation/nem:eSituation.12 = 'J68.9' or ../../../nem:eSituation/nem:eSituation.12 = 'R99' or ../../../nem:eSituation/nem:eSituation.12 = 'G89.1' or ../../../nem:eSituation/nem:eSituation.12 = 'F19' or ../../../nem:eSituation/nem:eSituation.12 = 'M79.60' or ../../../nem:eSituation/nem:eSituation.12 = 'R00.2' or ../../../nem:eSituation/nem:eSituation.12 = 'O60.0' or ../../../nem:eSituation/nem:eSituation.12 = 'J96.9' or ../../../nem:eSituation/nem:eSituation.12 = 'J98.01' or ../../../nem:eSituation/nem:eSituation.12 = 'J80' or ../../../nem:eSituation/nem:eSituation.12 = 'J81.0' or ../../../nem:eSituation/nem:eSituation.12 = 'G40.901' or ../../../nem:eSituation/nem:eSituation.12 = 'K92.1' or ../../../nem:eSituation/nem:eSituation.12 = 'R11.2' or ../../../nem:eSituation/nem:eSituation.12 = 'Z38.2' or ../../../nem:eSituation/nem:eSituation.12 = 'I10' or ../../../nem:eSituation/nem:eSituation.12 = 'H57.9' or ../../../nem:eSituation/nem:eSituation.12 = 'R04.0' or ../../../nem:eSituation/nem:eSituation.12 = 'H93.90' or ../../../nem:eSituation/nem:eSituation.12 = 'T75.4' or ../../../nem:eSituation/nem:eSituation.12 = 'G24.0' or ../../../nem:eSituation/nem:eSituation.12 = 'R42' or ../../../nem:eSituation/nem:eSituation.12 = 'K59.1' or ../../../nem:eSituation/nem:eSituation.12 = 'O99' or ../../../nem:eSituation/nem:eSituation.12 = 'I46.9' or ../../../nem:eSituation/nem:eSituation.12 = 'I49.9' or ../../../nem:eSituation/nem:eSituation.12 = 'R07.89' or ../../../nem:eSituation/nem:eSituation.12 = 'I21.3' or ../../../nem:eSituation/nem:eSituation.12 = 'O80' or ../../../nem:eSituation/nem:eSituation.12 = 'I20.9' or ../../../nem:eSituation/nem:eSituation.12 = 'J00' or ../../../nem:eSituation/nem:eSituation.12 = 'G40.909' or ../../../nem:eSituation/nem:eSituation.12 = 'A41.9' or ../../../nem:eSituation/nem:eSituation.12 = 'I95.9' or ../../../nem:eSituation/nem:eSituation.12 = 'J70.5' or ../../../nem:eSituation/nem:eSituation.12 = 'T63.0' or ../../../nem:eSituation/nem:eSituation.12 = 'T75.1XXA' or ../../../nem:eSituation/nem:eSituation.12 = 'R55' or ../../../nem:eSituation/nem:eSituation.12 = 'I46.8' or ../../../nem:eSituation/nem:eSituation.12 = 'T14.90' or ../../../nem:eSituation/nem:eSituation.12 = 'K92.0' or ../../../nem:eSituation/nem:eSituation.12 = 'N93.9' or ../../../nem:eSituation/nem:eSituation.12 = 'Z00.00') or (../../../nem:eSituation/nem:eSituation.11 = 'R10.84' or ../../../nem:eSituation/nem:eSituation.11 = 'R41.0' or ../../../nem:eSituation/nem:eSituation.11 = 'T71.9' or ../../../nem:eSituation/nem:eSituation.11 = 'F10.92' or ../../../nem:eSituation/nem:eSituation.11 = 'T78.40' or ../../../nem:eSituation/nem:eSituation.11 = 'R41.82' or ../../../nem:eSituation/nem:eSituation.11 = 'T58' or ../../../nem:eSituation/nem:eSituation.11 = 'T30.0' or ../../../nem:eSituation/nem:eSituation.11 = 'I49.9' or ../../../nem:eSituation/nem:eSituation.11 = 'I46.9' or ../../../nem:eSituation/nem:eSituation.11 = 'R07.89' or ../../../nem:eSituation/nem:eSituation.11 = 'I21.3' or ../../../nem:eSituation/nem:eSituation.11 = 'F99' or ../../../nem:eSituation/nem:eSituation.11 = 'T78.2' or ../../../nem:eSituation/nem:eSituation.11 = 'R68.13' or ../../../nem:eSituation/nem:eSituation.11 = 'I20.9' or ../../../nem:eSituation/nem:eSituation.11 = 'J00' or ../../../nem:eSituation/nem:eSituation.11 = 'O99' or ../../../nem:eSituation/nem:eSituation.11 = 'K59.1' or ../../../nem:eSituation/nem:eSituation.11 = 'R42' or ../../../nem:eSituation/nem:eSituation.11 = 'O80' or ../../../nem:eSituation/nem:eSituation.11 = 'G24.0' or ../../../nem:eSituation/nem:eSituation.11 = 'T75.4' or ../../../nem:eSituation/nem:eSituation.11 = 'R04.0' or ../../../nem:eSituation/nem:eSituation.11 = 'H93.90' or ../../../nem:eSituation/nem:eSituation.11 = 'H57.9' or ../../../nem:eSituation/nem:eSituation.11 = 'I10' or ../../../nem:eSituation/nem:eSituation.11 = 'T17.9' or ../../../nem:eSituation/nem:eSituation.11 = 'R50.9' or ../../../nem:eSituation/nem:eSituation.11 = 'R53.1' or ../../../nem:eSituation/nem:eSituation.11 = 'N39.9' or ../../../nem:eSituation/nem:eSituation.11 = 'R51' or ../../../nem:eSituation/nem:eSituation.11 = 'T67.0' or ../../../nem:eSituation/nem:eSituation.11 = 'E13.65' or ../../../nem:eSituation/nem:eSituation.11 = 'Z77.9' or ../../../nem:eSituation/nem:eSituation.11 = 'T68' or ../../../nem:eSituation/nem:eSituation.11 = 'K92.1' or ../../../nem:eSituation/nem:eSituation.11 = 'J68.9' or ../../../nem:eSituation/nem:eSituation.11 = 'E13.64' or ../../../nem:eSituation/nem:eSituation.11 = 'Z38.2' or ../../../nem:eSituation/nem:eSituation.11 = 'R11.2' or ../../../nem:eSituation/nem:eSituation.11 = 'G89.1' or ../../../nem:eSituation/nem:eSituation.11 = 'R99' or ../../../nem:eSituation/nem:eSituation.11 = 'F19' or ../../../nem:eSituation/nem:eSituation.11 = 'M79.60' or ../../../nem:eSituation/nem:eSituation.11 = 'R00.2' or ../../../nem:eSituation/nem:eSituation.11 = 'O60.0' or ../../../nem:eSituation/nem:eSituation.11 = 'J96.9' or ../../../nem:eSituation/nem:eSituation.11 = 'J98.01' or ../../../nem:eSituation/nem:eSituation.11 = 'J80' or ../../../nem:eSituation/nem:eSituation.11 = 'J81.0' or ../../../nem:eSituation/nem:eSituation.11 = 'G40.901' or ../../../nem:eSituation/nem:eSituation.11 = 'G40.909' or ../../../nem:eSituation/nem:eSituation.11 = 'A41.9' or ../../../nem:eSituation/nem:eSituation.11 = 'I95.9' or ../../../nem:eSituation/nem:eSituation.11 = 'J70.5' or ../../../nem:eSituation/nem:eSituation.11 = 'T63.0' or ../../../nem:eSituation/nem:eSituation.11 = 'T75.1XXA' or ../../../nem:eSituation/nem:eSituation.11 = 'R55' or ../../../nem:eSituation/nem:eSituation.11 = 'I46.8' or ../../../nem:eSituation/nem:eSituation.11 = 'T14.90' or ../../../nem:eSituation/nem:eSituation.11 = 'K92.0' or ../../../nem:eSituation/nem:eSituation.11 = 'N93.9' or ../../../nem:eSituation/nem:eSituation.11 = 'Z00.00')))">When mLAPPS is not blank Primary or Secondary impression needs to = Stroke /CVA /TIA.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eMedications.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.03"/> <sch:assert id="Rule_2623" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eMedications.03) or nem:eMedications.03 = '') and ../../nem:eTimes/nem:eTimes.07 != '' and xs:dateTime(../../nem:eTimes/nem:eTimes.07) &gt; xs:dateTime('2019-08-01T00:00:00-06:00')) and ((nem:eMedications.01 and nem:eMedications.01 != '') or (nem:eMedications.DosageGroup/nem:eMedications.05 and nem:eMedications.DosageGroup/nem:eMedications.05 != '') or (nem:eMedications.DosageGroup/nem:eMedications.06 and nem:eMedications.DosageGroup/nem:eMedications.06 != '')))">Medication name must be documented when time is documented.</sch:assert>
			</sch:rule>
		</sch:pattern>

<!-- ICEMA rule ID: 2632 -->
		<sch:pattern>
			<sch:title>eSituation.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.12"/> <sch:assert id="Rule_2632" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eSituation.12 and nem:eSituation.12 != '') and (not(nem:eSituation.12) or nem:eSituation.12 = '' or (count(nem:eSituation.12[text() = 'R10.84']) = 0 and count(nem:eSituation.12[text() = 'R41.0']) = 0 and count(nem:eSituation.12[text() = 'T71.9']) = 0 and count(nem:eSituation.12[text() = 'F10.92']) = 0 and count(nem:eSituation.12[text() = 'T78.40']) = 0 and count(nem:eSituation.12[text() = 'R41.82']) = 0 and count(nem:eSituation.12[text() = 'R68.13']) = 0 and count(nem:eSituation.12[text() = 'T78.2']) = 0 and count(nem:eSituation.12[text() = 'F99']) = 0 and count(nem:eSituation.12[text() = 'T30.0']) = 0 and count(nem:eSituation.12[text() = 'T58']) = 0 and count(nem:eSituation.12[text() = 'I46.9']) = 0 and count(nem:eSituation.12[text() = 'I49.9']) = 0 and count(nem:eSituation.12[text() = 'I21.3']) = 0 and count(nem:eSituation.12[text() = 'R07.89']) = 0 and count(nem:eSituation.12[text() = 'I20.9']) = 0 and count(nem:eSituation.12[text() = 'O80']) = 0 and count(nem:eSituation.12[text() = 'J00']) = 0 and count(nem:eSituation.12[text() = 'O99']) = 0 and count(nem:eSituation.12[text() = 'K59.1']) = 0 and count(nem:eSituation.12[text() = 'R42']) = 0 and count(nem:eSituation.12[text() = 'G24.0']) = 0 and count(nem:eSituation.12[text() = 'T75.4']) = 0 and count(nem:eSituation.12[text() = 'H93.90']) = 0 and count(nem:eSituation.12[text() = 'R04.0']) = 0 and count(nem:eSituation.12[text() = 'H57.9']) = 0 and count(nem:eSituation.12[text() = 'I10']) = 0 and count(nem:eSituation.12[text() = 'R50.9']) = 0 and count(nem:eSituation.12[text() = 'N39.9']) = 0 and count(nem:eSituation.12[text() = 'R53.1']) = 0 and count(nem:eSituation.12[text() = 'Z77.9']) = 0 and count(nem:eSituation.12[text() = 'R51']) = 0 and count(nem:eSituation.12[text() = 'E13.65']) = 0 and count(nem:eSituation.12[text() = 'T67.0']) = 0 and count(nem:eSituation.12[text() = 'E13.64']) = 0 and count(nem:eSituation.12[text() = 'J68.9']) = 0 and count(nem:eSituation.12[text() = 'T68']) = 0 and count(nem:eSituation.12[text() = 'K92.1']) = 0 and count(nem:eSituation.12[text() = 'R11.2']) = 0 and count(nem:eSituation.12[text() = 'Z38.2']) = 0 and count(nem:eSituation.12[text() = 'G89.1']) = 0 and count(nem:eSituation.12[text() = 'R99']) = 0 and count(nem:eSituation.12[text() = 'F19']) = 0 and count(nem:eSituation.12[text() = 'M79.60']) = 0 and count(nem:eSituation.12[text() = 'R00.2']) = 0 and count(nem:eSituation.12[text() = 'O60.0']) = 0 and count(nem:eSituation.12[text() = 'J96.9']) = 0 and count(nem:eSituation.12[text() = 'J98.01']) = 0 and count(nem:eSituation.12[text() = 'J80']) = 0 and count(nem:eSituation.12[text() = 'J81.0']) = 0 and count(nem:eSituation.12[text() = 'G40.901']) = 0 and count(nem:eSituation.12[text() = 'G40.909']) = 0 and count(nem:eSituation.12[text() = 'I95.9']) = 0 and count(nem:eSituation.12[text() = 'A41.9']) = 0 and count(nem:eSituation.12[text() = 'J70.5']) = 0 and count(nem:eSituation.12[text() = 'I63.9']) = 0 and count(nem:eSituation.12[text() = 'T75.1XXA']) = 0 and count(nem:eSituation.12[text() = 'R55']) = 0 and count(nem:eSituation.12[text() = 'I46.8']) = 0 and count(nem:eSituation.12[text() = 'T14.90']) = 0 and count(nem:eSituation.12[text() = 'K92.0']) = 0 and count(nem:eSituation.12[text() = 'N93.9']) = 0 and count(nem:eSituation.12[text() = 'Z00.00']) = 0 and count(nem:eSituation.12[text() = 'T63']) = 0 and count(nem:eSituation.12[text() = 'Z20.828']) = 0 and count(nem:eSituation.12[text() = 'Z20.9']) = 0)) and ../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2019-08-26T00:00:00-06:00') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212029' or ../nem:eDisposition/nem:eDisposition.12 = '4212023') and (nem:eSituation.11 and nem:eSituation.11 != '')) and (../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50616' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-51190I'))">Rule to limit choices to EMSA&apos;s approved list (eSitutation.12)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eSituation.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.11"/> <sch:assert id="Rule_2633" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eSituation.11 and nem:eSituation.11 != '') and (not(nem:eSituation.11) or nem:eSituation.11 = '' or (nem:eSituation.11 != 'R10.84' and nem:eSituation.11 != 'R41.0' and nem:eSituation.11 != 'T71.9' and nem:eSituation.11 != 'T78.40' and nem:eSituation.11 != 'F10.92' and nem:eSituation.11 != 'R41.82' and nem:eSituation.11 != 'R68.13' and nem:eSituation.11 != 'T78.2' and nem:eSituation.11 != 'F99' and nem:eSituation.11 != 'T30.0' and nem:eSituation.11 != 'T58' and nem:eSituation.11 != 'I46.9' and nem:eSituation.11 != 'I49.9' and nem:eSituation.11 != 'R07.89' and nem:eSituation.11 != 'I21.3' and nem:eSituation.11 != 'I20.9' and nem:eSituation.11 != 'O80' and nem:eSituation.11 != 'J00' and nem:eSituation.11 != 'K59.1' and nem:eSituation.11 != 'R42' and nem:eSituation.11 != 'G24.0' and nem:eSituation.11 != 'T75.4' and nem:eSituation.11 != 'H93.90' and nem:eSituation.11 != 'R04.0' and nem:eSituation.11 != 'H57.9' and nem:eSituation.11 != 'I10' and nem:eSituation.11 != 'R50.9' and nem:eSituation.11 != 'T17.9' and nem:eSituation.11 != 'N39.9' and nem:eSituation.11 != 'R53.1' and nem:eSituation.11 != 'Z77.9' and nem:eSituation.11 != 'R51' and nem:eSituation.11 != 'E13.65' and nem:eSituation.11 != 'T67.0' and nem:eSituation.11 != 'E13.64' and nem:eSituation.11 != 'T68' and nem:eSituation.11 != 'J68.9' and nem:eSituation.11 != 'K92.1' and nem:eSituation.11 != 'R11.2' and nem:eSituation.11 != 'Z38.2' and nem:eSituation.11 != 'G89.1' and nem:eSituation.11 != 'R99' and nem:eSituation.11 != 'F19' and nem:eSituation.11 != 'M79.60' and nem:eSituation.11 != 'R00.2' and nem:eSituation.11 != 'O60.0' and nem:eSituation.11 != 'J96.9' and nem:eSituation.11 != 'J98.01' and nem:eSituation.11 != 'J80' and nem:eSituation.11 != 'J81.0' and nem:eSituation.11 != 'G40.901' and nem:eSituation.11 != 'G40.909' and nem:eSituation.11 != 'A41.9' and nem:eSituation.11 != 'I95.9' and nem:eSituation.11 != 'J70.5' and nem:eSituation.11 != 'I63.9' and nem:eSituation.11 != 'T75.1XXA' and nem:eSituation.11 != 'R55' and nem:eSituation.11 != 'I46.8' and nem:eSituation.11 != 'K92.0' and nem:eSituation.11 != 'T14.90' and nem:eSituation.11 != 'N93.9' and nem:eSituation.11 != 'Z00.00' and nem:eSituation.11 != 'O99' and nem:eSituation.11 != 'T63')) and ../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2019-08-26T00:00:00-06:00')) and (../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-51190I' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50616'))">Rule to limit choices to EMSA&apos;s approved list. (eSitutation.11) </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eMedications.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.03"/> <sch:assert id="Rule_2635" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eProcedures/nem:eProcedures.ProcedureGroup[(nem:eProcedures.03 = '250863006')]) &lt; 1 and (../../nem:eResponse/nem:eResponse.15 = '2215013' or ../../nem:eResponse/nem:eResponse.15 = '2215021') and starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') and ../../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2019-08-26T00:00:00-06:00') and (nem:eMedications.03 = '4337' or nem:eMedications.03 = '6130') and (../../nem:eResponse/nem:eResponse.ServiceGroup/nem:eResponse.05 = '2205001'))">Capnography procedure must be documented when pain medications are given. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.12"/> <sch:assert id="Rule_2637" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eDisposition.12 = '4212007') and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2019-09-01T00:00:00-06:00')) and ((../nem:eTimes/nem:eTimes.06 and ../nem:eTimes/nem:eTimes.06 != '') or (../nem:eTimes/nem:eTimes.07 and ../nem:eTimes/nem:eTimes.07 != '') or (../nem:eTimes/nem:eTimes.08 and ../nem:eTimes/nem:eTimes.08 != '') or (../nem:eTimes/nem:eTimes.09 and ../nem:eTimes/nem:eTimes.09 != '') or (../nem:eTimes/nem:eTimes.10 and ../nem:eTimes/nem:eTimes.10 != '') or (../nem:eTimes/nem:eTimes.11 and ../nem:eTimes/nem:eTimes.11 != '') or (../nem:eTimes/nem:eTimes.12 and ../nem:eTimes/nem:eTimes.12 != '')))">Cancelled prior to arrival at scene must not have an arrived on scene time.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eOutcome.ExternalDataGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOutcome">
			<sch:let name="nemsisElements" value="nem:eOutcome.ExternalDataGroup"/> <sch:assert id="Rule_2639" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:eOutcome.ExternalDataGroup) = 0 and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2019-09-19T00:00:00-06:00') and ../nem:eDisposition/nem:eDisposition.DestinationGroup/nem:eDisposition.02 = '20019' and count(nem:eOutcome.ExternalDataGroup) &lt; 2) and (../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50088-1' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-ICEMAD' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50088-2' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50088-3'))">Use Power Tool - Encounter is Required with Patient contact and going to ARMC.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eResponse.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.07"/> <sch:assert id="Rule_2642" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = 'it2207.100'] or nem:eResponse.07 = '2207009' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = 'it2207.101']) and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2020-02-17T00:00:00-06:00') and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404001'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404009'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '1404021'])) and (../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50088-3' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50088-2' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50088-1' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-ICEMAD'))">Vehicle Type Cant include Non Transport types for Transport vehicles.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eScene.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.09"/> <sch:assert id="Rule_2650" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eScene.09 and nem:eScene.09 != '') and (not(nem:eScene.09 = ('Y92.00', 'Y92.12', 'Y92.13', 'Y92.14', 'Y92.16', 'Y92.196', 'Y92.219', 'Y92.23', 'Y92.29', 'Y92.318', 'Y92.41', 'Y92.51', 'Y92.520', 'Y92.531', 'Y92.532', 'Y92.69', 'Y92.82', 'Y92.248', 'Y92.832', 'Y92.838', 'Y92.85', 'Y92.9', 'Y92.7')) and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eScene.09'][nem:eCustomResults.01 = 'itICD.009'])) and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2019-10-24T00:00:00-08:00') and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &lt; xs:dateTime('2020-02-01T00:00:00-08:00'))">Limit location type to EMSA list.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eSituation.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.09"/> <sch:assert id="Rule_2651" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eSituation.09 and nem:eSituation.09 != '') and (not(nem:eSituation.09) or nem:eSituation.09 = '' or (nem:eSituation.09 != 'R14.0' and nem:eSituation.09 != 'R63.0' and nem:eSituation.09 != 'R47.01' and nem:eSituation.09 != 'R06.81' and nem:eSituation.09 != 'R41.82' and nem:eSituation.09 != 'R63.4' and nem:eSituation.09 != 'R44.0' and nem:eSituation.09 != 'M54.02' and nem:eSituation.09 != 'R07.1' and nem:eSituation.09 != 'R07.9' and nem:eSituation.09 != 'R68.83' and nem:eSituation.09 != 'R05' and nem:eSituation.09 != 'R25.2' and nem:eSituation.09 != 'R23.0' and nem:eSituation.09 != 'R19.7' and nem:eSituation.09 != 'R26.2' and nem:eSituation.09 != 'R41.0' and nem:eSituation.09 != 'R20.0' and nem:eSituation.09 != 'R42' and nem:eSituation.09 != 'M54.9' and nem:eSituation.09 != 'R30.0' and nem:eSituation.09 != 'R60.9' and nem:eSituation.09 != 'R10.13' and nem:eSituation.09 != 'R68.11' and nem:eSituation.09 != 'R04.0' and nem:eSituation.09 != 'R29.810' and nem:eSituation.09 != 'R63.3' and nem:eSituation.09 != 'R50.9' and nem:eSituation.09 != 'R23.2' and nem:eSituation.09 != 'R10.84' and nem:eSituation.09 != 'R61' and nem:eSituation.09 != 'R51' and nem:eSituation.09 != 'R12' and nem:eSituation.09 != 'R31' and nem:eSituation.09 != 'G81.9' and nem:eSituation.09 != 'R04.2' and nem:eSituation.09 != 'R58' and nem:eSituation.09 != 'R06.6' and nem:eSituation.09 != 'R45.850' and nem:eSituation.09 != 'R06.4' and nem:eSituation.09 != 'K92.0' and nem:eSituation.09 != 'R99' and nem:eSituation.09 != 'R68.84' and nem:eSituation.09 != 'R22' and nem:eSituation.09 != 'R09.81' and nem:eSituation.09 != 'R11.0' and nem:eSituation.09 != 'R06.01' and nem:eSituation.09 != 'R07.89' and nem:eSituation.09 != 'R53.83' and nem:eSituation.09 != 'R53.81' and nem:eSituation.09 != 'R35.8' and nem:eSituation.09 != 'K08.8' and nem:eSituation.09 != 'M79.6' and nem:eSituation.09 != 'R10.3' and nem:eSituation.09 != 'R10.1' and nem:eSituation.09 != 'R23.1' and nem:eSituation.09 != 'R00.2' and nem:eSituation.09 != 'G82.2' and nem:eSituation.09 != 'R10.2' and nem:eSituation.09 != 'R06.3' and nem:eSituation.09 != 'R10.33' and nem:eSituation.09 != 'N48.3' and nem:eSituation.09 != 'L29.9' and nem:eSituation.09 != 'R21' and nem:eSituation.09 != 'R29.6' and nem:eSituation.09 != 'R09.2' and nem:eSituation.09 != 'R45.1' and nem:eSituation.09 != 'R06.02' and nem:eSituation.09 != 'R47.81' and nem:eSituation.09 != 'R40.0' and nem:eSituation.09 != 'R45.7' and nem:eSituation.09 != 'R46.2' and nem:eSituation.09 != 'R06.1' and nem:eSituation.09 != 'R45.851' and nem:eSituation.09 != 'R55' and nem:eSituation.09 != 'R25.1' and nem:eSituation.09 != 'G47.00' and nem:eSituation.09 != 'K59.00' and nem:eSituation.09 != 'R13.10' and nem:eSituation.09 != 'R40.20' and nem:eSituation.09 != 'R56.9' and nem:eSituation.09 != 'H91.90' and nem:eSituation.09 != 'H92.09' and nem:eSituation.09 != 'H57.10' and nem:eSituation.09 != 'R17' and nem:eSituation.09 != 'R32' and nem:eSituation.09 != 'H53.9' and nem:eSituation.09 != 'H54.7' and nem:eSituation.09 != 'L50.0' and nem:eSituation.09 != 'R45.6' and nem:eSituation.09 != 'H53.14' and nem:eSituation.09 != 'R44.1' and nem:eSituation.09 != 'R53.1' and nem:eSituation.09 != 'R06.2' and nem:eSituation.09 != 'R45.82' and nem:eSituation.09 != 'G50.1' and nem:eSituation.09 != 'G83.10' and nem:eSituation.09 != 'J02' and nem:eSituation.09 != 'N93.9' and nem:eSituation.09 != 'Z00.129' and nem:eSituation.09 != 'Z00.00' and nem:eSituation.09 != 'R33.9' and nem:eSituation.09 != 'R11.10')) and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2019-10-24T00:00:00-06:00') and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &lt; xs:dateTime('2020-02-01T00:00:00-06:00')) and (not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65'))))">Primary Symptoms not on EMSA list. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eSituation.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.09"/> <sch:assert id="Rule_2657" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((nem:eSituation.09 and nem:eSituation.09 != '') and (not(nem:eSituation.09) or nem:eSituation.09 = '' or (nem:eSituation.09 != 'R14.0' and nem:eSituation.09 != 'R63.0' and nem:eSituation.09 != 'R47.01' and nem:eSituation.09 != 'R06.81' and nem:eSituation.09 != 'R41.82' and nem:eSituation.09 != 'R63.4' and nem:eSituation.09 != 'R44.0' and nem:eSituation.09 != 'M54.02' and nem:eSituation.09 != 'R07.1' and nem:eSituation.09 != 'R07.9' and nem:eSituation.09 != 'R68.83' and nem:eSituation.09 != 'R05' and nem:eSituation.09 != 'R25.2' and nem:eSituation.09 != 'R23.0' and nem:eSituation.09 != 'R19.7' and nem:eSituation.09 != 'R26.2' and nem:eSituation.09 != 'R41.0' and nem:eSituation.09 != 'R20.0' and nem:eSituation.09 != 'R42' and nem:eSituation.09 != 'M54.9' and nem:eSituation.09 != 'R30.0' and nem:eSituation.09 != 'R60.9' and nem:eSituation.09 != 'R10.13' and nem:eSituation.09 != 'R68.11' and nem:eSituation.09 != 'R04.0' and nem:eSituation.09 != 'R29.810' and nem:eSituation.09 != 'R63.3' and nem:eSituation.09 != 'R50.9' and nem:eSituation.09 != 'R23.2' and nem:eSituation.09 != 'R10.84' and nem:eSituation.09 != 'R61' and nem:eSituation.09 != 'R51' and nem:eSituation.09 != 'R12' and nem:eSituation.09 != 'R31' and nem:eSituation.09 != 'G81.9' and nem:eSituation.09 != 'R04.2' and nem:eSituation.09 != 'R58' and nem:eSituation.09 != 'R06.6' and nem:eSituation.09 != 'R45.850' and nem:eSituation.09 != 'R06.4' and nem:eSituation.09 != 'K92.0' and nem:eSituation.09 != 'R99' and nem:eSituation.09 != 'R68.84' and nem:eSituation.09 != 'R22' and nem:eSituation.09 != 'R09.81' and nem:eSituation.09 != 'R11.0' and nem:eSituation.09 != 'R06.01' and nem:eSituation.09 != 'R07.89' and nem:eSituation.09 != 'R53.83' and nem:eSituation.09 != 'R53.81' and nem:eSituation.09 != 'R35.8' and nem:eSituation.09 != 'K08.8' and nem:eSituation.09 != 'M79.6' and nem:eSituation.09 != 'R10.3' and nem:eSituation.09 != 'R10.1' and nem:eSituation.09 != 'R23.1' and nem:eSituation.09 != 'R00.2' and nem:eSituation.09 != 'G82.2' and nem:eSituation.09 != 'R10.2' and nem:eSituation.09 != 'R06.3' and nem:eSituation.09 != 'R10.33' and nem:eSituation.09 != 'N48.3' and nem:eSituation.09 != 'L29.9' and nem:eSituation.09 != 'R21' and nem:eSituation.09 != 'R29.6' and nem:eSituation.09 != 'R09.2' and nem:eSituation.09 != 'R45.1' and nem:eSituation.09 != 'R06.02' and nem:eSituation.09 != 'R47.81' and nem:eSituation.09 != 'R40.0' and nem:eSituation.09 != 'R45.7' and nem:eSituation.09 != 'R46.2' and nem:eSituation.09 != 'R06.1' and nem:eSituation.09 != 'R45.851' and nem:eSituation.09 != 'R55' and nem:eSituation.09 != 'R25.1' and nem:eSituation.09 != 'G47.00' and nem:eSituation.09 != 'K59.00' and nem:eSituation.09 != 'R13.10' and nem:eSituation.09 != 'R40.20' and nem:eSituation.09 != 'R56.9' and nem:eSituation.09 != 'H91.90' and nem:eSituation.09 != 'H92.09' and nem:eSituation.09 != 'H57.10' and nem:eSituation.09 != 'R17' and nem:eSituation.09 != 'R32' and nem:eSituation.09 != 'H53.9' and nem:eSituation.09 != 'H54.7' and nem:eSituation.09 != 'R45.6' and nem:eSituation.09 != 'H53.14' and nem:eSituation.09 != 'R44.1' and nem:eSituation.09 != 'R53.1' and nem:eSituation.09 != 'R06.2' and nem:eSituation.09 != 'R45.82' and nem:eSituation.09 != 'G50.1' and nem:eSituation.09 != 'G83.10' and nem:eSituation.09 != 'J02' and nem:eSituation.09 != 'N93.9' and nem:eSituation.09 != 'Z00.129' and nem:eSituation.09 != 'Z00.00' and nem:eSituation.09 != 'R33.9' and nem:eSituation.09 != 'R11.10' and nem:eSituation.09 != 'L50')) and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2020-02-01T00:00:00-06:00'))">Primary Symptoms not on EMSA list will fail. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eScene.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.09"/> <sch:assert id="Rule_2659" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((nem:eScene.09 and nem:eScene.09 != '') and (not(nem:eScene.09 = ('Y92.00', 'Y92.12', 'Y92.13', 'Y92.14', 'Y92.16', 'Y92.196', 'Y92.219', 'Y92.23', 'Y92.29', 'Y92.318', 'Y92.41', 'Y92.51', 'Y92.520', 'Y92.531', 'Y92.532', 'Y92.69', 'Y92.82', 'Y92.248', 'Y92.832', 'Y92.838', 'Y92.85', 'Y92.9', 'Y92.7'))) and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2020-02-01T00:00:00-08:00') and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S65-50176' and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-51194' and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01, 'S62-50088')))">Limit location type to EMSA list.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eSituation.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.11"/> <sch:assert id="Rule_2660" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((nem:eSituation.11 and nem:eSituation.11 != '') and (not(nem:eSituation.11) or nem:eSituation.11 = '' or (nem:eSituation.11 != 'R10.84' and nem:eSituation.11 != 'R41.0' and nem:eSituation.11 != 'T71.9' and nem:eSituation.11 != 'T78.40' and nem:eSituation.11 != 'F10.92' and nem:eSituation.11 != 'R41.82' and nem:eSituation.11 != 'R68.13' and nem:eSituation.11 != 'T78.2' and nem:eSituation.11 != 'F99' and nem:eSituation.11 != 'T30.0' and nem:eSituation.11 != 'T58' and nem:eSituation.11 != 'I46.9' and nem:eSituation.11 != 'I49.9' and nem:eSituation.11 != 'R07.89' and nem:eSituation.11 != 'I21.3' and nem:eSituation.11 != 'I20.9' and nem:eSituation.11 != 'O80' and nem:eSituation.11 != 'J00' and nem:eSituation.11 != 'K59.1' and nem:eSituation.11 != 'R42' and nem:eSituation.11 != 'G24.0' and nem:eSituation.11 != 'T75.4' and nem:eSituation.11 != 'H93.90' and nem:eSituation.11 != 'R04.0' and nem:eSituation.11 != 'H57.9' and nem:eSituation.11 != 'I10' and nem:eSituation.11 != 'R50.9' and nem:eSituation.11 != 'N39.9' and nem:eSituation.11 != 'R53.1' and nem:eSituation.11 != 'Z77.9' and nem:eSituation.11 != 'R51' and nem:eSituation.11 != 'E13.65' and nem:eSituation.11 != 'T67.0' and nem:eSituation.11 != 'E13.64' and nem:eSituation.11 != 'T68' and nem:eSituation.11 != 'J68.9' and nem:eSituation.11 != 'K92.1' and nem:eSituation.11 != 'R11.2' and nem:eSituation.11 != 'Z38.2' and nem:eSituation.11 != 'G89.1' and nem:eSituation.11 != 'R99' and nem:eSituation.11 != 'F19' and nem:eSituation.11 != 'M79.60' and nem:eSituation.11 != 'R00.2' and nem:eSituation.11 != 'O60.0' and nem:eSituation.11 != 'J96.9' and nem:eSituation.11 != 'J98.01' and nem:eSituation.11 != 'J80' and nem:eSituation.11 != 'J81.0' and nem:eSituation.11 != 'G40.901' and nem:eSituation.11 != 'G40.909' and nem:eSituation.11 != 'A41.9' and nem:eSituation.11 != 'I95.9' and nem:eSituation.11 != 'J70.5' and nem:eSituation.11 != 'I63.9' and nem:eSituation.11 != 'T75.1XXA' and nem:eSituation.11 != 'R55' and nem:eSituation.11 != 'I46.8' and nem:eSituation.11 != 'K92.0' and nem:eSituation.11 != 'T14.90' and nem:eSituation.11 != 'N93.9' and nem:eSituation.11 != 'Z00.00' and nem:eSituation.11 != 'O99' and nem:eSituation.11 != 'T63')) and ../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2020-02-01T00:00:00-06:00'))">Rule to limit choices to EMSA&apos;s approved list. (eSitutation.11) </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eInjury.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.01"/> <sch:assert id="Rule_2661" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((not(nem:eInjury.01) or nem:eInjury.01 = '' or (count(nem:eInjury.01[text() = 'V00.8']) = 0 and count(nem:eInjury.01[text() = 'T74.2']) = 0 and count(nem:eInjury.01[text() = 'W50']) = 0 and count(nem:eInjury.01[text() = 'V80.9']) = 0 and count(nem:eInjury.01[text() = 'Y33']) = 0 and count(nem:eInjury.01[text() = 'T71.16']) = 0 and count(nem:eInjury.01[text() = 'T71.1']) = 0 and count(nem:eInjury.01[text() = 'T71.9']) = 0 and count(nem:eInjury.01[text() = 'Y00']) = 0 and count(nem:eInjury.01[text() = 'X99.9']) = 0 and count(nem:eInjury.01[text() = 'V49.3']) = 0 and count(nem:eInjury.01[text() = 'W55']) = 0 and count(nem:eInjury.01[text() = 'W31.9']) = 0 and count(nem:eInjury.01[text() = 'T75.0']) = 0 and count(nem:eInjury.01[text() = 'W40.9']) = 0 and count(nem:eInjury.01[text() = 'X31']) = 0 and count(nem:eInjury.01[text() = 'X30']) = 0 and count(nem:eInjury.01[text() = 'W88']) = 0 and count(nem:eInjury.01[text() = 'X00.1']) = 0 and count(nem:eInjury.01[text() = 'X00']) = 0 and count(nem:eInjury.01[text() = 'W01']) = 0 and count(nem:eInjury.01[text() = 'T76.9']) = 0 and count(nem:eInjury.01[text() = 'V29.9']) = 0 and count(nem:eInjury.01[text() = 'V86.99']) = 0 and count(nem:eInjury.01[text() = 'W17']) = 0 and count(nem:eInjury.01[text() = 'V19.3']) = 0 and count(nem:eInjury.01[text() = 'V19.9']) = 0 and count(nem:eInjury.01[text() = 'V03.9']) = 0 and count(nem:eInjury.01[text() = 'V09.9']) = 0 and count(nem:eInjury.01[text() = 'V89.9']) = 0 and count(nem:eInjury.01[text() = 'T50.90']) = 0 and count(nem:eInjury.01[text() = 'T75.4']) = 0 and count(nem:eInjury.01[text() = 'W22.8']) = 0 and count(nem:eInjury.01[text() = 'V95.9']) = 0 and count(nem:eInjury.01[text() = 'W74']) = 0 and count(nem:eInjury.01[text() = 'Y24.9']) = 0 and count(nem:eInjury.01[text() = 'V99']) = 0 and count(nem:eInjury.01[text() = 'V94.9']) = 0 and count(nem:eInjury.01[text() = 'T30']) = 0 and count(nem:eInjury.01[text() = 'T63']) = 0 and count(nem:eInjury.01[text() = 'Y28.9']) = 0)) and (nem:eInjury.01 and nem:eInjury.01 != '') and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2020-02-01T00:00:00-06:00'))">Document the cause of injury.Limited to the State cause of Injury list. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eSituation.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.12"/> <sch:assert id="Rule_2662" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((nem:eSituation.12 and nem:eSituation.12 != '') and (not(nem:eSituation.12) or nem:eSituation.12 = '' or (count(nem:eSituation.12[text() = 'R10.84']) = 0 and count(nem:eSituation.12[text() = 'R41.0']) = 0 and count(nem:eSituation.12[text() = 'T71.9']) = 0 and count(nem:eSituation.12[text() = 'F10.92']) = 0 and count(nem:eSituation.12[text() = 'T78.40']) = 0 and count(nem:eSituation.12[text() = 'R41.82']) = 0 and count(nem:eSituation.12[text() = 'R68.13']) = 0 and count(nem:eSituation.12[text() = 'T78.2']) = 0 and count(nem:eSituation.12[text() = 'F99']) = 0 and count(nem:eSituation.12[text() = 'T30.0']) = 0 and count(nem:eSituation.12[text() = 'T58']) = 0 and count(nem:eSituation.12[text() = 'I46.9']) = 0 and count(nem:eSituation.12[text() = 'I49.9']) = 0 and count(nem:eSituation.12[text() = 'I21.3']) = 0 and count(nem:eSituation.12[text() = 'R07.89']) = 0 and count(nem:eSituation.12[text() = 'I20.9']) = 0 and count(nem:eSituation.12[text() = 'O80']) = 0 and count(nem:eSituation.12[text() = 'J00']) = 0 and count(nem:eSituation.12[text() = 'O99']) = 0 and count(nem:eSituation.12[text() = 'K59.1']) = 0 and count(nem:eSituation.12[text() = 'R42']) = 0 and count(nem:eSituation.12[text() = 'G24.0']) = 0 and count(nem:eSituation.12[text() = 'T75.4']) = 0 and count(nem:eSituation.12[text() = 'H93.90']) = 0 and count(nem:eSituation.12[text() = 'R04.0']) = 0 and count(nem:eSituation.12[text() = 'H57.9']) = 0 and count(nem:eSituation.12[text() = 'I10']) = 0 and count(nem:eSituation.12[text() = 'R50.9']) = 0 and count(nem:eSituation.12[text() = 'N39.9']) = 0 and count(nem:eSituation.12[text() = 'R53.1']) = 0 and count(nem:eSituation.12[text() = 'Z77.9']) = 0 and count(nem:eSituation.12[text() = 'R51']) = 0 and count(nem:eSituation.12[text() = 'E13.65']) = 0 and count(nem:eSituation.12[text() = 'T67.0']) = 0 and count(nem:eSituation.12[text() = 'E13.64']) = 0 and count(nem:eSituation.12[text() = 'J68.9']) = 0 and count(nem:eSituation.12[text() = 'T68']) = 0 and count(nem:eSituation.12[text() = 'K92.1']) = 0 and count(nem:eSituation.12[text() = 'R11.2']) = 0 and count(nem:eSituation.12[text() = 'Z38.2']) = 0 and count(nem:eSituation.12[text() = 'G89.1']) = 0 and count(nem:eSituation.12[text() = 'R99']) = 0 and count(nem:eSituation.12[text() = 'F19']) = 0 and count(nem:eSituation.12[text() = 'M79.60']) = 0 and count(nem:eSituation.12[text() = 'R00.2']) = 0 and count(nem:eSituation.12[text() = 'O60.0']) = 0 and count(nem:eSituation.12[text() = 'J96.9']) = 0 and count(nem:eSituation.12[text() = 'J98.01']) = 0 and count(nem:eSituation.12[text() = 'J80']) = 0 and count(nem:eSituation.12[text() = 'J81.0']) = 0 and count(nem:eSituation.12[text() = 'G40.901']) = 0 and count(nem:eSituation.12[text() = 'G40.909']) = 0 and count(nem:eSituation.12[text() = 'I95.9']) = 0 and count(nem:eSituation.12[text() = 'A41.9']) = 0 and count(nem:eSituation.12[text() = 'J70.5']) = 0 and count(nem:eSituation.12[text() = 'I63.9']) = 0 and count(nem:eSituation.12[text() = 'T75.1XXA']) = 0 and count(nem:eSituation.12[text() = 'R55']) = 0 and count(nem:eSituation.12[text() = 'I46.8']) = 0 and count(nem:eSituation.12[text() = 'T14.90']) = 0 and count(nem:eSituation.12[text() = 'K92.0']) = 0 and count(nem:eSituation.12[text() = 'N93.9']) = 0 and count(nem:eSituation.12[text() = 'Z00.00']) = 0 and count(nem:eSituation.12[text() = 'T63']) = 0 and count(nem:eSituation.12[text() = 'Z20.828']) = 0 and count(nem:eSituation.12[text() = 'Z20.9']) = 0)) and ../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2020-02-01T00:00:00-06:00') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212029' or ../nem:eDisposition/nem:eDisposition.12 = '4212023') and (nem:eSituation.11 and nem:eSituation.11 != '') and nem:eSituation.12[@NV!='7701001'])">Rule to limit choices to EMSA&apos;s approved list (eSitutation.12)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eTimes.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.01"/> <sch:assert id="Rule_2663" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.05 != '' and xs:dateTime(nem:eTimes.05) &gt; xs:dateTime('2019-01-01T00:00:00-06:00')) and (nem:eTimes.01 != '' and xs:dateTime(nem:eTimes.01) &lt; xs:dateTime('2018-01-01T00:00:00-06:00') or nem:eTimes.02 != '' and xs:dateTime(nem:eTimes.02) &lt; xs:dateTime('2018-01-01T00:00:00-06:00') or nem:eTimes.03 != '' and xs:dateTime(nem:eTimes.03) &lt; xs:dateTime('2018-01-01T00:00:00-06:00') or nem:eTimes.04 != '' and xs:dateTime(nem:eTimes.04) &lt; xs:dateTime('2018-01-01T00:00:00-06:00')) and (not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65'))))">Incident Date is prior to 1.1.2018</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.12"/> <sch:assert id="Rule_2664" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.12) or nem:eDisposition.12 = '' or (nem:eDisposition.12 != '4212033' and nem:eDisposition.12 != '4212031' and nem:eDisposition.12 != '4212027' and nem:eDisposition.12 != '4212015' and nem:eDisposition.12 != '4212019' and nem:eDisposition.12 != '4212007' and nem:eDisposition.12 != '4212011' and nem:eDisposition.12 != '4212009' and nem:eDisposition.12 != '4212039' and nem:eDisposition.12 != '4212035' and nem:eDisposition.12 != '4212037' and nem:eDisposition.12 != '4212001' and nem:eDisposition.12 != '4212003' and nem:eDisposition.12 != '4212005' and nem:eDisposition.12 != '4212023' and nem:eDisposition.12 != '4212025' and nem:eDisposition.12 != '4212041' and nem:eDisposition.12 != '4212013' and nem:eDisposition.12 != '4212017' and nem:eDisposition.12 != '4212021' and nem:eDisposition.12 != '4212029' and nem:eDisposition.12 != '4212043')) and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2019-12-09T00:00:00-06:00')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S01') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S07') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S09') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S13') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S15') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S19') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S21') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S24') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S27') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S28') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S30') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S33') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S34') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S35') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S37') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S38') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S39') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S40') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S41') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S42') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S43') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S44') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S48') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S55') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S56') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S58') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S60') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S61') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65') or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-50616' or ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62-51190I' or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S66')))">Limit choices to NEMSIS Values only.</sch:assert>
			</sch:rule>
		</sch:pattern>

 		<sch:pattern>
			<sch:title>eResponse.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.03"/> <sch:assert id="Rule_2668" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((../nem:eRecord/nem:eRecord.01 and ../nem:eRecord/nem:eRecord.01 != '') and 
			(../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.02 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.02) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.04 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.04) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.05 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.05) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.06 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.06) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.07 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.07) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.08 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.08) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.09 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.09) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.10 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.10) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.11 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.11) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.12 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.12) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.13 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.13) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.14 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.14) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.15 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.15) &lt; xs:dateTime('2018-01-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.16 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.16) &lt; xs:dateTime('2018-01-01T00:00:00-08:00'))
			)">Check all Dates and Years on this call to make sure they are correct. </sch:assert>
			</sch:rule>
		</sch:pattern>

 		<sch:pattern>
			<sch:title>eResponse.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.03"/> <sch:assert id="Rule_2670" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((../nem:eRecord/nem:eRecord.01 and ../nem:eRecord/nem:eRecord.01 != '') and 
			(../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.02 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.02) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.04 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.04) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.05 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.05) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.06 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.06) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.07 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.07) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.08 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.08) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.09 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.09) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.10 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.10) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.11 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.11) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.12 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.12) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.13 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.13) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.14 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.14) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.15 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.15) &gt; xs:dateTime('2020-09-01T00:00:00-08:00')) or 
			(../nem:eTimes/nem:eTimes.16 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.16) &gt; xs:dateTime('2020-09-01T00:00:00-08:00'))
			)">Check all Dates and Years on this call to make sure they are correct. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eSituation.10 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.10"/> <sch:assert id="Rule_2671" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eSituation.10) or nem:eSituation.10 = '') and (not(nem:eSituation.10[@NV]) or nem:eSituation.10[@NV!='7701001']) and (nem:eSituation.09 and nem:eSituation.09 != '') and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2020-01-13T00:00:00-06:00'))">Other Associated Symptoms</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eTimes.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.01"/> <sch:assert id="Rule_6029" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.01 != '' and nem:eTimes.02 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.02) or nem:eTimes.01 != '' and nem:eTimes.03 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.03) or nem:eTimes.01 != '' and nem:eTimes.04 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.04) or nem:eTimes.01 != '' and nem:eTimes.05 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.05) or nem:eTimes.01 != '' and nem:eTimes.06 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.06) or nem:eTimes.01 != '' and nem:eTimes.07 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.07) or nem:eTimes.01 != '' and nem:eTimes.08 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.08) or nem:eTimes.01 != '' and nem:eTimes.09 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.09) or nem:eTimes.01 != '' and nem:eTimes.10 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.10) or nem:eTimes.01 != '' and nem:eTimes.11 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.11) or nem:eTimes.01 != '' and nem:eTimes.12 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.12) or nem:eTimes.01 != '' and nem:eTimes.13 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.13) or nem:eTimes.01 != '' and nem:eTimes.14 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.14) or nem:eTimes.01 != '' and nem:eTimes.15 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.15) or nem:eTimes.01 != '' and nem:eTimes.16 != '' and xs:dateTime(nem:eTimes.01) &gt; xs:dateTime(nem:eTimes.16)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Review all times on the call to verify they are in logical order ie back in service time can’t be prior to transfer of patient care.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse/nem:eResponse.ServiceGroup">
			<sch:let name="nemsisElements" value="nem:eResponse.05"/> <sch:assert id="Rule_6030" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.05) or nem:eResponse.05 = ''))">The Type of Service Requested is required with each record. (eResponse.05)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.25 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.HospitalTeamActivationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.25"/> <sch:assert id="Rule_6032" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eDisposition.25 != '' and ../../nem:eTimes/nem:eTimes.11 != '' and xs:dateTime(nem:eDisposition.25) &gt; xs:dateTime(../../nem:eTimes/nem:eTimes.11))">The sequence of time requires that Prearrival Activation occur before Patient Arrived at Destination. (eDisposition.25)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.08"/> <sch:assert id="Rule_6033" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.08) or nem:eResponse.08 = '') and (not(nem:eResponse.08[@NV]) or (nem:eResponse.08[@NV!='7701001'] and nem:eResponse.08[@NV!='7701003'])))">Whether there was a dispatch delay or not must be reported. (eResponse.08)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eResponse.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.08"/> <sch:assert id="Rule_11944" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(nem:eResponse.08[text() = '2208013']) != 0 and (nem:eResponse.08 = '2208001' or nem:eResponse.08 = '2208003' or nem:eResponse.08 = '2208005' or nem:eResponse.08 = '2208009' or nem:eResponse.08 = '2208007' or nem:eResponse.08 = '2208011' or nem:eResponse.08 = '2208015' or nem:eResponse.08 = '2208017'))">Type of dispatch delay should not be &quot;none&quot; and a valid delay at the same time. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.24 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.24"/> <sch:assert id="Rule_6034" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eResponse.24) or nem:eResponse.24 = '' or (count(nem:eResponse.24[text() = '2224023']) = 0 and count(nem:eResponse.24[text() = '2224015']) = 0 and count(nem:eResponse.24[text() = '2224019']) = 0 and count(nem:eResponse.24[text() = '2224007']) = 0 and count(nem:eResponse.24[text() = '2224013']) = 0)) and (nem:eResponse.23 = '2223001' or nem:eResponse.23 = '2223003' or nem:eResponse.23 = '2223007') and (not(nem:eResponse.07) or nem:eResponse.07 = '' or (not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = '2207011']) and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = '2207013'])))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Additional Response Mode Indicators should not have a not value and a real answer at the same time.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.07"/> <sch:assert id="Rule_6035" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.07) or nem:eResponse.07 = ''))">Primary Role of the Unit is a mandatory field. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.13"/> <sch:assert id="Rule_6036" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eTimes.13) or nem:eTimes.13 = '')) and ((../nem:eRecord/nem:eRecord.01 and ../nem:eRecord/nem:eRecord.01 != '') or (../nem:eResponse/nem:eResponse.03 and ../nem:eResponse/nem:eResponse.03 != '')))">Document the Finished/Back-in-Service time. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.13"/> <sch:assert id="Rule_6037" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.13) or nem:ePatient.13 = '') and (../nem:eTimes/nem:eTimes.07 and ../nem:eTimes/nem:eTimes.07 != ''))">Gender is missing when a Arrived Patient Time was given. (ePatient.13)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.07"/> <sch:assert id="Rule_6038" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eScene.07) or nem:eScene.07 = '') and nem:eScene.06 = '2707001')">MCI is missing when there was a patient encounter. (eScene.07)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation/nem:eSituation.PatientComplaintGroup">
			<sch:let name="nemsisElements" value="nem:eSituation.03"/> <sch:assert id="Rule_6039" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eSituation.03) or nem:eSituation.03 = '')) and ((nem:eSituation.04 and nem:eSituation.04 != '') or (nem:eSituation.04[@NV])) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Complaint Type is required when Complaint is noted. (eSituation.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.16 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.16"/> <sch:assert id="Rule_6040" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eDisposition.16) or nem:eDisposition.16 = '' or (nem:eDisposition.16 != '4216005' and nem:eDisposition.16 != '4216003' and nem:eDisposition.16 != '4216017' and nem:eDisposition.16 != '4216001')) and (nem:eDisposition.12 = '4212033' or nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or nem:eDisposition.12 = '4212031' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101']))">Transport Method needs a response when patient is transported. (eDisposition.16)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.16 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.16"/> <sch:assert id="Rule_6041" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eDisposition.16[@NV='7701003'] and (nem:eDisposition.12 = '4212033' or nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">A Transport Method should be provided when the dispo is patient transported. (eDisposition.16)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.18"/> <sch:assert id="Rule_6042" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eDisposition.18[@NV='7701001'] and (nem:eDisposition.17 = '4217001' or nem:eDisposition.17 = '4217003') and (not(../nem:eResponse/nem:eResponse.07) or ../nem:eResponse/nem:eResponse.07 = '' or (../nem:eResponse/nem:eResponse.07 != '2207011' and ../nem:eResponse/nem:eResponse.07 != '2207013')))">Additional transport mode(s) should not be N/A when transport mode includes &quot;emergent.&quot;  (eDisposition.18)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.18"/> <sch:assert id="Rule_6043" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eDisposition.18[@NV='7701003'] and (nem:eDisposition.17 = '4217001' or nem:eDisposition.17 = '4217003') and (not(../nem:eResponse/nem:eResponse.07) or ../nem:eResponse/nem:eResponse.07 = '' or (../nem:eResponse/nem:eResponse.07 != '2207011' and ../nem:eResponse/nem:eResponse.07 != '2207013')))">Additional Transport Mode(s) should not be &quot;Not Recorded&quot; when transport mode includes &quot;emergent.&quot;  (eDisposition.18)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.18"/> <sch:assert id="Rule_6044" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.18) or nem:eDisposition.18 = '') and (nem:eDisposition.17 and nem:eDisposition.17 != '') and (nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or nem:eDisposition.12 = '4212023') and (not(../nem:eResponse/nem:eResponse.07) or ../nem:eResponse/nem:eResponse.07 = '' or (../nem:eResponse/nem:eResponse.07 != '2207013' and ../nem:eResponse/nem:eResponse.07 != '2207011'))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Additional Transport Mode(s) is required with all patient transports (eDisposition.18).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.24 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.HospitalTeamActivationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.24"/> <sch:assert id="Rule_6045" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.24) or nem:eDisposition.24 = '') and (../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'])) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Indication that an alert (or activation) was called by EMS to the appropriate destination healthcare facility team. The alert (or activation) should occur prior to the EMS Unit arrival at the destination with the patient (eDisposition.24).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.25 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.HospitalTeamActivationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.25"/> <sch:assert id="Rule_6046" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eDisposition.25) or nem:eDisposition.25 = '') and (nem:eDisposition.24 and nem:eDisposition.24 != '') and nem:eDisposition.24 != '4224001')">When a prearrival alert/activation was made the time of notification is required. (eDisposition.25)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.11"/> <sch:assert id="Rule_6047" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eResponse.11) or nem:eResponse.11 = '') and (../nem:eTimes/nem:eTimes.09 and ../nem:eTimes/nem:eTimes.09 != '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Transport delay should be a valid delay at the same time. (eResponse.11)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.12"/> <sch:assert id="Rule_6048" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eResponse.12) or nem:eResponse.12 = '') and (../nem:eTimes/nem:eTimes.06 and ../nem:eTimes/nem:eTimes.06 != '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">If no patient is being transported by the unit, turn-around delay is any time delay that occurs from the time the unit arrived on scene until the unit is back in service or the unit back at the home location [whichever is the greater of the (eResponse.12)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.05"/> <sch:assert id="Rule_6049" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.05) or nem:eInjury.05 = '') and (nem:eInjury.01 = 'V86.99' or nem:eInjury.01 = 'V89.9' or nem:eInjury.01 = 'V29.9' or nem:eInjury.01 = 'V03.9')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Area of Vehicle Impacted must have a valid answer when Cause of Injury indicates an MVC. (eInjury.05)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
<!-- ICEMA rule 1237 -->
		<sch:pattern>
			<sch:title>eScene.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.01"/> <sch:assert id="Rule_6050" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eScene.01) or nem:eScene.01 = '') and (not(nem:eScene.01[@NV]) or nem:eScene.01[@NV!='7701001']) and (../nem:eTimes/nem:eTimes.06 and ../nem:eTimes/nem:eTimes.06 != '') and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">1st Unit on Scene should be &quot;Yes&quot; or &quot;No&quot; when time on scene is given. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.06"/> <sch:assert id="Rule_6051" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eScene.06) or nem:eScene.06 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Number of Patient at Scene is missing when there was a patient encounter. (eScene.06)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.08"/> <sch:assert id="Rule_6052" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eScene.08) or nem:eScene.08 = '') and nem:eScene.07 = '9923003')">Patient&apos;s Triage Classification is missing and the incident is an MCI.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.01"/> <sch:assert id="Rule_6053" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eSituation.01 != '' and ../nem:eTimes/nem:eTimes.13 != '' and xs:dateTime(nem:eSituation.01) &gt; xs:dateTime(../nem:eTimes/nem:eTimes.13))">Date/Time of Symptom Onset cannot occur after the EMS event. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.07"/> <sch:assert id="Rule_6054" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eSituation.07) or nem:eSituation.07 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037') and (not(nem:eSituation.07[@NV])))">Chief Complaint Anatomic Location is missing when there was a patient encounter. (eSituation.07)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.08"/> <sch:assert id="Rule_6055" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eSituation.08) or nem:eSituation.08 = '') and (not(nem:eSituation.08[@NV]))) and (../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037'))">Chief Complaint Organ System is missing when there was a patient encounter. (eSituation.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.07"/> <sch:assert id="Rule_6056" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.07) or nem:ePatient.07 = '') and nem:ePatient.10 = '17') and (../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patient&apos;s Home County is missing when a patient is encounted but not transported. (ePatient.07)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.08"/> <sch:assert id="Rule_6057" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.08) or nem:ePatient.08 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134']))">Patient Home State is missing when the dispo is Transported by this EMS Unit or AMA. (ePatient.08)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.08"/> <sch:assert id="Rule_6058" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.08) or nem:ePatient.08 = '')) and (../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212013' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eDisposition/nem:eDisposition.12 = '4212017' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037'))">Patient Home State is missing when a patient encounter but not transported. (ePatient.08)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.09"/> <sch:assert id="Rule_6059" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.09) or nem:ePatient.09 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101']) and (not(nem:ePatient.09[@NV])) and nem:ePatient.10 = '17')">Patient Home ZIP is missing when the dispo contains Transported (ePatient.09).</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>ePatient.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.09"/> <sch:assert id="Rule_6060" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.09) or nem:ePatient.09 = '') and nem:ePatient.10 = '17') and (../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212015'))">Patient Home State is missing when a patient encounter but not transported. (ePatient.09)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>ePatient.14 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.14"/> <sch:assert id="Rule_6061" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.14) or nem:ePatient.14 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019') and (not(nem:ePatient.14[@NV])))">Race is missing when there is a patient encounter but not transported.  (ePatient.14)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.15 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient/nem:ePatient.AgeGroup">
			<sch:let name="nemsisElements" value="nem:ePatient.15"/> <sch:assert id="Rule_6062" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:ePatient.15 != '' and nem:ePatient.15 &gt; 109) and (nem:ePatient.15 and nem:ePatient.15 != '') and (not(nem:ePatient.15[@NV]) or (nem:ePatient.15[@NV!='7701001'])) and (../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../../nem:eDisposition/nem:eDisposition.12 = '4212019')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Is patient actually over 110 year&apos;s of age? (ePatient.15)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.17 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.17"/> <sch:assert id="Rule_6063" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and (not(../nem:eHistory/nem:eHistory.01) or ../nem:eHistory/nem:eHistory.01 = '' or (count(../nem:eHistory/nem:eHistory.01[text() = '3101003']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101005']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101007']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101015']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101017']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101019']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101023']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101025']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101027']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101029']) = 0)) and (not(../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15) or ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 = '') and (not(nem:ePatient.17) or nem:ePatient.17 = '') and (not(nem:ePatient.17[@NV])) and (not(nem:ePatient.17[@PN])))">Patient&apos;s D.O.B. is required when the dispo is Transported by this EMS Unit.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.17 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.17"/> <sch:assert id="Rule_6064" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.17[@PN]) or (nem:ePatient.17[@PN!='8801019'] and nem:ePatient.17[@PN!='8801023'])) and (not(../nem:eHistory/nem:eHistory.01) or ../nem:eHistory/nem:eHistory.01 = '' or (count(../nem:eHistory/nem:eHistory.01[text() = '3101003']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101005']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101007']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101015']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101017']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101019']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101023']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101025']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101027']) = 0 and count(../nem:eHistory/nem:eHistory.01[text() = '3101029']) = 0)) and (../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212015')) and ((not(nem:ePatient.17) or nem:ePatient.17 = '') or (nem:ePatient.17[@NV='7701001'] or nem:ePatient.17[@NV='7701003']) or (not(../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15) or ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 = '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patient&apos;s D.O.B. Missing when a patient encounter but not transported.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.01"/> <sch:assert id="Rule_6065" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eAirway.01) or nem:eAirway.01 = '' or (count(nem:eAirway.01[text() = '4001001']) = 0 and count(nem:eAirway.01[text() = '4001003']) = 0 and count(nem:eAirway.01[text() = '4001005']) = 0 and count(nem:eAirway.01[text() = '4001007']) = 0 and count(nem:eAirway.01[text() = '4001009']) = 0 and count(nem:eAirway.01[text() = '4001011']) = 0 and count(nem:eAirway.01[text() = '4001013']) = 0)) and count(../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '232685002' or nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '232679009' or nem:eProcedures.03 = '241726007' or nem:eProcedures.03 = '232689008' or nem:eProcedures.03 = '427753009'))]) &gt; 0) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Indications for an Invasive Airway needs a valid answer when an advanced airway procedure was performed. (eAirway.01)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.04"/> <sch:assert id="Rule_6066" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eAirway.04) or nem:eAirway.04 = '' or (count(nem:eAirway.04[text() = '4004017']) = 0 and count(nem:eAirway.04[text() = '4004001']) = 0 and count(nem:eAirway.04[text() = '4004005']) = 0 and count(nem:eAirway.04[text() = '4004007']) = 0 and count(nem:eAirway.04[text() = '4004019']) = 0 and count(nem:eAirway.04[text() = '4004009']) = 0 and count(nem:eAirway.04[text() = '4004011']) = 0 and count(nem:eAirway.04[text() = '4004013']) = 0 and count(nem:eAirway.04[text() = '4004003']) = 0 and count(nem:eAirway.04[text() = '4004015']) = 0)) and count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '232685002' or nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '232679009' or nem:eProcedures.03 = '241726007' or nem:eProcedures.03 = '232689008'))]) &gt; 0) and (starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Airway Device Placement Confirmed Method needs a valid answer when an advanced airway procedure was performed.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itAirway.017 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup">
			<sch:let name="nemsisElements" value="nem:itAirway.017"/> <sch:assert id="Rule_6067" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = ''] or (count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.101']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.102']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.103']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.104']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.105']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.106']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.107']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.108']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.109']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.110']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.111']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.112']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.117']) = 0)) and count(../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '232685002' or nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '232679009' or nem:eProcedures.03 = '232689008' or nem:eProcedures.03 = '241726007'))]) &gt; 0) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Airway Complications Encountered needs a valid response when an advanced airway procedure was performed. (eAirway.08)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itAirway.018 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup">
			<sch:let name="nemsisElements" value="nem:itAirway.018"/> <sch:assert id="Rule_6068" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.018'][nem:eCustomResults.01 = ''] or (count(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.018'][nem:eCustomResults.01 = 'itAirway.018.101']) = 0 and count(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.018'][nem:eCustomResults.01 = 'itAirway.018.103']) = 0 and count(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.018'][nem:eCustomResults.01 = 'itAirway.018.104']) = 0 and count(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.018'][nem:eCustomResults.01 = 'itAirway.018.106']) = 0 and count(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.018'][nem:eCustomResults.01 = 'itAirway.018.109']) = 0 and count(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.018'][nem:eCustomResults.01 = 'itAirway.018.110']) = 0)) and (../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.101'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.102'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.103'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.104'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.105'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.106'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.107'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.108'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.109'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.110'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.111'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.017'][nem:eCustomResults.01 = 'itAirway.017.112'])) and (starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Reason for Failed Airway should have a valid answer when an airway complication is noted. (eAirway.09)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.01"/> <sch:assert id="Rule_6069" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eMedications.01 != '' and ../../nem:eTimes/nem:eTimes.07 != '' and xs:dateTime(nem:eMedications.01) &lt; xs:dateTime(../../nem:eTimes/nem:eTimes.07) and nem:eMedications.02 != '9923003')">Medication Admin Time should not be before Arrived Patient Time when not given PTA. (eMedications.01)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.01"/> <sch:assert id="Rule_6070" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eMedications.01 != '' and ../../nem:eTimes/nem:eTimes.13 != '' and xs:dateTime(nem:eMedications.01) &gt; xs:dateTime(../../nem:eTimes/nem:eTimes.13))">Medication Admin Time should not be after Unit Back in Service time. (eMedications.01)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.DosageGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.06"/> <sch:assert id="Rule_6071" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eMedications.06) or nem:eMedications.06 = '') and (../nem:eMedications.03 and ../nem:eMedications.03 != ''))">Medication Dosage Units is a required field on all Medications. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.DosageGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.06"/> <sch:assert id="Rule_6072" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eMedications.06[@NV='7701003'] and (../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03 and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03 != '') and (not(../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@NV]) or (../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@NV!='7701001'] and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@NV!='7701003'])) and (not(../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN]) or (../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN!='8801001'] and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN!='8801003'] and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN!='8801007'] and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN!='8801009'] and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN!='8801003'] and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN!='8801019'] and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN!='8801023'])))">Medication Dosage Units should not be “Not Reporting” when Medication Given has a real value (eMedications.06)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.DosageGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.06"/> <sch:assert id="Rule_6073" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eMedications.06) or nem:eMedications.06 = '') and (../nem:eMedications.03 and ../nem:eMedications.03 != '') and (not(../nem:eMedications.03[@NV]) or (../nem:eMedications.03[@NV!='7701001'])) and (not(../nem:eMedications.03[@PN]) or (../nem:eMedications.03[@PN!='8801001'] and ../nem:eMedications.03[@PN!='8801003'] and ../nem:eMedications.03[@PN!='8801007'] and ../nem:eMedications.03[@PN!='8801009'] and ../nem:eMedications.03[@PN!='8801019'] and ../nem:eMedications.03[@PN!='8801023'])))">Medication Dosage Units missing when Medication Given has a real value.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.01"/> <sch:assert id="Rule_6074" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eProcedures.01 != '' and ../../nem:eTimes/nem:eTimes.13 != '' and xs:dateTime(nem:eProcedures.01) &gt; xs:dateTime(../../nem:eTimes/nem:eTimes.13))">Time Procedure Performed should be before Unit Back in Service Time. (eProcedures.01)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.01"/> <sch:assert id="Rule_6075" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eProcedures.01 != '' and ../../nem:eTimes/nem:eTimes.07 != '' and xs:dateTime(nem:eProcedures.01) &lt; xs:dateTime(../../nem:eTimes/nem:eTimes.07) and nem:eProcedures.02 != '9923003')">Time Procedure Performed should be after Arrived Patient Time. (eProcedures.01) </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.01"/> <sch:assert id="Rule_6076" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eProcedures.01 != '' and ../../nem:eTimes/nem:eTimes.06 != '' and xs:dateTime(nem:eProcedures.01) &lt; xs:dateTime(../../nem:eTimes/nem:eTimes.06) and nem:eProcedures.02 != '9923003')">Time Procedure Performed should be after Arrived Scene Time. (eProcedures.01)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eProcedures.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.01"/> <sch:assert id="Rule_11591" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eProcedures.01[@NV='7701001'] and nem:eProcedures.02 != '9923003' and (nem:eProcedures.03 and nem:eProcedures.03 != '') and ../../nem:eTimes/nem:eTimes.02 != '' and xs:dateTime(../../nem:eTimes/nem:eTimes.02) &gt; xs:dateTime('2018-10-28T00:00:00-06:00'))">Time Procedure Performed should not be “N/A” when Procedure Performed has a real value (eProcedures.01)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eProcedures.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.01"/> <sch:assert id="Rule_11592" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eProcedures.01) or nem:eProcedures.01 = '') and nem:eProcedures.02 != '9923003' and (nem:eProcedures.03 and nem:eProcedures.03 != '') and ../../nem:eTimes/nem:eTimes.02 != '' and xs:dateTime(../../nem:eTimes/nem:eTimes.02) &gt; xs:dateTime('2018-10-28T00:00:00-06:00'))">Time Procedure Performed is missing when Procedure Performed is documented.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.03"/> <sch:assert id="Rule_6077" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eProcedures.03[@NV='7701001']) and ((not(nem:eProcedures.01[@NV]) or (nem:eProcedures.01[@NV!='7701001'] and nem:eProcedures.01[@NV!='7701003'] and nem:eProcedures.01[@NV!='7701005'])) or (nem:eProcedures.01 and nem:eProcedures.01 != '')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Procedure Name should not be “N/A” when a procedure time is given. (eProcedures.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.03"/> <sch:assert id="Rule_6078" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eProcedures.03[@NV='7701003']) and ((nem:eProcedures.01 and nem:eProcedures.01 != '') or (not(nem:eProcedures.01[@NV]) or (nem:eProcedures.01[@NV!='7701001'] and nem:eProcedures.01[@NV!='7701003'] and nem:eProcedures.01[@NV!='7701005']))))">Procedure Name should not be “Not Recorded” when a procedure time is given. (eProcedures.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
<!-- ICEMA rule 1434 -->
		<sch:pattern>
			<sch:title>eProcedures.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.03"/> <sch:assert id="Rule_6079" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eProcedures.03) or nem:eProcedures.03 = '') or nem:eProcedures.03[@NV='7701001']) and (nem:eProcedures.01 and nem:eProcedures.01 != '') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Procedure Name missing when a procedure time is given. (eProcedures.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.03"/> <sch:assert id="Rule_6080" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eProcedures.03[@NV='7701001'] and (nem:eProcedures.05 != '' and nem:eProcedures.05 &gt; 0) and nem:eProcedures.02 != '9923003') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Procedure Name should not be “N/A” when Procedure Attempts has a real value. (eProcedures.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.03"/> <sch:assert id="Rule_6081" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eProcedures.03[@NV] and nem:eProcedures.02 != '9923003' and (nem:eProcedures.05 != '' and nem:eProcedures.05 &gt; 0))">Procedure Name should not be “Not Recorded” when Procedure Attempts has a real value. (eProcedures.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.02"/> <sch:assert id="Rule_6082" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eVitals.02 != '9923003' and nem:eVitals.01 != '' and ../../nem:eTimes/nem:eTimes.07 != '' and xs:dateTime(nem:eVitals.01) &lt; xs:dateTime(../../nem:eTimes/nem:eTimes.07))">Vital sign obtained time is prior to arrive patient time and is not noted as PTA. (eVitals.02)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.01"/> <sch:assert id="Rule_6083" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eVitals.01 != '' and ../../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(nem:eVitals.01) &lt; xs:dateTime(../../nem:eTimes/nem:eTimes.03) and nem:eVitals.02 != '9923003')">Time vital signs obtained must be after Unit Notified when action was not performed PTA. (eVitals.01)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.01"/> <sch:assert id="Rule_6084" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eVitals.01 != '' and ../../nem:eTimes/nem:eTimes.13 != '' and xs:dateTime(nem:eVitals.01) &gt; xs:dateTime(../../nem:eTimes/nem:eTimes.13)) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Vital Sign Time cannot be after after Back In Service Time (eVitals.01)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.CardiacRhythmGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.03"/> <sch:assert id="Rule_6085" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eVitals.03[@NV='7701001'] and (nem:eVitals.04 = '3304001' or nem:eVitals.04 = '3304003' or nem:eVitals.04 = '3304005' or nem:eVitals.04 = '3304007' or nem:eVitals.04 = '3304009' or nem:eVitals.04 = '3304011' or nem:eVitals.04 = '3304013' or nem:eVitals.04 = '3304015'))">ECG Rhythm should not be “N/A” when a valid ECG Type is given. (eVitals.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.CardiacRhythmGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.03"/> <sch:assert id="Rule_6086" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eVitals.03) or nem:eVitals.03 = '') and (nem:eVitals.04 = '3304001' or nem:eVitals.04 = '3304003' or nem:eVitals.04 = '3304005' or nem:eVitals.04 = '3304007' or nem:eVitals.04 = '3304009' or nem:eVitals.04 = '3304011' or nem:eVitals.04 = '3304013' or nem:eVitals.04 = '3304015'))">ECG Rhythm missing when a valid ECG Type is given. (eVitals.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.CardiacRhythmGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.03"/> <sch:assert id="Rule_6087" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eVitals.03[@NV='7701001'] and (nem:eVitals.05 = '3305001' or nem:eVitals.05 = '3305003' or nem:eVitals.05 = '3305005' or nem:eVitals.05 = '3305007'))">ECG Rhythm should not be “N/A” when a Method of Interpretation is given.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.CardiacRhythmGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.03"/> <sch:assert id="Rule_6088" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eVitals.03) or nem:eVitals.03 = '') and (nem:eVitals.05 = '3305001' or nem:eVitals.05 = '3305003' or nem:eVitals.05 = '3305005' or nem:eVitals.05 = '3305007'))">ECG Rhythm missing when a valid Method of Interpretation is given.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.CardiacRhythmGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.04"/> <sch:assert id="Rule_6089" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eVitals.04[@NV='7701001'] and (nem:eVitals.03 = '9901001' or nem:eVitals.03 = '9901005' or nem:eVitals.03 = '9901017' or nem:eVitals.03 = '9901003' or nem:eVitals.03 = '9901007' or nem:eVitals.03 = '9901009' or nem:eVitals.03 = '9901011' or nem:eVitals.03 = '9901013' or nem:eVitals.03 = '9901015' or nem:eVitals.03 = '9901061' or nem:eVitals.03 = '9901059' or nem:eVitals.03 = '9901057' or nem:eVitals.03 = '9901055' or nem:eVitals.03 = '9901053' or nem:eVitals.03 = '9901051' or nem:eVitals.03 = '9901049' or nem:eVitals.03 = '9901047' or nem:eVitals.03 = '9901045' or nem:eVitals.03 = '9901043' or nem:eVitals.03 = '9901041' or nem:eVitals.03 = '9901039' or nem:eVitals.03 = '9901037' or nem:eVitals.03 = '9901035' or nem:eVitals.03 = '9901033' or nem:eVitals.03 = '9901031' or nem:eVitals.03 = '9901029' or nem:eVitals.03 = '9901027' or nem:eVitals.03 = '9901023' or nem:eVitals.03 = '9901025' or nem:eVitals.03 = '9901021' or nem:eVitals.03 = '9901019' or nem:eVitals.03 = '9901067' or nem:eVitals.03 = '9901071' or nem:eVitals.03 = '9901069' or nem:eVitals.03 = '9901063' or nem:eVitals.03 = '9901065'))">ECG Type should not be “N/A” when an ECG Rhythm was given.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.CardiacRhythmGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.04"/> <sch:assert id="Rule_6090" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eVitals.04) or nem:eVitals.04 = '') and (nem:eVitals.03 = '9901001' or nem:eVitals.03 = '9901005' or nem:eVitals.03 = '9901007' or nem:eVitals.03 = '9901003' or nem:eVitals.03 = '9901009' or nem:eVitals.03 = '9901011' or nem:eVitals.03 = '9901013' or nem:eVitals.03 = '9901015' or nem:eVitals.03 = '9901019' or nem:eVitals.03 = '9901017' or nem:eVitals.03 = '9901021' or nem:eVitals.03 = '9901023' or nem:eVitals.03 = '9901025' or nem:eVitals.03 = '9901027' or nem:eVitals.03 = '9901029' or nem:eVitals.03 = '9901033' or nem:eVitals.03 = '9901031' or nem:eVitals.03 = '9901035' or nem:eVitals.03 = '9901037' or nem:eVitals.03 = '9901041' or nem:eVitals.03 = '9901043' or nem:eVitals.03 = '9901045' or nem:eVitals.03 = '9901047' or nem:eVitals.03 = '9901049' or nem:eVitals.03 = '9901051' or nem:eVitals.03 = '9901053' or nem:eVitals.03 = '9901055' or nem:eVitals.03 = '9901057' or nem:eVitals.03 = '9901059' or nem:eVitals.03 = '9901061' or nem:eVitals.03 = '9901067' or nem:eVitals.03 = '9901071' or nem:eVitals.03 = '9901069' or nem:eVitals.03 = '9901063' or nem:eVitals.03 = '9901065' or nem:eVitals.03 = '9901039'))">ECG Type missing when an ECG Rhythm was given.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.10 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.HeartRateGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.10"/> <sch:assert id="Rule_6091" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eVitals.VitalGroup/nem:eVitals.HeartRateGroup[((nem:eVitals.10 and nem:eVitals.10 != ''))]) &lt; 1 and count(../../nem:eVitals.VitalGroup/nem:eVitals.HeartRateGroup[((nem:eVitals.10[@PN='8801005'] or nem:eVitals.10[@PN='8801019'] or nem:eVitals.10[@PN='8801023']))]) &lt; 1 and (../../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142']) and (not(nem:eVitals.10) or nem:eVitals.10 = ''))">Heart Rate is required with each patient contact (eVitals.10).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.29 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.StrokeScaleGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.29"/> <sch:assert id="Rule_6092" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eVitals.29) or nem:eVitals.29 = '')) and ((../../../nem:eSituation/nem:eSituation.11 = 'I63.9') or (../../../nem:eSituation/nem:eSituation.12 = 'I63.9') or (nem:eVitals.29 = '3329003' or nem:eVitals.29 = '3329005')))">Stroke Scale Score missing when Provider’s Primary or Secondary Impression is Stroke. (eVitals.29) </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eCrew.CrewGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eCrew">
			<sch:let name="nemsisElements" value="nem:eCrew.CrewGroup"/> <sch:assert id="Rule_6093" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:eCrew.CrewGroup[((nem:eCrew.03 = '2403011' or nem:eCrew.03 = '2403013'))]) &lt; 1 and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eDisposition/nem:eDisposition.12 = '4212025')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">There should be at least one Crew Member Role identified as the Primary Patient Caregiver. (eCrew.03) </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eCrew.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eCrew/nem:eCrew.CrewGroup">
			<sch:let name="nemsisElements" value="nem:eCrew.01"/> <sch:assert id="Rule_6094" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eCrew.01) or nem:eCrew.01 = '') and (nem:eCrew.02 = '9925017' or nem:eCrew.02 = '9925027' or nem:eCrew.02 = '9925013' or nem:eCrew.02 = '9925015' or nem:eCrew.02 = '9925019' or nem:eCrew.02 = '9925043') and (../../nem:eResponse/nem:eResponse.ServiceGroup/nem:eResponse.05 = '2205001' or ../../nem:eResponse/nem:eResponse.ServiceGroup/nem:eResponse.05 = '2205003' or ../../nem:eResponse/nem:eResponse.ServiceGroup/nem:eResponse.05 = '2205009' or ../../nem:eResponse/nem:eResponse.ServiceGroup/nem:eResponse.05 = '2205005')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">When a crew member level is an EMS certification or physician a certification number is required. (eCrew.01)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.10 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.10"/> <sch:assert id="Rule_6095" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eProcedures.03 = '232685002' or nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '232679009' or nem:eProcedures.03 = '232689008') and (not(nem:eProcedures.10) or nem:eProcedures.10 = '' or (nem:eProcedures.10 != '9905013' and nem:eProcedures.10 != '9905039' and nem:eProcedures.10 != '9905035' and nem:eProcedures.10 != '9905019' and nem:eProcedures.10 != '9905031' and nem:eProcedures.10 != '9905033' and nem:eProcedures.10 != '9905025' and nem:eProcedures.10 != '9905037' and nem:eProcedures.10 != '9905041' and nem:eProcedures.10 != '9905007' and not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eProcedures.10'][nem:eCustomResults.01 = 'it9905.132'])))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">The Role/Type of Person performing the airway procedure is not allowed to perform this skill. (eProcedures.10)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.09"/> <sch:assert id="Rule_6096" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eResponse.09) or nem:eResponse.09 = '') and (not(../nem:eTimes/nem:eTimes.05[@NV]) or (../nem:eTimes/nem:eTimes.05[@NV!='7701003'] and ../nem:eTimes/nem:eTimes.05[@NV!='7701001'])) and (../nem:eTimes/nem:eTimes.05 and ../nem:eTimes/nem:eTimes.05 != '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Type of Response Delay should have a valid answer when En Route Date/Time has a date/time value. (eResponse.09)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eResponse.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.09"/> <sch:assert id="Rule_11943" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(nem:eResponse.09[text() = '2209011']) != 0 and (nem:eResponse.09 = '2209001' or nem:eResponse.09 = '2209003' or nem:eResponse.09 = '2209005' or nem:eResponse.09 = '2209007' or nem:eResponse.09 = '2209033' or nem:eResponse.09 = '2209009' or nem:eResponse.09 = '2209031' or nem:eResponse.09 = '2209013' or nem:eResponse.09 = '2209015' or nem:eResponse.09 = '2209017' or nem:eResponse.09 = '2209019' or nem:eResponse.09 = '2209021' or nem:eResponse.09 = '2209023' or nem:eResponse.09 = '2209025' or nem:eResponse.09 = '2209027' or nem:eResponse.09 = '2209029'))">Type of response delay should not be &quot;none&quot; and a valid delay at the same time. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.10 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.10"/> <sch:assert id="Rule_6097" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eResponse.10) or nem:eResponse.10 = '') and (not(../nem:eTimes/nem:eTimes.06[@NV]) or (../nem:eTimes/nem:eTimes.06[@NV!='7701001'] and ../nem:eTimes/nem:eTimes.06[@NV!='7701003'])) and (../nem:eTimes/nem:eTimes.09 and ../nem:eTimes/nem:eTimes.09 != '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Type of Scene Delay needed when an Unit Left Scene date/time is given. (eResponse.10)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eResponse.10 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.10"/> <sch:assert id="Rule_11939" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(nem:eResponse.10[text() = '2210017']) != 0 and (nem:eResponse.10 = '2210001' or nem:eResponse.10 = '2210003' or nem:eResponse.10 = '2210005' or nem:eResponse.10 = '2210007' or nem:eResponse.10 = '2210009' or nem:eResponse.10 = '2210011' or nem:eResponse.10 = '2210013' or nem:eResponse.10 = '2210015' or nem:eResponse.10 = '2210039' or nem:eResponse.10 = '2210019' or nem:eResponse.10 = '2210021' or nem:eResponse.10 = '2210023' or nem:eResponse.10 = '2210025' or nem:eResponse.10 = '2210027' or nem:eResponse.10 = '2210029' or nem:eResponse.10 = '2210031' or nem:eResponse.10 = '2210033' or nem:eResponse.10 = '2210035' or nem:eResponse.10 = '2210037'))">Scene delay should not be &quot;none&quot; and a valid delay at the same time. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.11"/> <sch:assert id="Rule_6098" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eResponse.11[@NV='7701001']) and ((not(../nem:eTimes/nem:eTimes.11[@NV]) or (../nem:eTimes/nem:eTimes.11[@NV!='7701001'] and ../nem:eTimes/nem:eTimes.11[@NV!='7701003'])) or (not(../nem:eTimes/nem:eTimes.11) or ../nem:eTimes/nem:eTimes.11 = '')))">Type of Transport Delay should not be &quot;N/A&quot; when arrive facility time is given. (eResponse.11)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.11"/> <sch:assert id="Rule_6099" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eResponse.11[@NV='7701003']) and ((not(../nem:eTimes/nem:eTimes.11[@NV]) or (../nem:eTimes/nem:eTimes.11[@NV!='7701001'] and ../nem:eTimes/nem:eTimes.11[@NV!='7701003'])) or (../nem:eTimes/nem:eTimes.11 and ../nem:eTimes/nem:eTimes.11 != '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Type of Transport Delay should not be &quot;Not Recorded&quot; when arrive facility time is given. (eResponse.11)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.11"/> <sch:assert id="Rule_6100" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eResponse.11) or nem:eResponse.11 = '') and ../nem:eDisposition/nem:eDisposition.12 != '4212001') and ((../nem:eTimes/nem:eTimes.11 and ../nem:eTimes/nem:eTimes.11 != '') or (../nem:eTimes/nem:eTimes.11[@NV='7701001'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Type of Transport Delay is missing when arrive facility time is given. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eResponse.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.11"/> <sch:assert id="Rule_11942" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(nem:eResponse.11[text() = '2211011']) != 0 and (nem:eResponse.11 = '2211001' or nem:eResponse.11 = '2211003' or nem:eResponse.11 = '2211005' or nem:eResponse.11 = '2211007' or nem:eResponse.11 = '2211009' or nem:eResponse.11 = '2211013' or nem:eResponse.11 = '2211031' or nem:eResponse.11 = '2211015' or nem:eResponse.11 = '2211017' or nem:eResponse.11 = '2211019' or nem:eResponse.11 = '2211023' or nem:eResponse.11 = '2211021' or nem:eResponse.11 = '2211025' or nem:eResponse.11 = '2211027' or nem:eResponse.11 = '2211029'))">Type of transport delay should not be &quot;none&quot; and a valid delay at the same time. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.06"/> <sch:assert id="Rule_6101" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eTimes.06[@NV='7701003'] and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eDisposition/nem:eDisposition.12 = '4212009' or ../nem:eDisposition/nem:eDisposition.12 = '4212011'))">Unit Arrived Scene &quot;Not Recorded&quot; when dispo indicates scene arrival. (eTimes.06)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.07"/> <sch:assert id="Rule_6102" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.07) or nem:eTimes.07 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101']))">Arrived Patient Time is missing  when the disposition is a patient encounter or transport. (eTimes.07)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.12"/> <sch:assert id="Rule_6103" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eSituation.12 and nem:eSituation.12 != '') and (not(nem:eSituation.12[@NV]) or (nem:eSituation.12[@NV!='7701001'] and nem:eSituation.12[@NV!='7701003']))) and ((not(nem:eSituation.11) or nem:eSituation.11 = '') or (nem:eSituation.11[@NV='7701001'] or nem:eSituation.11[@NV='7701003'])))">Secondary Impression should not have a real answer when Primary Impression is blank or a Not Value. (eSituation.12)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.18"/> <sch:assert id="Rule_6104" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '33747003' or nem:eProcedures.03 = '104690002' or nem:eProcedures.03 = '302789003'))]) &gt; 0 and nem:eVitals.02 != '9923003') and (((not(nem:eVitals.18) or nem:eVitals.18 = '')) or ((nem:eVitals.18[@NV='7701001'] or nem:eVitals.18[@NV='7701003']) and (not(nem:eVitals.18[@PN]) or (nem:eVitals.18[@PN!='8801019'] and nem:eVitals.18[@PN!='8801023'])))))">When the procedure obtained blood glucose is given the blood glucose reading is needed. (eVitals.18)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam">
			<sch:let name="nemsisElements" value="nem:eExam.02"/> <sch:assert id="Rule_6105" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eExam.02) or nem:eExam.02 = '') and (../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 != '' and ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 &lt; 15) and (../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.16 = '2516003' or ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.16 = '2516005') and (nem:eExam.01 != '' and nem:eExam.01 &lt; 36)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Broselow/Luten Color is required on new born&apos;s less than 15 hours old.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eHistory.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory">
			<sch:let name="nemsisElements" value="nem:eHistory.09"/> <sch:assert id="Rule_6106" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eHistory.08 and nem:eHistory.08 != '') and (not(nem:eHistory.08[@NV]) or (nem:eHistory.08[@NV!='7701001'] and nem:eHistory.08[@NV!='7701003'])) and (not(nem:eHistory.08[@PN]) or (nem:eHistory.08[@PN!='8801023'] and nem:eHistory.08[@PN!='8801021'])) and (not(nem:eHistory.09) or nem:eHistory.09 = '') and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Medical History Obtained From is required when Medical/Surgical History is not blank. (eHistory.09)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.03"/> <sch:assert id="Rule_6107" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.03 != '' and nem:eTimes.05 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime(nem:eTimes.05) or nem:eTimes.03 != '' and nem:eTimes.06 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime(nem:eTimes.06) or nem:eTimes.03 != '' and nem:eTimes.07 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime(nem:eTimes.07) or nem:eTimes.03 != '' and nem:eTimes.08 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime(nem:eTimes.08) or nem:eTimes.03 != '' and nem:eTimes.09 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime(nem:eTimes.09) or nem:eTimes.03 != '' and nem:eTimes.11 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime(nem:eTimes.11) or nem:eTimes.03 != '' and nem:eTimes.12 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime(nem:eTimes.12) or nem:eTimes.03 != '' and nem:eTimes.14 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime(nem:eTimes.14)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Unit Notified by Dispatch appears to be out of sequence with other recorded date/time value(s). Review all times on the call to verify they are in logical order. ie back in service time can’t be prior to transfer of patient care.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.05"/> <sch:assert id="Rule_6108" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.05 != '' and nem:eTimes.02 != '' and xs:dateTime(nem:eTimes.05) &lt; xs:dateTime(nem:eTimes.02) or nem:eTimes.05 != '' and nem:eTimes.03 != '' and xs:dateTime(nem:eTimes.05) &lt; xs:dateTime(nem:eTimes.03) or nem:eTimes.05 != '' and nem:eTimes.06 != '' and xs:dateTime(nem:eTimes.05) &gt; xs:dateTime(nem:eTimes.06) or nem:eTimes.05 != '' and nem:eTimes.07 != '' and xs:dateTime(nem:eTimes.05) &gt; xs:dateTime(nem:eTimes.07) or nem:eTimes.05 != '' and nem:eTimes.08 != '' and xs:dateTime(nem:eTimes.05) &gt; xs:dateTime(nem:eTimes.08) or nem:eTimes.05 != '' and nem:eTimes.09 != '' and xs:dateTime(nem:eTimes.05) &gt; xs:dateTime(nem:eTimes.09) or nem:eTimes.05 != '' and nem:eTimes.11 != '' and xs:dateTime(nem:eTimes.05) &gt; xs:dateTime(nem:eTimes.11) or nem:eTimes.05 != '' and nem:eTimes.12 != '' and xs:dateTime(nem:eTimes.05) &gt; xs:dateTime(nem:eTimes.12) or nem:eTimes.05 != '' and nem:eTimes.14 != '' and xs:dateTime(nem:eTimes.05) &gt; xs:dateTime(nem:eTimes.14)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Unit En Route appears to be out of sequence with other recorded date/time value(s). Review all times on the call to verify they are in logical order. ie back in service time can’t be prior to transfer of patient care. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.09"/> <sch:assert id="Rule_6109" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.09 != '' and nem:eTimes.02 != '' and xs:dateTime(nem:eTimes.09) &lt; xs:dateTime(nem:eTimes.02) or nem:eTimes.09 != '' and nem:eTimes.03 != '' and xs:dateTime(nem:eTimes.09) &lt; xs:dateTime(nem:eTimes.03) or nem:eTimes.09 != '' and nem:eTimes.05 != '' and xs:dateTime(nem:eTimes.09) &lt; xs:dateTime(nem:eTimes.05) or nem:eTimes.09 != '' and nem:eTimes.06 != '' and xs:dateTime(nem:eTimes.09) &lt; xs:dateTime(nem:eTimes.06) or nem:eTimes.09 != '' and nem:eTimes.07 != '' and xs:dateTime(nem:eTimes.09) &lt; xs:dateTime(nem:eTimes.07) or nem:eTimes.09 != '' and nem:eTimes.08 != '' and xs:dateTime(nem:eTimes.09) &lt; xs:dateTime(nem:eTimes.08) or nem:eTimes.09 != '' and nem:eTimes.11 != '' and xs:dateTime(nem:eTimes.09) &gt; xs:dateTime(nem:eTimes.11) or nem:eTimes.09 != '' and nem:eTimes.12 != '' and xs:dateTime(nem:eTimes.09) &gt; xs:dateTime(nem:eTimes.12) or nem:eTimes.09 != '' and nem:eTimes.14 != '' and xs:dateTime(nem:eTimes.09) &gt; xs:dateTime(nem:eTimes.14)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Unit Left Scene appears to be out of sequence with other recorded date/time value(s). </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.14 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.14"/> <sch:assert id="Rule_6110" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.14 != '' and nem:eTimes.02 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.02) or nem:eTimes.14 != '' and nem:eTimes.03 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.03) or nem:eTimes.14 != '' and nem:eTimes.05 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.05) or nem:eTimes.14 != '' and nem:eTimes.06 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.06) or nem:eTimes.14 != '' and nem:eTimes.07 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.07) or nem:eTimes.14 != '' and nem:eTimes.08 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.08) or nem:eTimes.14 != '' and nem:eTimes.09 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.09) or nem:eTimes.14 != '' and nem:eTimes.11 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.11) or nem:eTimes.14 != '' and nem:eTimes.12 != '' and xs:dateTime(nem:eTimes.14) &lt; xs:dateTime(nem:eTimes.12)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Unit Canceled appears to be out of sequence with other recorded date/time value(s). </sch:assert>
			</sch:rule>
		</sch:pattern>

<!-- ICEMA rule ID: 1935 -->
		<sch:pattern>
			<sch:title>eSituation.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.12"/> <sch:assert id="Rule_6111" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eSituation.12 and nem:eSituation.12 != '') and (not(nem:eSituation.11) or nem:eSituation.11 = '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Providers Secondary Impressions must be blank when Providers Primary Impression is blank. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eRecord.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eRecord">
			<sch:let name="nemsisElements" value="nem:eRecord.01"/> <sch:assert id="Rule_6112" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eRecord.01) or nem:eRecord.01 = ''))">Patient Care Report Number is a mandatory field (eRecord.01)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.13"/> <sch:assert id="Rule_6113" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.13) or nem:eResponse.13 = ''))">EMS Vehicle (Unit) Number is a mandatory field. Rule </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.14 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.14"/> <sch:assert id="Rule_6114" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.14) or nem:eResponse.14 = ''))">EMS Unit Call Sign is a mandatory field. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.15 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.15"/> <sch:assert id="Rule_6115" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.15) or nem:eResponse.15 = ''))">Level of Care of This Unit is a mandatory field. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.23 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.23"/> <sch:assert id="Rule_6116" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.23) or nem:eResponse.23 = ''))">Response Mode to Scene is a mandatory field. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDispatch.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDispatch">
			<sch:let name="nemsisElements" value="nem:eDispatch.01"/> <sch:assert id="Rule_6117" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eDispatch.01) or nem:eDispatch.01 = ''))">Complaint Reported by Dispatch is a mandatory field (eDispatch.01). </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.03"/> <sch:assert id="Rule_6118" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.03) or nem:eTimes.03 = '') and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212039')))">Unit Notified by Dispatch Time is a mandatory field. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.12"/> <sch:assert id="Rule_6119" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.12) or nem:eDisposition.12 = '') or (not(nem:eDisposition.12) or nem:eDisposition.12 = '' or (nem:eDisposition.12 != '4212033' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142']) and nem:eDisposition.12 != '4212031' and nem:eDisposition.12 != '4212027' and nem:eDisposition.12 != '4212015' and nem:eDisposition.12 != '4212019' and nem:eDisposition.12 != '4212007' and nem:eDisposition.12 != '4212011' and nem:eDisposition.12 != '4212009' and nem:eDisposition.12 != '4212039' and nem:eDisposition.12 != 'it4212.109' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101']) and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134']) and nem:eDisposition.12 != '4212035' and nem:eDisposition.12 != '4212037' and nem:eDisposition.12 != '4212003' and nem:eDisposition.12 != '4212001' and nem:eDisposition.12 != '4212005' and nem:eDisposition.12 != '4212023' and nem:eDisposition.12 != '4212025' and nem:eDisposition.12 != '4212041' and nem:eDisposition.12 != '4212021' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']))) and nem:eDisposition.12 != '4212029') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Incident/Patient Disposition is a mandatory field (eDisposition.12). </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.03"/> <sch:assert id="Rule_6120" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.03) or nem:eResponse.03 = ''))">Incident Number is a required field.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.05"/> <sch:assert id="Rule_6121" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.05) or nem:eTimes.05 = '') and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../nem:eResponse/nem:eResponse.07 != '2207007')">Unit En Route Time is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.06"/> <sch:assert id="Rule_6122" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.06) or nem:eTimes.06 = '') and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212007' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.149']))))">Unit Arrived on Scene Time is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.09"/> <sch:assert id="Rule_6123" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.09) or nem:eTimes.09 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212017'))">En Route to Facility Time is a required field when patient is transported. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.11"/> <sch:assert id="Rule_6124" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.11) or nem:eTimes.11 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212017' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134']))">Patient Arrived at Destination Time is a required field when the patient was transported.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.13"/> <sch:assert id="Rule_6125" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.13) or nem:ePatient.13 = '') and (not(nem:ePatient.13[@NV])) and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../nem:eDisposition/nem:eDisposition.12 != '4212041' and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']))))">Gender is a required field.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.15 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient/nem:ePatient.AgeGroup">
			<sch:let name="nemsisElements" value="nem:ePatient.15"/> <sch:assert id="Rule_6126" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.15) or nem:ePatient.15 = '') and (not(nem:ePatient.15[@NV])) and (not(../../nem:eDisposition/nem:eDisposition.12) or ../../nem:eDisposition/nem:eDisposition.12 = '' or (../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../../nem:eDisposition/nem:eDisposition.12 != '4212041' and ../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.149']))))">Age is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.16 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient/nem:ePatient.AgeGroup">
			<sch:let name="nemsisElements" value="nem:ePatient.16"/> <sch:assert id="Rule_6127" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.16) or nem:ePatient.16 = '') and (nem:ePatient.15 and nem:ePatient.15 != ''))">Age Units is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.09"/> <sch:assert id="Rule_6128" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eScene.09) or nem:eScene.09 = '') and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']))))">Incident Location Type is a required field (eScene.09).  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.19 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.19"/> <sch:assert id="Rule_6129" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eScene.19) or nem:eScene.19 = '') and (not(nem:eScene.19[@NV])))">Incident ZIP Code is a required field . </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.02"/> <sch:assert id="Rule_6130" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eSituation.02) or nem:eSituation.02 = '') and (not(nem:eSituation.02[@NV])) and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../nem:eDisposition/nem:eDisposition.12 != '4212041' and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']))))">Possible Injury is a required field when trauma was sustained.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.09"/> <sch:assert id="Rule_6131" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eSituation.09) or nem:eSituation.09 = '') and (not(nem:eSituation.09[@NV])) and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212041' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']))))">Primary Symptom is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.11"/> <sch:assert id="Rule_6132" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eSituation.11) or nem:eSituation.11 = '') and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../nem:eDisposition/nem:eDisposition.12 != '4212041' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']))))">Providers Primary Impression is a required field (eSituation.11).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.02"/> <sch:assert id="Rule_6133" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eArrest.02) or nem:eArrest.02 = '') and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003'))">Cardiac Arrest Etiology is a required field when Cardiac Arrest (eArrest.02).  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.03"/> <sch:assert id="Rule_6134" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eArrest.03) or nem:eArrest.03 = '') and (not(nem:eArrest.03[@NV])) and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003'))">Resuscitation Attempted By EMS is a required field when Cardiac Arrest. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.04"/> <sch:assert id="Rule_6135" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eArrest.04) or nem:eArrest.04 = '') and (not(nem:eArrest.04[@NV])) and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003'))">Arrest Witnessed By is a required field when Cardiac Arrest. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.05"/> <sch:assert id="Rule_6136" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eArrest.05) or nem:eArrest.05 = '') and (not(nem:eArrest.05[@NV])) and (nem:eArrest.01 = '3001003'))">CPR Care Provided Prior to EMS Arrival is a required field when Cardiac Arrest occurred PTA.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.07"/> <sch:assert id="Rule_6137" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eArrest.07) or nem:eArrest.07 = '') and (not(nem:eArrest.07[@NV])) and (nem:eArrest.01 = '3001003' or nem:eArrest.01 = '3001005'))">AED Use Prior to EMS Arrival is a required field when Cardiac Arrest. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.12"/> <sch:assert id="Rule_6138" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eArrest.12) or nem:eArrest.12 = '') and (not(nem:eArrest.12[@NV])) and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003'))">Any Return of Spontaneous Circulation is a required field when Cardiac Arrest. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.14 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.14"/> <sch:assert id="Rule_6139" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eArrest.14) or nem:eArrest.14 = '') and (not(nem:eArrest.14[@NV])) and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003'))">Time of Cardiac Arrest is a required field when Cardiac Arrest. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.16 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.16"/> <sch:assert id="Rule_6140" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eArrest.16) or nem:eArrest.16 = '') and (not(nem:eArrest.16[@NV]))) and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003'))">Reason CPR/Resuscitation Discontinued is a required field when Cardiac Arrest. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eHistory.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory">
			<sch:let name="nemsisElements" value="nem:eHistory.01"/> <sch:assert id="Rule_6141" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eHistory.01) or nem:eHistory.01 = '') and (not(nem:eHistory.01[@NV]))) and ((../nem:eTimes/nem:eTimes.07 and ../nem:eTimes/nem:eTimes.07 != '') or (../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'])))">Barriers to Patient Care is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.01"/> <sch:assert id="Rule_6142" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eVitals.01) or nem:eVitals.01 = '') and nem:eVitals.02 != '9923003' and (not(nem:eVitals.01[@NV]))) and ((nem:eVitals.BloodPressureGroup/nem:eVitals.06 and nem:eVitals.BloodPressureGroup/nem:eVitals.06 != '') or (nem:eVitals.BloodPressureGroup/nem:eVitals.07 and nem:eVitals.BloodPressureGroup/nem:eVitals.07 != '') or (nem:eVitals.HeartRateGroup/nem:eVitals.10 and nem:eVitals.HeartRateGroup/nem:eVitals.10 != '') or (nem:eVitals.14 and nem:eVitals.14 != '')))">Time Vital Signs Taken is a required when vital sign recorded. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.DosageGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.05"/> <sch:assert id="Rule_6144" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eMedications.05) or nem:eMedications.05 = '') and (not(nem:eMedications.05[@NV])) and (../nem:eMedications.03 and ../nem:eMedications.03 != '') and ../nem:eMedications.02 != '9923003' and nem:eMedications.06 != '3706007')">Medication Dosage is a required field on all Medications. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.DosageGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.06"/> <sch:assert id="Rule_6145" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eMedications.06) or nem:eMedications.06 = '') and (../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03 and ../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03 != '') and (../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@NV]) and (../../../nem:eMedications/nem:eMedications.MedicationGroup/nem:eMedications.03[@PN]))">Medication Dosage Units is a required field on all Medications. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.07"/> <sch:assert id="Rule_6146" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eMedications.07) or nem:eMedications.07 = '') and (not(nem:eMedications.07[@NV])) and (nem:eMedications.03 and nem:eMedications.03 != ''))">Response to Medication is a required field on all Medications. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.01"/> <sch:assert id="Rule_6147" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eProcedures.01) or nem:eProcedures.01 = '') and (nem:eProcedures.03 and nem:eProcedures.03 != '') and nem:eProcedures.02 != '9923003') and (nem:eProcedures.01 != '' and ../../nem:eTimes/nem:eTimes.06 != '' and xs:dateTime(nem:eProcedures.01) &lt; xs:dateTime(../../nem:eTimes/nem:eTimes.06) or nem:eProcedures.01 != '' and ../../nem:eTimes/nem:eTimes.13 != '' and xs:dateTime(nem:eProcedures.01) &gt; xs:dateTime(../../nem:eTimes/nem:eTimes.13)))">Time Procedure Performed is a required field when Procedure is not blank. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.05"/> <sch:assert id="Rule_6148" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eProcedures.05) or nem:eProcedures.05 = '') and (nem:eProcedures.03 = '427753009' or nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '182705007' or nem:eProcedures.03 = '87750000' or nem:eProcedures.03 = '128968000' or nem:eProcedures.03 = '392230005' or nem:eProcedures.03 = '430824005' or nem:eProcedures.03 = '405427009') and nem:eProcedures.02 != '9923003')">Number of Procedure Attempts is a required field  for ALS airways and venous access.  </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eProcedures.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.06"/> <sch:assert id="Rule_12986" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eProcedures.06) or nem:eProcedures.06 = '') and (nem:eProcedures.03 and nem:eProcedures.03 != ''))">Procedure Successful is a required field for selected interventions.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.07"/> <sch:assert id="Rule_6150" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eProcedures.07) or nem:eProcedures.07 = '') and (not(nem:eProcedures.07[@NV])) and (nem:eProcedures.03 and nem:eProcedures.03 != '') and (not(nem:eProcedures.03) or nem:eProcedures.03 = '' or (nem:eProcedures.03 != '268400002' and nem:eProcedures.03 != '428803005' and nem:eProcedures.03 != '425543005' and nem:eProcedures.03 != '428482009')) and nem:eProcedures.02 != '9923003')">Procedure Complication is a required field when pertinent to the intervention performed.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.08"/> <sch:assert id="Rule_6151" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eProcedures.08) or nem:eProcedures.08 = '') and (not(nem:eProcedures.08[@NV])) and (nem:eProcedures.03 and nem:eProcedures.03 != '') and (not(nem:eProcedures.03) or nem:eProcedures.03 = '' or (nem:eProcedures.03 != '424287005' and nem:eProcedures.03 != '405427009' and nem:eProcedures.03 != '392230005' and nem:eProcedures.03 != '430824005' and nem:eProcedures.03 != '268400002' and nem:eProcedures.03 != '428803005' and nem:eProcedures.03 != '425543005' and nem:eProcedures.03 != '428482009')))">Response to Procedure is a required field on all Procedures. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.DestinationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.07"/> <sch:assert id="Rule_6152" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eDisposition.07) or nem:eDisposition.07 = '') and (../../nem:eTimes/nem:eTimes.11 and ../../nem:eTimes/nem:eTimes.11 != ''))">Destination ZIP Code is a required field when Patient Arrived at Destination is not blank.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.17 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.17"/> <sch:assert id="Rule_6153" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.17) or nem:eDisposition.17 = '') and nem:eDisposition.12 != '4212001') and ((../nem:eTimes/nem:eTimes.11 and ../nem:eTimes/nem:eTimes.11 != '') or (nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'])))">Transport Mode from Scene is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.20 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.20"/> <sch:assert id="Rule_6154" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.20) or nem:eDisposition.20 = '')) and ((nem:eDisposition.12 = '4212031' or nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142']) or (../nem:eDisposition/nem:eDisposition.DestinationGroup/nem:eDisposition.01 and ../nem:eDisposition/nem:eDisposition.DestinationGroup/nem:eDisposition.01 != '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Reason for Choosing Destination is a required field when Patient is transported.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.21"/> <sch:assert id="Rule_6155" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.21) or nem:eDisposition.21 = '')) and ((../nem:eTimes/nem:eTimes.11 and ../nem:eTimes/nem:eTimes.11 != '') or (nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'])))">Type of Destination is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eCrew.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eCrew/nem:eCrew.CrewGroup">
			<sch:let name="nemsisElements" value="nem:eCrew.02"/> <sch:assert id="Rule_6156" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eCrew.02) or nem:eCrew.02 = '')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Crew Member Level is a required field.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient/nem:ePatient.PatientNameGroup">
			<sch:let name="nemsisElements" value="nem:ePatient.02"/> <sch:assert id="Rule_6157" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.02) or nem:ePatient.02 = '') and (not(nem:ePatient.02[@NV])) and (not(nem:ePatient.02[@PN])) and (not(../../nem:eDisposition/nem:eDisposition.12) or ../../nem:eDisposition/nem:eDisposition.12 = '' or (../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../nem:eDisposition/nem:eDisposition.12 != '4212041'))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Please document the patient&apos;s last name.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient/nem:ePatient.PatientNameGroup">
			<sch:let name="nemsisElements" value="nem:ePatient.03"/> <sch:assert id="Rule_6158" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.03) or nem:ePatient.03 = '') and (not(nem:ePatient.03[@NV])) and (not(nem:ePatient.03[@PN])) and (not(../../nem:eDisposition/nem:eDisposition.12) or ../../nem:eDisposition/nem:eDisposition.12 = '' or (../../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../nem:eDisposition/nem:eDisposition.12 != '4212041'))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">First Name is a recommended field when Arrived at Patient is not blank.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.15 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.15"/> <sch:assert id="Rule_6159" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eScene.15) or nem:eScene.15 = '') and (not(nem:eScene.15[@NV]))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Incident Street Address is a required.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation/nem:eSituation.PatientComplaintGroup">
			<sch:let name="nemsisElements" value="nem:eSituation.04"/> <sch:assert id="Rule_6160" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eSituation.04) or nem:eSituation.04 = '') and (../../nem:eTimes/nem:eTimes.07 and ../../nem:eTimes/nem:eTimes.07 != '') and (not(nem:eSituation.04[@NV]))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Chief Complaint is a required field with patient contact (eSituation.04).  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eNarrative.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eNarrative">
			<sch:let name="nemsisElements" value="nem:eNarrative.01"/> <sch:assert id="Rule_6161" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eNarrative.01) or nem:eNarrative.01 = '') and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212039'))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patient Care Report Narrative is a required field. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam">
			<sch:let name="nemsisElements" value="nem:eExam.01"/> <sch:assert id="Rule_6162" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eExam.01) or nem:eExam.01 = '') and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../nem:eDisposition/nem:eDisposition.12 != '4212015' and ../nem:eDisposition/nem:eDisposition.12 != '4212019' and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212041'))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Estimated Body Weight in Kilograms is a recommended field when Arrived at Patient is not blank. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.DestinationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.01"/> <sch:assert id="Rule_6163" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.01) or nem:eDisposition.01 = '') and (not(nem:eDisposition.01[@NV])) and (not(../../nem:eDisposition/nem:eDisposition.21) or ../../nem:eDisposition/nem:eDisposition.21 = '' or (../../nem:eDisposition/nem:eDisposition.21 != '4221001' and ../../nem:eDisposition/nem:eDisposition.21 != '4221013'))) and ((../../nem:eTimes/nem:eTimes.11 and ../../nem:eTimes/nem:eTimes.11 != '') or (../../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'])))">Document the name of the receiving facility.  CARES - 17</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.06"/> <sch:assert id="Rule_6164" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eArrest.06) or nem:eArrest.06 = '') and nem:eArrest.05 = '9923003') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Who Provided CPR Prior to EMS Arrival is a necessary field when Cardiac Arrest is Yes. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.08"/> <sch:assert id="Rule_6165" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eArrest.08) or nem:eArrest.08 = '') and (nem:eArrest.07 = '3007003' or nem:eArrest.07 = '3007005')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Who Used AED Prior to EMS Arrival is a necessary field when Cardiac Arrest. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam/nem:eExam.AssessmentGroup">
			<sch:let name="nemsisElements" value="nem:eExam.03"/> <sch:assert id="Rule_11683" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eExam.03) or nem:eExam.03 = '') or nem:eExam.03 != '' and ../../nem:eTimes/nem:eTimes.12 != '' and xs:dateTime(nem:eExam.03) &gt; xs:dateTime(../../nem:eTimes/nem:eTimes.12)) and ((../../nem:eTimes/nem:eTimes.07 and ../../nem:eTimes/nem:eTimes.07 != '') or (../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../../nem:eDisposition/nem:eDisposition.12 = '4212003' or ../../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212033')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Time of Assessment is a necessary field on each Assessment. Time must be before Transfer of care time.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.16 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.16"/> <sch:assert id="Rule_6167" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.16 != '' and nem:eTimes.02 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.02) or nem:eTimes.16 != '' and nem:eTimes.03 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.03) or nem:eTimes.16 != '' and nem:eTimes.04 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.04) or nem:eTimes.16 != '' and nem:eTimes.05 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.05) or nem:eTimes.16 != '' and nem:eTimes.06 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.06) or nem:eTimes.16 != '' and nem:eTimes.07 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.07) or nem:eTimes.16 != '' and nem:eTimes.08 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.08) or nem:eTimes.16 != '' and nem:eTimes.09 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.09) or nem:eTimes.16 != '' and nem:eTimes.10 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.10) or nem:eTimes.16 != '' and nem:eTimes.11 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.11) or nem:eTimes.16 != '' and nem:eTimes.12 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.12) or nem:eTimes.16 != '' and nem:eTimes.13 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.13) or nem:eTimes.16 != '' and nem:eTimes.14 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.14) or nem:eTimes.16 != '' and nem:eTimes.15 != '' and xs:dateTime(nem:eTimes.16) &lt; xs:dateTime(nem:eTimes.15)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">EMS Call Completed appears to be out of sequence with other recorded date/time value(s).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.17 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.17"/> <sch:assert id="Rule_6168" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eScene.17) or nem:eScene.17 = '') and (not(nem:eScene.17[@NV]))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the name of the city in which the incident was located.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther">
			<sch:let name="nemsisElements" value="nem:eOther.08"/> <sch:assert id="Rule_6169" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.08) or nem:eOther.08 = '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the name of the individual completing this report.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.18"/> <sch:assert id="Rule_6170" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eScene.18) or nem:eScene.18 = '') and (not(nem:eScene.18[@NV])))">Document the State of the incident location.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.21"/> <sch:assert id="Rule_6171" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eScene.21) or nem:eScene.21 = '') and (not(nem:eScene.21[@NV])))">Document the name of the county in which the incident occurred</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse/nem:eResponse.ServiceGroup">
			<sch:let name="nemsisElements" value="nem:eResponse.05"/> <sch:assert id="Rule_6172" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.05) or nem:eResponse.05 = ''))">Please document the type of service requested</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.02"/> <sch:assert id="Rule_6174" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eTimes.02) or nem:eTimes.02 = '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Please document the dispatch notification time  (eTimes.02).  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.04"/> <sch:assert id="Rule_6175" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eMedications.04) or nem:eMedications.04 = '') and (nem:eMedications.03 and nem:eMedications.03 != '') and nem:eMedications.02 != '9923003') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the route used to administer the medication.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itMedications.010 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:itMedications.010"/> <sch:assert id="Rule_6176" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itMedications.010']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itMedications.010'][nem:eCustomResults.01 = '']) and nem:eMedications.02 != '9923003') and (nem:eMedications.04 = '9927015' or nem:eMedications.04 = '9927045') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the site of an IM or SQ medication Administration</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eMedications.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.09"/> <sch:assert id="Rule_6177" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eMedications.09) or nem:eMedications.09 = '') and (nem:eMedications.03 and nem:eMedications.03 != '') and nem:eMedications.02 != '9923003') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the name of the crew member who administered a medication.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.07"/> <sch:assert id="Rule_6179" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.07) or nem:eTimes.07 = '') and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212041')))">Document the time the crew arrived at patient (Patient Contact Time).  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.08"/> <sch:assert id="Rule_6180" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eTimes.08) or nem:eTimes.08 = '') and (not(nem:eTimes.08[@NV])) and (../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the time patient care was transferred to another field provider or law enforcement.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation/nem:eSituation.PatientComplaintGroup">
			<sch:let name="nemsisElements" value="nem:eSituation.05"/> <sch:assert id="Rule_6181" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eSituation.05) or nem:eSituation.05 = '') and (not(nem:eSituation.05[@NV])) and (nem:eSituation.04 and nem:eSituation.04 != '')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the duration of the chief complaint.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation/nem:eSituation.PatientComplaintGroup">
			<sch:let name="nemsisElements" value="nem:eSituation.06"/> <sch:assert id="Rule_6182" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eSituation.06) or nem:eSituation.06 = '') and (nem:eSituation.05 and nem:eSituation.05 != ''))">Document the time units of the chief complaint.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itDisposition.038 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:itDisposition.038"/> <sch:assert id="Rule_6183" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.038']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.038'][nem:eCustomResults.01 = '']) and (nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101']) and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Please document the transporting agency.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itDisposition.017 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:itDisposition.017"/> <sch:assert id="Rule_6184" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.017']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.017'][nem:eCustomResults.01 = '']) and (nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134']) and (../nem:eResponse/nem:eResponse.07 = '2207009' or ../nem:eResponse/nem:eResponse.07 = '2207007' or ../nem:eResponse/nem:eResponse.07 = '2207005')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Please document the Transporting Agency Unit #.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itTimes.007 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:itTimes.007"/> <sch:assert id="Rule_6185" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itTimes.007']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itTimes.007'][nem:eCustomResults.01 = '']) and (../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101']) and ../nem:eDisposition/nem:eDisposition.21 = '4221003' and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the time the Receiving Hospital was initially notified.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.12"/> <sch:assert id="Rule_6186" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eTimes.12) or nem:eTimes.12 = '')) and ((../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142']) or (nem:eTimes.11 and nem:eTimes.11 != '')))">Document the time the care of the patient was transferred to the receiving facility staff. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.13"/> <sch:assert id="Rule_6187" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.13) or nem:eTimes.13 = '') and (../nem:eResponse/nem:eResponse.03 and ../nem:eResponse/nem:eResponse.03 != ''))">Document the Finished/Back-in-Service time. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.14 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.14"/> <sch:assert id="Rule_6188" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eTimes.14) or nem:eTimes.14 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212011' or ../nem:eDisposition/nem:eDisposition.12 = '4212009' or ../nem:eDisposition/nem:eDisposition.12 = '4212007' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the time the unit was cancelled.  </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eVitals.26 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.26"/> <sch:assert id="Rule_6189" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../nem:eVitals.VitalGroup[((nem:eVitals.26 and nem:eVitals.26 != ''))]) &lt; 1 and (not(../../nem:eDisposition/nem:eDisposition.12) or ../../nem:eDisposition/nem:eDisposition.12 = '' or (../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../nem:eDisposition/nem:eDisposition.12 != '4212041')) and (not(nem:eVitals.26) or nem:eVitals.26 = '') and (not(nem:eVitals.26[@NV])))">Document the Level of Responsiveness (AVPU) for each patient treated/evaluated.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.02"/> <sch:assert id="Rule_6191" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '427753009' or nem:eProcedures.03 = '397982008'))]) &gt; 0 and count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[(nem:eProcedures.06 = '9923003')]) &gt; 0 and (not(nem:eAirway.02) or nem:eAirway.02 = '') and (not(nem:eAirway.02[@NV])))">Document the time when the placement of the ALS airway was confirmed.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
<!-- ICEMA rule 2020 -->
		<sch:pattern>
			<sch:title>itVitals.026 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:itVitals.026"/> <sch:assert id="Rule_6192" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.026'][nem:eCustomResults.01 != '']) &lt; 1 and not(nem:eVitals.StrokeScaleGroup/nem:eVitals.29[@NV]) and not(nem:eVitals.StrokeScaleGroup/nem:eVitals.29[@PN]) and (not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.026']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.026'][nem:eCustomResults.01 = '']) and (../../nem:eSituation/nem:eSituation.11 = 'I63.9' or ../../nem:eSituation/nem:eSituation.12 = 'I63.9' or count(../../nem:eOther/nem:eOther.02[text() = '4502007']) != 0 or (nem:eVitals.StrokeScaleGroup/nem:eVitals.29 = '3329005')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')) and ../../nem:eScene/nem:eScene.09 != 'Y92.23')">USE STROKE POWERTOOL to Document the assessment if a facial droop on the Stroke Scale.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.19 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.19"/> <sch:assert id="Rule_6194" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup[((nem:eVitals.19 and nem:eVitals.19 != ''))]) &lt; 1 and (not(../../../nem:eDisposition/nem:eDisposition.12) or ../../../nem:eDisposition/nem:eDisposition.12 = '' or (../../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../../../nem:eDisposition/nem:eDisposition.12 != '4212011' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212041')) and (not(nem:eVitals.19[@NV])) and (not(nem:eVitals.19[@PN])))">Document the Eye component of the Glasgow Coma Score.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.20 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.20"/> <sch:assert id="Rule_6195" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup[((nem:eVitals.20 and nem:eVitals.20 != ''))]) &lt; 1 and (not(../../../nem:eDisposition/nem:eDisposition.12) or ../../../nem:eDisposition/nem:eDisposition.12 = '' or (../../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../../../nem:eDisposition/nem:eDisposition.12 != '4212011' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212041')) and (not(nem:eVitals.20[@NV])) and (not(nem:eVitals.20[@PN])))">Document the Verbal portion of the Glasgow Coma Scale.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.21"/> <sch:assert id="Rule_6196" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup[((nem:eVitals.21 and nem:eVitals.21 != ''))]) &lt; 1 and (not(../../../nem:eDisposition/nem:eDisposition.12) or ../../../nem:eDisposition/nem:eDisposition.12 = '' or (../../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../../../nem:eDisposition/nem:eDisposition.12 != '4212011' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212041')) and (not(nem:eVitals.21[@NV])) and (not(nem:eVitals.21[@PN])))">Document the Motor component of the Glasgow Coma Scale.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam/nem:eExam.AssessmentGroup">
			<sch:let name="nemsisElements" value="nem:eExam.04"/> <sch:assert id="Rule_6197" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../nem:eExam.AssessmentGroup[((nem:eExam.04 and nem:eExam.04 != ''))]) &lt; 1 and (../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and (not(nem:eExam.04) or nem:eExam.04 = '')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Skin Assessment is required when patient contact is made</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.21"/> <sch:assert id="Rule_6198" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eDisposition.21 != '4221009' and (nem:eDisposition.12 = '4212015' or nem:eDisposition.12 = '4212019'))">Document the Coroner/Morgue as the destination type for all patients pronounced dead on scene.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eHistory.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory">
			<sch:let name="nemsisElements" value="nem:eHistory.06"/> <sch:assert id="Rule_6199" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eHistory.06) or nem:eHistory.06 = '') and (not(nem:eHistory.06[@NV])) and (not(nem:eHistory.06[@PN]))) and ((../nem:eTimes/nem:eTimes.07 and ../nem:eTimes/nem:eTimes.07 != '') or (../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eDisposition/nem:eDisposition.12 = '4212003' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the patient&apos;s medication allergies.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eHistory.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory">
			<sch:let name="nemsisElements" value="nem:eHistory.08"/> <sch:assert id="Rule_6201" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eHistory.08) or nem:eHistory.08 = '') and (not(nem:eHistory.08[@NV]) or (nem:eHistory.08[@NV!='7701001'] and nem:eHistory.08[@NV!='7701003'] and nem:eHistory.08[@NV!='7701005'])) and (not(nem:eHistory.08[@PN]) or (nem:eHistory.08[@PN!='8801015'] and nem:eHistory.08[@PN!='8801019'] and nem:eHistory.08[@PN!='8801023'] and nem:eHistory.08[@PN!='8801021'])) and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212041'))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the patient&apos;s medical history.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eHistory.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory/nem:eHistory.CurrentMedsGroup">
			<sch:let name="nemsisElements" value="nem:eHistory.12"/> <sch:assert id="Rule_6202" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eHistory.12) or nem:eHistory.12 = '') and (not(nem:eHistory.12[@NV])) and (not(nem:eHistory.12[@PN]))) and ((../../nem:eTimes/nem:eTimes.07 and ../../nem:eTimes/nem:eTimes.07 != '') or (../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../../nem:eDisposition/nem:eDisposition.12 = '4212003' or ../../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'])) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the patient&apos;s medications.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eHistory.CurrentMedsGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory">
			<sch:let name="nemsisElements" value="nem:eHistory.CurrentMedsGroup"/> <sch:assert id="Rule_6203" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:eHistory.CurrentMedsGroup) = 0 and (not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212041'))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the patient&apos;s medications.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.01"/> <sch:assert id="Rule_6204" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.01) or nem:eInjury.01 = '')) and ((../nem:eSituation/nem:eSituation.02 = '9922005') or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.109']))">Document the cause of injury.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.02"/> <sch:assert id="Rule_6205" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.02) or nem:eInjury.02 = '') and (not(nem:eInjury.02[@NV]))) and ((../nem:eSituation/nem:eSituation.02 = '9922005') or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.109']) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the mechanism of injury.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.BloodPressureGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.06"/> <sch:assert id="Rule_6206" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eVitals.VitalGroup/nem:eVitals.BloodPressureGroup[((nem:eVitals.06 and nem:eVitals.06 != ''))]) &lt; 1 and count(../../nem:eVitals.VitalGroup/nem:eVitals.BloodPressureGroup[((nem:eVitals.06[@NV]))]) &lt; 1 and count(../../nem:eVitals.VitalGroup/nem:eVitals.BloodPressureGroup[((nem:eVitals.06[@PN]))]) &lt; 1 and (../../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and (not(nem:eVitals.06) or nem:eVitals.06 = ''))">Document at least one SBP measurement.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.01"/> <sch:assert id="Rule_6207" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eVitals.01) or nem:eVitals.01 = '')) and ((nem:eVitals.26 and nem:eVitals.26 != '') or (nem:eVitals.GlasgowScoreGroup/nem:eVitals.19 and nem:eVitals.GlasgowScoreGroup/nem:eVitals.19 != '') or (nem:eVitals.GlasgowScoreGroup/nem:eVitals.20 and nem:eVitals.GlasgowScoreGroup/nem:eVitals.20 != '') or (nem:eVitals.GlasgowScoreGroup/nem:eVitals.21 and nem:eVitals.GlasgowScoreGroup/nem:eVitals.21 != '') or (../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.019'] and ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.019'][nem:eCustomResults.01 != '']) or (nem:eVitals.15 and nem:eVitals.15 != '') or (../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.002'] and ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.002'][nem:eCustomResults.01 != ''])))">Document the time AVPU, or GCS, or ABCs were assessed.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.03"/> <sch:assert id="Rule_6208" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.03) or nem:eInjury.03 = '') and (not(nem:eInjury.03[@NV]))) and ((../nem:eOther/nem:eOther.02 = '4502017' or ../nem:eOther/nem:eOther.02 = '4502003') or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.109'] or ../nem:eSituation/nem:eSituation.02 = '9922005'))">Document if a patient with a traumatic injury meets trauma triage criteria.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.04"/> <sch:assert id="Rule_6209" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.04) or nem:eInjury.04 = '') and (not(nem:eInjury.04[@NV])) and (not(nem:eInjury.04[@PN]))) and (../nem:eSituation/nem:eSituation.02 = '9922005' or (../nem:eOther/nem:eOther.02 = '4502017') or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.109']))">Document other injury risk factors.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.06"/> <sch:assert id="Rule_6210" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.06) or nem:eInjury.06 = '') and (nem:eInjury.01 = 'V89.9' or nem:eInjury.01 = 'V49.3')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the location of the patient in the vehicle (eInjury.06). </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.07"/> <sch:assert id="Rule_6211" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.07) or nem:eInjury.07 = '') and (not(nem:eInjury.07[@NV])) and (nem:eInjury.01 = 'V29.9' or nem:eInjury.01 = 'V19.9' or nem:eInjury.01 = 'W31.9' or nem:eInjury.01 = 'V89.9' or nem:eInjury.01 = 'V03.9' or nem:eInjury.01 = 'W17')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the presence occupant/patient safety equipment.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.08"/> <sch:assert id="Rule_6212" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.08) or nem:eInjury.08 = '') and (nem:eInjury.01 = 'V89.9')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document airbag deployment (eInjury).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eInjury.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eInjury">
			<sch:let name="nemsisElements" value="nem:eInjury.09"/> <sch:assert id="Rule_6213" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eInjury.09) or nem:eInjury.09 = '') and (nem:eInjury.01 = 'W17' or nem:eInjury.01 = 'W01')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the height of the fall.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.09"/> <sch:assert id="Rule_6214" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eProcedures.09) or nem:eProcedures.09 = '') and (not(nem:eProcedures.09[@NV])) and (nem:eProcedures.03 and nem:eProcedures.03 != '') and nem:eProcedures.02 != '9923003') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the crew member who performed the procedure.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.05"/> <sch:assert id="Rule_6215" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '232674004'))]) &gt; 0 and count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[(nem:eProcedures.06 = '9923003')]) &gt; 0 and (not(nem:eAirway.05) or nem:eAirway.05 = '')) and (starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the ETT depth.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.06"/> <sch:assert id="Rule_6216" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')) or (count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '427753009' or nem:eProcedures.03 = '397982008'))]) &gt; 0 and count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[(nem:eProcedures.06 = '9923003')]) &gt; 0 and (not(nem:eAirway.06) or nem:eAirway.06 = '') and (not(nem:eAirway.06[@NV]))))">Document the type of individual who confirmed the ALS airway placement. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.04"/> <sch:assert id="Rule_6217" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '427753009' or nem:eProcedures.03 = '232674004'))]) &gt; 0 and count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[(nem:eProcedures.06 = '9923003')]) &gt; 0 and (not(nem:eAirway.04) or nem:eAirway.04 = '') and (not(nem:eAirway.04[@NV]))) and (starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the ALS airway confirmation method. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.07"/> <sch:assert id="Rule_6225" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '427753009'))]) &gt; 0 and count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[(nem:eProcedures.06 = '9923003')]) &gt; 0 and (not(nem:eAirway.07) or nem:eAirway.07 = '') and (not(nem:eAirway.07[@NV]))) and (starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the crew member who confirmed the placement of the ALS airway.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
<!-- ICEMA rule 2062 -->
		<sch:pattern>
			<sch:title>itVitals.027 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:itVitals.027"/> <sch:assert id="Rule_6226" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.027'][nem:eCustomResults.01 != '']) &lt; 1 and not(nem:eVitals.StrokeScaleGroup/nem:eVitals.29[@NV]) and not(nem:eVitals.StrokeScaleGroup/nem:eVitals.29[@PN]) and (not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.027']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.027'][nem:eCustomResults.01 = '']) and (../../nem:eSituation/nem:eSituation.11 = 'I63.9' or ../../nem:eSituation/nem:eSituation.12 = 'I63.9' or count(../../nem:eOther/nem:eOther.02[text() = '4502007']) != 0 or (nem:eVitals.StrokeScaleGroup/nem:eVitals.29 = '3329005')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')) and ../../nem:eScene/nem:eScene.09 != 'Y92.23')">USE STROKE POWERTOOL to Document the arm drift component of the stroke assessment.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.VitalGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals">
			<sch:let name="nemsisElements" value="nem:eVitals.VitalGroup"/> <sch:assert id="Rule_6227" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:eVitals.VitalGroup) &lt; 1 and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Vital signs are required for each patient contact.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.ConfirmationGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.ConfirmationGroup"/> <sch:assert id="Rule_6228" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:eAirway.ConfirmationGroup) = 0 and count(../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '427753009' or nem:eProcedures.03 = '232674004'))]) &gt; 0) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the airway confirmations when an ALS airway is placed.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.15 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.15"/> <sch:assert id="Rule_6229" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eArrest.15) or nem:eArrest.15 = '') and (not(nem:eArrest.15[@NV])) and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003') and (nem:eArrest.16 and nem:eArrest.16 != '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document if resuscitation was discontinued.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.04"/> <sch:assert id="Rule_6230" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eProcedures.04) or nem:eProcedures.04 = '') and (nem:eProcedures.03 = '427753009' or nem:eProcedures.03 = '232674004' or nem:eProcedures.03 = '182692007' or nem:eProcedures.03 = '7443007' or nem:eProcedures.03 = '182705007' or nem:eProcedures.03 = '392230005' or nem:eProcedures.03 = '430824005' or nem:eProcedures.03 = '405427009') and nem:eProcedures.02 != '9923003') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the size of the airway or catheter used.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itAirway.013 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup">
			<sch:let name="nemsisElements" value="nem:itAirway.013"/> <sch:assert id="Rule_6231" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '427753009' or nem:eProcedures.03 = '232674004'))]) &gt; 0 and count(../../../nem:eProcedures/nem:eProcedures.ProcedureGroup[(nem:eProcedures.06 = '9923003')]) &gt; 0 and (not(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.013']) or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itAirway.013'][nem:eCustomResults.01 = ''])) and (starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the patient was preoxygenated prior to airway placement attempts.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itVitals.001 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:itVitals.001"/> <sch:assert id="Rule_6233" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.001']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.001'][nem:eCustomResults.01 = '']) and (nem:eVitals.12 and nem:eVitals.12 != '') and ../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the pulse oximetry qualifier each time a pulse oximetry value is recorded. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.21"/> <sch:assert id="Rule_6235" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eResponse.21) or nem:eResponse.21 = '') and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134']) and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document ending odometer mileage.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther">
			<sch:let name="nemsisElements" value="nem:eOther.02"/> <sch:assert id="Rule_6236" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.02) or nem:eOther.02 = '')) and (count(../nem:eDisposition/nem:eDisposition.20[text() = '4220021']) != 0 or (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.107'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.109'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.108'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.106'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.002'][nem:eCustomResults.01 = 'itDisposition.002.105'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the specific reason a specialty center was the reason for choosing the destination. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.13"/> <sch:assert id="Rule_6237" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.13) or nem:eOther.13 = '') and (nem:eOther.12 = '4512015' or nem:eOther.12 = '4512017') and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515003' and nem:eOther.15 != '4515005' and nem:eOther.15 != '4515007' and nem:eOther.15 != '4515009' and nem:eOther.15 != '4515011' and nem:eOther.15 != '4515013' and nem:eOther.15 != '4515015' and nem:eOther.15 != '4515017' and nem:eOther.15 != '4515019' and nem:eOther.15 != '4515021' and nem:eOther.15 != '4515023' and nem:eOther.15 != '4515025' and nem:eOther.15 != '4515027' and nem:eOther.15 != '4515033' and nem:eOther.15 != '4515001'))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the reason the patient&apos;s or patient&apos;s parent/guardian/representative&apos;s signature was obtained. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
<!-- ICEMA rule 2074 -->
		<sch:pattern>
			<sch:title>itOther.001 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:itOther.001"/> <sch:assert id="Rule_6238" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itOther.001']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itOther.001'][nem:eCustomResults.01 = '']) and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515029' and nem:eOther.15 != '4515015' and nem:eOther.15 != '4515003' and nem:eOther.15 != '4515005' and nem:eOther.15 != '4515011' and nem:eOther.15 != '4515013' and nem:eOther.15 != '4515007' and nem:eOther.15 != '4515001' and nem:eOther.15 != '4515009' and nem:eOther.15 != '4515017' and nem:eOther.15 != '4515019' and nem:eOther.15 != '4515021' and nem:eOther.15 != '4515023' and nem:eOther.15 != '4515025' and nem:eOther.15 != '4515027'))) and ((not(nem:eOther.13) or nem:eOther.13 = '' or (count(nem:eOther.13[text() = '4513007']) = 0)) or (not(nem:eOther.12) or nem:eOther.12 = '' or (nem:eOther.12 != '4512005'))) and (../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 = 'S62' or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the date and time the signature was obtained. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.14 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation/nem:eSituation.WorkRelatedGroup">
			<sch:let name="nemsisElements" value="nem:eSituation.14"/> <sch:assert id="Rule_6239" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eSituation.14) or nem:eSituation.14 = '') and (not(../../nem:eDisposition/nem:eDisposition.12) or ../../nem:eDisposition/nem:eDisposition.12 = '' or (../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../../nem:eDisposition/nem:eDisposition.12 != '4212011' and ../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../nem:eDisposition/nem:eDisposition.12 != '4212041'))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document if this injury/illness is work related.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.SignatureGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther">
			<sch:let name="nemsisElements" value="nem:eOther.SignatureGroup"/> <sch:assert id="Rule_6240" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212033') and count(nem:eOther.SignatureGroup[(nem:eOther.12 = '4512015')]) &lt; 1 and count(nem:eOther.SignatureGroup[(nem:eOther.12 = '4512017')]) &lt; 1 and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Signature: Patient or  guardian/representative or Healthcare provider at receiving facility signature must be obtained.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.21"/> <sch:assert id="Rule_6241" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.21) or nem:eOther.21 = '') and (nem:eOther.13 and nem:eOther.13 != '') and (not(nem:eOther.12) or nem:eOther.12 = '' or (nem:eOther.12 != '4512005')) and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515003' and nem:eOther.15 != '4515005' and nem:eOther.15 != '4515007' and nem:eOther.15 != '4515009' and nem:eOther.15 != '4515011' and nem:eOther.15 != '4515013' and nem:eOther.15 != '4515015' and nem:eOther.15 != '4515017' and nem:eOther.15 != '4515019' and nem:eOther.15 != '4515021' and nem:eOther.15 != '4515023' and nem:eOther.15 != '4515025' and nem:eOther.15 != '4515027' and nem:eOther.15 != '4515001'))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Signature: Print first name of person signing.  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.20 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.20"/> <sch:assert id="Rule_6242" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.20) or nem:eOther.20 = '') and (nem:eOther.13 and nem:eOther.13 != '') and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515003' and nem:eOther.15 != '4515005' and nem:eOther.15 != '4515007' and nem:eOther.15 != '4515009' and nem:eOther.15 != '4515011' and nem:eOther.15 != '4515013' and nem:eOther.15 != '4515015' and nem:eOther.15 != '4515017' and nem:eOther.15 != '4515019' and nem:eOther.15 != '4515021' and nem:eOther.15 != '4515023' and nem:eOther.15 != '4515025' and nem:eOther.15 != '4515027' and nem:eOther.15 != '4515001')) and (not(nem:eOther.13) or nem:eOther.13 = '' or (count(nem:eOther.13[text() = '4513015']) = 0 and count(nem:eOther.13[text() = '4513013']) = 0 and count(nem:eOther.13[text() = '4513007']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eOther.13'][nem:eCustomResults.01 = 'it4513.104']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eOther.13'][nem:eCustomResults.01 = 'it4513.105']) = 0))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Signature: Print the last name of the person signing</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.AssessmentGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam">
			<sch:let name="nemsisElements" value="nem:eExam.AssessmentGroup"/> <sch:assert id="Rule_6247" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(nem:eExam.AssessmentGroup) = 0 and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101']))">Secondary Assessment: Document the pertinent secondary exam</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.07"/> <sch:assert id="Rule_6248" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eResponse.07) or nem:eResponse.07 = ''))">Document the Type of Unit.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.11"/> <sch:assert id="Rule_6254" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eArrest.11) or nem:eArrest.11 = '') and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003') and (not(nem:eArrest.11[@NV])))">Document the first cardiac rhythm.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.17 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.17"/> <sch:assert id="Rule_6255" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eArrest.17) or nem:eArrest.17 = '') and (nem:eArrest.01 = '3001005' or nem:eArrest.01 = '3001003')) and ((../nem:eDisposition/nem:eDisposition.21 = '4221003') or (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212033')))">Document the cardiac rhythm upon arrival at the E.D.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.21"/> <sch:assert id="Rule_6256" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.21) or nem:eOther.21 = '') and (nem:eOther.13 and nem:eOther.13 != '') and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515003' and nem:eOther.15 != '4515005' and nem:eOther.15 != '4515007' and nem:eOther.15 != '4515009' and nem:eOther.15 != '4515011' and nem:eOther.15 != '4515013' and nem:eOther.15 != '4515015' and nem:eOther.15 != '4515017' and nem:eOther.15 != '4515019' and nem:eOther.15 != '4515021' and nem:eOther.15 != '4515023' and nem:eOther.15 != '4515025' and nem:eOther.15 != '4515027' and nem:eOther.15 != '4515001')) and (not(nem:eOther.13) or nem:eOther.13 = '' or (count(nem:eOther.13[text() = '4513015']) = 0 and count(nem:eOther.13[text() = '4513013']) = 0 and count(nem:eOther.13[text() = '4513007']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eOther.13'][nem:eCustomResults.01 = 'it4513.104']) = 0 and count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eOther.13'][nem:eCustomResults.01 = 'it4513.105']) = 0))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the first name of the hospital staff who assumed care of the patient and/or witnessed a controlled substance waste.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.22 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.22"/> <sch:assert id="Rule_6257" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup[((nem:eVitals.22 and nem:eVitals.22 != ''))]) &lt; 1 and (not(nem:eVitals.22[@NV])) and (not(../../../nem:eDisposition/nem:eDisposition.12) or ../../../nem:eDisposition/nem:eDisposition.12 = '' or (../../../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../../../nem:eDisposition/nem:eDisposition.12 != '4212011' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212041')))">Document the GCS Qualifier</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.19 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.19"/> <sch:assert id="Rule_6260" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.19) or nem:eDisposition.19 = '') and (nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or nem:eDisposition.12 = '4212033' or nem:eDisposition.12 = '4212031' or nem:eDisposition.12 = '4212027' or nem:eDisposition.12 = '4212015' or nem:eDisposition.12 = '4212019' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or nem:eDisposition.12 = '4212035' or nem:eDisposition.12 = '4212037' or nem:eDisposition.12 = '4212025' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the final patient acuity for all transports (eDisposition.19)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.SignatureGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther">
			<sch:let name="nemsisElements" value="nem:eOther.SignatureGroup"/> <sch:assert id="Rule_6272" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eDisposition/nem:eDisposition.12 = '4212027') and count(nem:eOther.SignatureGroup[((nem:eOther.13 = '4513009' or nem:eOther.13 = '4513021'))]) &lt; 1) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">AMA Signature: Patient or  guardian/representative  signature is required when an AMA is requested (eDisposition.12)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.27 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.PainScaleGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.27"/> <sch:assert id="Rule_6273" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(../../nem:eVitals.VitalGroup/nem:eVitals.PainScaleGroup[((nem:eVitals.27 and nem:eVitals.27 != ''))]) &lt; 1 and count(../../nem:eVitals.VitalGroup/nem:eVitals.PainScaleGroup[((nem:eVitals.27[@NV]))]) &lt; 1 and count(../../nem:eVitals.VitalGroup/nem:eVitals.PainScaleGroup[((nem:eVitals.27[@PN]))]) &lt; 1 and (../../../nem:eSituation/nem:eSituation.11 = 'R10.84' or ../../../nem:eSituation/nem:eSituation.11 = 'T30.0' or ../../../nem:eSituation/nem:eSituation.11 = 'R07.89' or ../../../nem:eSituation/nem:eSituation.11 = 'R51' or ../../../nem:eSituation/nem:eSituation.11 = 'T14.90') and (../../../nem:ePatient/nem:ePatient.13 and ../../../nem:ePatient/nem:ePatient.13 != '') and (not(nem:eVitals.27) or nem:eVitals.27 = ''))">Document the level of pain experienced by the patient</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.12"/> <sch:assert id="Rule_6276" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.12) or nem:eTimes.12 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023'))">Destination Patient Transfer of Care Date/Time


    




Destination Patient Transfer of Care Date/Time is required when Patient is transported.




  </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePayment.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePayment">
			<sch:let name="nemsisElements" value="nem:ePayment.01"/> <sch:assert id="Rule_6277" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePayment.01) or nem:ePayment.01 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134']) and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = 'it2207.001'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = 'it2207.002'] or ../nem:eResponse/nem:eResponse.07 = '2207011' or ../nem:eResponse/nem:eResponse.07 = '2207013' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = 'it2207.003']) and (not(nem:ePayment.01[@NV]) or (nem:ePayment.01[@NV!='7701001'] and nem:ePayment.01[@NV!='7701003'])))">Primary Method of Payment (ePayment.01)</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>ePayment.50 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePayment">
			<sch:let name="nemsisElements" value="nem:ePayment.50"/> <sch:assert id="Rule_6278" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134']) and (not(nem:ePayment.50[@NV]) or (nem:ePayment.50[@NV!='7701001'] and nem:ePayment.50[@NV!='7701003'])) and (not(nem:ePayment.50) or nem:ePayment.50 = '' or (nem:ePayment.50 != '2650001' and nem:ePayment.50 != '2650003' and nem:ePayment.50 != '2650005' and nem:ePayment.50 != '2650007' and nem:ePayment.50 != '2650009' and nem:ePayment.50 != '2650011' and nem:ePayment.50 != '2650013' and nem:ePayment.50 != '2650017' and nem:ePayment.50 != '2650015')))">CMS Service Level must be completed.(ePayment.50)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itProcedures.007 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:itProcedures.007"/> <sch:assert id="Rule_6280" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itProcedures.007']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itProcedures.007'][nem:eCustomResults.01 = '']) and (nem:eProcedures.03 = '429705000' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eProcedures.03'][nem:eCustomResults.01 = 'itSNOMED.001'] or nem:eProcedures.03 = '232679009' or nem:eProcedures.03 = '16883004') and nem:eProcedures.06 = '9923003') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Tube Secured with needs to be completed when indications for invasive Airway is performed and is successful. (itProcedure.007)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.15 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.15"/> <sch:assert id="Rule_6284" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.15) or nem:eOther.15 = '') and (nem:eOther.13 = '4513015' or nem:eOther.13 = '4513011' or nem:eOther.13 = '4513009' or nem:eOther.13 = '4513021' or nem:eOther.13 = '4513005' or nem:eOther.13 = '4513007' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eOther.13'][nem:eCustomResults.01 = 'it4513.104'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eOther.13'][nem:eCustomResults.01 = 'it4513.103'] or nem:eOther.13 = '4513003' or nem:eOther.13 = '4513019' or nem:eOther.13 = '4513013' or nem:eOther.13 = '4513023' or nem:eOther.13 = '4513001')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Signature Status is required</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.18"/> <sch:assert id="Rule_6285" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eOther.18) or nem:eOther.18 = '') and (nem:eOther.13 and nem:eOther.13 != '') and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515027' and nem:eOther.15 != '4515007')) and (not(nem:eOther.13) or nem:eOther.13 = '' or (count(nem:eOther.13[text() = '4513013']) = 0 and count(nem:eOther.13[text() = '4513011']) = 0)) and (nem:eOther.12 = '4512001' or nem:eOther.12 = '4512003') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Signature of the crew is required on all calls.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.18"/> <sch:assert id="Rule_6286" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142']) and (not(nem:eOther.18) or nem:eOther.18 = '') and (nem:eOther.15 = '4515031' or nem:eOther.15 = '4515033')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Receiving Facility Signature is required when patient is transported.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.18"/> <sch:assert id="Rule_6287" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../nem:eDisposition/nem:eDisposition.12 = '4212025') and (not(nem:eOther.18) or nem:eOther.18 = '') and (not(nem:eOther.13) or nem:eOther.13 = '' or (count(nem:eOther.13[text() = '4513013']) = 0)) and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515027' and nem:eOther.15 != '4515007' and nem:eOther.15 != '4515015' and nem:eOther.15 != '4515003' and nem:eOther.15 != '4515005' and nem:eOther.15 != '4515011' and nem:eOther.15 != '4515013' and nem:eOther.15 != '4515009' and nem:eOther.15 != '4515017' and nem:eOther.15 != '4515019' and nem:eOther.15 != '4515021' and nem:eOther.15 != '4515023' and nem:eOther.15 != '4515001' and nem:eOther.15 != '4515025' and nem:eOther.15 != '4515029'))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">AMA Signature is required when contact is made.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.14 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.14"/> <sch:assert id="Rule_6288" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.14) or nem:ePatient.14 = '') and (not(nem:ePatient.14[@NV]))) and ((not(../nem:eDisposition/nem:eDisposition.12) or ../nem:eDisposition/nem:eDisposition.12 = '' or (../nem:eDisposition/nem:eDisposition.12 != '4212007' and ../nem:eDisposition/nem:eDisposition.12 != '4212011' and ../nem:eDisposition/nem:eDisposition.12 != '4212009' and ../nem:eDisposition/nem:eDisposition.12 != '4212039' and not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../nem:eDisposition/nem:eDisposition.12 != '4212041')) or (../nem:eTimes/nem:eTimes.07 and ../nem:eTimes/nem:eTimes.07 != '')))">Patient Race is required when patient contact is made.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eHistory.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory">
			<sch:let name="nemsisElements" value="nem:eHistory.08"/> <sch:assert id="Rule_6289" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eHistory.08) or nem:eHistory.08 = '') and (not(nem:eHistory.08[@PN]) or (nem:eHistory.08[@PN!='8801015'] and nem:eHistory.08[@PN!='8801019'] and nem:eHistory.08[@PN!='8801023'] and nem:eHistory.08[@PN!='8801021'])) and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037') and (not(nem:eHistory.08[@NV]) or (nem:eHistory.08[@NV!='7701001'] and nem:eHistory.08[@NV!='7701003'] and nem:eHistory.08[@NV!='7701005']))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Medical / Surgical Hx is missing when there was a patient encounter. (eHistory.08).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.17 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.17"/> <sch:assert id="Rule_6290" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eSituation.17) or nem:eSituation.17 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142']) and (not(nem:eSituation.17[@NV]) or (nem:eSituation.17[@NV!='7701001'] and nem:eSituation.17[@NV!='7701003'] and nem:eSituation.17[@NV!='7701005']))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">The activity the patient was involved in at the time the patient experienced the onset of symptoms or experienced an injury. (eSituation.17)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itDisposition.007 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:itDisposition.007"/> <sch:assert id="Rule_6291" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.007']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.007'][nem:eCustomResults.01 = '']) and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.047'] and ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.047'][nem:eCustomResults.01 != ''])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Base Hospital Contact date and time is required when Base Hospital is selected.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDispatch.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDispatch">
			<sch:let name="nemsisElements" value="nem:eDispatch.02"/> <sch:assert id="Rule_6292" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDispatch.02) or nem:eDispatch.02 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eDisposition/nem:eDisposition.12 = '4212007' or ../nem:eDisposition/nem:eDisposition.12 = '4212011' or ../nem:eDisposition/nem:eDisposition.12 = '4212009' or ../nem:eDisposition/nem:eDisposition.12 = '4212039' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142']) and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Indication of whether Emergency Medical Dispatch was performed for this EMS event. (eDispatch.02)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDispatch.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDispatch">
			<sch:let name="nemsisElements" value="nem:eDispatch.03"/> <sch:assert id="Rule_6293" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eDispatch.02 = '2302003' or nem:eDispatch.02 = '2302005' or nem:eDispatch.02 = '2302007') and (not(nem:eDispatch.03) or nem:eDispatch.03 = '') and ../nem:eScene/nem:eScene.21 = '06071') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">The EMD card number reported by dispatch, consisting of the card number, dispatch level, and dispatch mode (eDispatch.03)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDispatch.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDispatch">
			<sch:let name="nemsisElements" value="nem:eDispatch.03"/> <sch:assert id="Rule_6297" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.StrokeScaleGroup[((nem:eVitals.29 = '3329005'))]) &gt; 0 and count(../nem:ePayment/nem:ePayment.ClosestRelativeGroup/nem:ePayment.31) = 0) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Relative phone number is required when stroke scale is positive.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.VitalGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals">
			<sch:let name="nemsisElements" value="nem:eVitals.VitalGroup"/> <sch:assert id="Rule_6298" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and count(nem:eVitals.VitalGroup) = 0) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Vitals are Required with Patient contact.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.BloodPressureGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.07"/> <sch:assert id="Rule_6299" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eVitals.06 and nem:eVitals.06 != '') and nem:eVitals.08 != '3308009' and (not(nem:eVitals.07) or nem:eVitals.07 = '')) and (starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">If Palpated BP was obtained then select Manual Palpated method (eVital.07).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.14 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.14"/> <sch:assert id="Rule_6300" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eVitals.14) or nem:eVitals.14 = '') and ((../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or  ../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../nem:eDisposition/nem:eDisposition.12 = '4212027' and ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../nem:eDisposition/nem:eDisposition.12 = '4212037' and ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and count(../nem:eVitals.VitalGroup[((nem:eVitals.14 and nem:eVitals.14 != ''))]) &lt; 1 and count(../nem:eVitals.VitalGroup[((nem:eVitals.14[@NV]))]) &lt; 1 and count(../nem:eVitals.VitalGroup[((nem:eVitals.14[@PN]))]) &lt; 1)">Respiratory Rate required with patient contact.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.17 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.17"/> <sch:assert id="Rule_6301" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:ePatient.17 != '' and ../nem:eTimes/nem:eTimes.03 != '' and xs:date(substring(nem:ePatient.17, 1, 10)) &gt; xs:date(substring(../nem:eTimes/nem:eTimes.03, 1, 10))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patients date of birth must before the unit notified date and time.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.13"/> <sch:assert id="Rule_6302" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eVitals.13) or nem:eVitals.13 = '') and (../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and count(../nem:eVitals.VitalGroup[((nem:eVitals.13 and nem:eVitals.13 != ''))]) &lt; 1 and (nem:eVitals.HeartRateGroup/nem:eVitals.10 != '' and nem:eVitals.HeartRateGroup/nem:eVitals.10 &gt; 1)) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Pulse Rhythm is Required with Patient Contact. If Heart Rate is zero then Rhythm should = regular.(eVitals.13)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.PatientComplaintGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.PatientComplaintGroup"/> <sch:assert id="Rule_6303" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:eSituation.PatientComplaintGroup) = 0 and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patient Complaint is required when patient contact is made.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itResponse.009 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:itResponse.009"/> <sch:assert id="Rule_6304" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.009']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.009'][nem:eCustomResults.01 = '']) and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and ../nem:eScene/nem:eScene.21 = '06071' and starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616')">Level of Service Provided is required when there is a patient.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itControlledSubstances.005 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport">
			<sch:let name="nemsisElements" value="nem:itControlledSubstances.005"/> <sch:assert id="Rule_6305" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.009'][nem:eCustomResults.01 = '671766'] or nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.009'][nem:eCustomResults.01 = '230691']) and (not(nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.005']) or nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.005'][nem:eCustomResults.01 = ''])) and (starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Signature is required when Controlled substance is given (itControlledSubstances.005)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itControlledSubstances.012 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport">
			<sch:let name="nemsisElements" value="nem:itControlledSubstances.012"/> <sch:assert id="Rule_6306" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.012']) or nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.012'][nem:eCustomResults.01 = '']) and (nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.009'] and nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.009'][nem:eCustomResults.01 != ''])) and (starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Amount of wasted controlled substance is required (itControlledSubstances.012).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eArrest.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eArrest">
			<sch:let name="nemsisElements" value="nem:eArrest.01"/> <sch:assert id="Rule_6307" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eArrest.01) or nem:eArrest.01 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Cardiac Arrest yes or no is required for all patient contact.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itSituation.001 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:itSituation.001"/> <sch:assert id="Rule_6308" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itSituation.001']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itSituation.001'][nem:eCustomResults.01 = '']) and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134']) and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patient belongings will be documented when a patient is transported.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itPayment.010 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePayment">
			<sch:let name="nemsisElements" value="nem:itPayment.010"/> <sch:assert id="Rule_6309" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itPayment.010']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itPayment.010'][nem:eCustomResults.01 = '']) and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itSituation.001'][nem:eCustomResults.01 = 'itSituation.001.108'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itSituation.001'][nem:eCustomResults.01 = 'itSituation.001.107'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">A description of other types of belongings is required.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itPayment.012 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePayment">
			<sch:let name="nemsisElements" value="nem:itPayment.012"/> <sch:assert id="Rule_6311" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itPayment.012']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itPayment.012'][nem:eCustomResults.01 = '']) and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itPayment.011'][nem:eCustomResults.01 = 'itPayment.011.104'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Location of where or with whom the belongings were left is required. (itPayment.012)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eHistory.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory">
			<sch:let name="nemsisElements" value="nem:eHistory.18"/> <sch:assert id="Rule_6312" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eHistory.18) or nem:eHistory.18 = '') and (../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 != '' and ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 &gt; 14) and (../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 != '' and ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 &lt; 60) and ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.16 = '2516009' and (../nem:ePatient/nem:ePatient.13 = '9906001' or ../nem:ePatient/nem:ePatient.13 = '9906005') and (not(nem:eHistory.18[@PN]) or (nem:eHistory.18[@PN!='8801019'] and nem:eHistory.18[@PN!='8801023'])) and not(ends-with(../nem:eResponse/nem:eResponse.03,'z'))) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">If patient is female and over 15 and less than 60 pregnancy status is required.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eSituation.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.13"/> <sch:assert id="Rule_6313" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eSituation.13) or nem:eSituation.13 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212019')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">An Initial Patient Acuity is missing when there was a patient encounter.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.12"/> <sch:assert id="Rule_6314" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.12) or nem:ePatient.12 = '') and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = 'it2207.001'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = 'it2207.002'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eResponse.07'][nem:eCustomResults.01 = 'it2207.003']) and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patient Social Security number is required on all Patient Transports. If unable to obtain enter 999999999.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.18"/> <sch:assert id="Rule_6315" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.18) or nem:ePatient.18 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212003' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031') and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-51181') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patients Phone number is required on all Patient contacts. If No number enter 999-999-9999.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.18.PhoneNumberType related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient/nem:ePatient.18">
			<sch:let name="nemsisElements" value="nem:ePatient.18.PhoneNumberType"/> <sch:assert id="Rule_6316" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(.[@PhoneNumberType]) or .[@PhoneNumberType = '']) and (../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and not(starts-with(.,'999'))) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patients Phone Number Type is required when Patient contact is made.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.18"/> <sch:assert id="Rule_6317" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.18) or nem:ePatient.18 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patient Phone Number is required.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itControlledSubstances.006 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport">
			<sch:let name="nemsisElements" value="nem:itControlledSubstances.006"/> <sch:assert id="Rule_6318" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.009'][nem:eCustomResults.01 = '671766'] or nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.009'][nem:eCustomResults.01 = '230691']) and (not(nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.006']) or nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itControlledSubstances.006'][nem:eCustomResults.01 = ''])) and (starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Signature is required.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.BloodPressureGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.08"/> <sch:assert id="Rule_6321" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eVitals.08) or nem:eVitals.08 = '') and (nem:eVitals.06 and nem:eVitals.06 != '') and (not(../../../nem:eDisposition/nem:eDisposition.12) or ../../../nem:eDisposition/nem:eDisposition.12 = '' or (../../../nem:eDisposition/nem:eDisposition.12 != '4212015' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212019' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212023' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212025' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212003' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212005' and ../../../nem:eDisposition/nem:eDisposition.12 != '4212041'))) and (starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Method of blood pressure measurement is required when a SBP has been documented.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.12"/> <sch:assert id="Rule_6322" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eResponse.12) or nem:eResponse.12 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212015' or ../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and (../nem:eTimes/nem:eTimes.06 and ../nem:eTimes/nem:eTimes.06 != '')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">If no patient is being transported by the unit, turn-around delay is any time delay that occurs from the time the unit arrived on scene until the unit is back in service or the unit back at the home location [whichever is the greater of the two times].
</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eResponse.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.12"/> <sch:assert id="Rule_11941" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(nem:eResponse.12[text() = '2212015']) != 0 and (nem:eResponse.12 = '2212001' or nem:eResponse.12 = '2212003' or nem:eResponse.12 = '2212005' or nem:eResponse.12 = '2212007' or nem:eResponse.12 = '2212009' or nem:eResponse.12 = '2212033' or nem:eResponse.12 = '2212011' or nem:eResponse.12 = '2212013' or nem:eResponse.12 = '2212017' or nem:eResponse.12 = '2212019' or nem:eResponse.12 = '2212021' or nem:eResponse.12 = '2212023' or nem:eResponse.12 = '2212025' or nem:eResponse.12 = '2212027' or nem:eResponse.12 = '2212029' or nem:eResponse.12 = '2212031'))">Type of Turn Around Delay should not be &quot;none&quot; and a valid delay at the same time. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>ePatient.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.05"/> <sch:assert id="Rule_6323" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.05) or nem:ePatient.05 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patients home address is required</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.06 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.06"/> <sch:assert id="Rule_6324" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:ePatient.06) or nem:ePatient.06 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Patient Home City is Required</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>ePatient.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.09"/> <sch:assert id="Rule_6325" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.09) or nem:ePatient.09 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023') and nem:ePatient.10 = '17')">Patients Home Zip Code is required</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eHistory.17 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eHistory">
			<sch:let name="nemsisElements" value="nem:eHistory.17"/> <sch:assert id="Rule_6326" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212025' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101']) and (../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 != '' and ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.15 &gt; 13) and ../nem:ePatient/nem:ePatient.AgeGroup/nem:ePatient.16 = '2516009' and (not(nem:eHistory.17) or nem:eHistory.17 = '') and (not(nem:eHistory.17[@NV])) and (not(nem:eHistory.17[@PN])))">Alcohol/Drug Use Indicators requires a legitimate answer when age is &gt;14. (eHistory.17)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePayment.49 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePayment">
			<sch:let name="nemsisElements" value="nem:ePayment.49"/> <sch:assert id="Rule_6327" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePayment.49) or nem:ePayment.49 = '') and starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.02,'AMR') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023') and starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62'))">ALS Assessment Performed and Warranted (ePayment.49)
</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eResponse.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:eResponse.12"/> <sch:assert id="Rule_6328" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(../nem:eTimes/nem:eTimes.12 != '' and ../nem:eTimes/nem:eTimes.11 != '' and (abs(days-from-duration(xs:dateTime(../nem:eTimes/nem:eTimes.12) - xs:dateTime(../nem:eTimes/nem:eTimes.11))) * 1440) + (abs(hours-from-duration(xs:dateTime(../nem:eTimes/nem:eTimes.12) - xs:dateTime(../nem:eTimes/nem:eTimes.11))) * 60) + (abs(minutes-from-duration(xs:dateTime(../nem:eTimes/nem:eTimes.12) - xs:dateTime(../nem:eTimes/nem:eTimes.11)))) &gt; 25 and count(nem:eResponse.12[text() = '2212015']) != 0 and ../nem:eScene/nem:eScene.21 = '06071' and starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62'))">If Patient Care is not transferred in under 25 minutes you must select why a delay occurred. No can not select &quot;None&quot;</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam/nem:eExam.AssessmentGroup">
			<sch:let name="nemsisElements" value="nem:eExam.03"/> <sch:assert id="Rule_6329" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eExam.03 != '' and ../../nem:eTimes/nem:eTimes.08 != '' and xs:dateTime(nem:eExam.03) &gt; xs:dateTime(../../nem:eTimes/nem:eTimes.08)) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Assessment time must be before transfer of patient care time.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam/nem:eExam.AssessmentGroup">
			<sch:let name="nemsisElements" value="nem:eExam.03"/> <sch:assert id="Rule_6330" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eExam.03 != '' and ../../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(nem:eExam.03) &lt; xs:dateTime(../../nem:eTimes/nem:eTimes.03)) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Assessment time must be after Unit Notified by Dispatch date/time (eTimes.03).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam/nem:eExam.AssessmentGroup">
			<sch:let name="nemsisElements" value="nem:eExam.05"/> <sch:assert id="Rule_6331" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eExam.05) or nem:eExam.05 = '') and (../../nem:eSituation/nem:eSituation.11 = 'T14.90') and count(../nem:eExam.AssessmentGroup[((nem:eExam.05 and nem:eExam.05 != ''))]) &lt; 1) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Head assessment is required when primary impression is traumatic injury (eExam.05).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam/nem:eExam.AssessmentGroup">
			<sch:let name="nemsisElements" value="nem:eExam.08"/> <sch:assert id="Rule_6332" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eExam.08) or nem:eExam.08 = '') and (../../nem:eSituation/nem:eSituation.09 = 'R06.02' or ../../nem:eSituation/nem:eSituation.09 = 'R06.4' or ../../nem:eSituation/nem:eSituation.09 = 'R00.2' or ../../nem:eSituation/nem:eSituation.09 = 'R09.2' or ../../nem:eSituation/nem:eSituation.09 = 'R06.01' or ../../nem:eSituation/nem:eSituation.09 = 'R06.1' or ../../nem:eSituation/nem:eSituation.09 = 'R06.2' or ../../nem:eSituation/nem:eSituation.09 = 'R23.0' or ../../nem:eSituation/nem:eSituation.09 = 'R06.81' or ../../nem:eSituation/nem:eSituation.09 = 'R06.3' or ../../nem:eSituation/nem:eSituation.09 = 'R07.1') and count(../nem:eExam.AssessmentGroup[((nem:eExam.08 and nem:eExam.08 != ''))]) &lt; 1) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Chest/Lungs assessment is required (eExam.08).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.12"/> <sch:assert id="Rule_6333" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eTimes.12) or nem:eTimes.12 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Time Patient care was transferred at destination.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eAirway.ConfirmationGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eAirway/nem:eAirway.AirwayGroup">
			<sch:let name="nemsisElements" value="nem:eAirway.ConfirmationGroup"/> <sch:assert id="Rule_6334" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(../../nem:eProcedures/nem:eProcedures.ProcedureGroup[nem:eProcedures.03 = ('16883004', '232679009', '232685002', '232674004')]) &gt; 0 or count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eProcedures.03'][nem:eCustomResults.01 = ('itSNOMED.001', 'itSNOMED.003')]) &gt; 0 ) and count(nem:eAirway.ConfirmationGroup) = 0 and count(../../nem:eProcedures/nem:eProcedures.ProcedureGroup[nem:eProcedures.06 = '9923003']) &gt; 0 and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document indications for invasive airway.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.23 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.23"/> <sch:assert id="Rule_6335" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')) and ((count(../../nem:eVitals.VitalGroup/nem:eVitals.GlasgowScoreGroup[((nem:eVitals.23 and nem:eVitals.23 != ''))]) &lt; 1) and (((../../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../../../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212019' or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../../../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../../../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116']) and (not(nem:eVitals.23) or nem:eVitals.23 = '')) or ((../../../nem:eSituation/nem:eSituation.11 = 'I46.9' or ../../../nem:eSituation/nem:eSituation.11 = 'J96.9' or ../../../nem:eSituation/nem:eSituation.11 = 'I20.9') and nem:eVitals.23 != '3'))))">Total GCS is required on all patient contacts. If the patient is in cardiac arrest  or dead the score must be 3.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
<!-- ICEMA rule 2368 -->
		<sch:pattern>
			<sch:title>eDisposition.23 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.23"/> <sch:assert id="Rule_6336" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eDisposition.21 = '4221023' or nem:eDisposition.21 = '4221005' or nem:eDisposition.21 = '4221003') and (not(nem:eDisposition.23) or nem:eDisposition.23 = '' or nem:eDisposition.23[@NV])) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">The primary hospital capability associated with the patient&apos;s condition for this transport (e.g., Trauma,
STEMI, Peds, etc.)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.18"/> <sch:assert id="Rule_6337" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eDisposition.12 = '4212031' or nem:eDisposition.12 = '4212027' or nem:eDisposition.12 = '4212015' or nem:eDisposition.12 = '4212019' or nem:eDisposition.12 = '4212007' or nem:eDisposition.12 = '4212011' or nem:eDisposition.12 = '4212009' or nem:eDisposition.12 = '4212039' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109'] or nem:eDisposition.12 = '4212035' or nem:eDisposition.12 = '4212037' or nem:eDisposition.12 = '4212001' or nem:eDisposition.12 = '4212003' or nem:eDisposition.12 = '4212005' or nem:eDisposition.12 = '4212025' or nem:eDisposition.12 = '4212041') and (nem:eDisposition.18 and nem:eDisposition.18 != ''))">The documentation of transport mode for this EMS response should be blank unless PT is transported (eDisposition.18).</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.10 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.10"/> <sch:assert id="Rule_6338" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eSituation.10) or nem:eSituation.10 = '') and (not(nem:eSituation.09) or nem:eSituation.09 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212035'))">Other Associated Symptoms is a required field when Primary Symptom is blank or null.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itDisposition.036 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:itDisposition.036"/> <sch:assert id="Rule_6339" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.036']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itDisposition.036'][nem:eCustomResults.01 = '']) and (../nem:eTimes/nem:eTimes.11 and ../nem:eTimes/nem:eTimes.11 != '') and starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62-50088') and (nem:eDisposition.12 = '4212033') and (../nem:eResponse/nem:eResponse.ServiceGroup/nem:eResponse.05 = '2205007' or ../nem:eResponse/nem:eResponse.ServiceGroup/nem:eResponse.05 = '2205005'))">Receiving Physician/Accepting MD is required for all transports.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.05 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.05"/> <sch:assert id="Rule_6373" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.05) or nem:ePatient.05 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142']) and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.02 = 'San Bernardino County Fire Department')">Patients Home address is Required</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.09 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.09"/> <sch:assert id="Rule_6374" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:ePatient.09) or nem:ePatient.09 = '') and (../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031') and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.02 = 'San Bernardino County Fire Department')">Patients Home Zip Code is required.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itResponse.020 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse">
			<sch:let name="nemsisElements" value="nem:itResponse.020"/> <sch:assert id="Rule_6375" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itResponse.020'][nem:eCustomResults.01 = '']) and (../nem:eTimes/nem:eTimes.05 and ../nem:eTimes/nem:eTimes.05 != '') and ../nem:eDisposition/nem:eDisposition.12 != '4212001' and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Type of Vehicle on this call.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eDisposition.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.DestinationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.03"/> <sch:assert id="Rule_6376" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.03) or nem:eDisposition.03 = '') and (../../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.134'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212023' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Destination address is required with Transport</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient">
			<sch:let name="nemsisElements" value="nem:ePatient.13"/> <sch:assert id="Rule_6377" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:ePatient.13 and nem:ePatient.13 != '') and (../nem:eDisposition/nem:eDisposition.12 = '4212039' or ../nem:eDisposition/nem:eDisposition.12 = '4212001' or ../nem:eDisposition/nem:eDisposition.12 = '4212003' or ../nem:eDisposition/nem:eDisposition.12 = '4212007' or ../nem:eDisposition/nem:eDisposition.12 = '4212011' or ../nem:eDisposition/nem:eDisposition.12 = '4212009' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109']) and (not(../nem:eResponse/nem:eResponse.07) or ../nem:eResponse/nem:eResponse.07 = '' or (../nem:eResponse/nem:eResponse.07 != '2207007')) and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-51806') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">If PT Contact was made then you need to change the Incident/Patient Disposition. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.15 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient/nem:ePatient.AgeGroup">
			<sch:let name="nemsisElements" value="nem:ePatient.15"/> <sch:assert id="Rule_6378" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:ePatient.15 and nem:ePatient.15 != '') and (../../nem:eDisposition/nem:eDisposition.12 = '4212007' or ../../nem:eDisposition/nem:eDisposition.12 = '4212011' or ../../nem:eDisposition/nem:eDisposition.12 = '4212009' or ../../nem:eDisposition/nem:eDisposition.12 = '4212039' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212001' or ../../nem:eDisposition/nem:eDisposition.12 = '4212003' or ../../nem:eDisposition/nem:eDisposition.12 = '4212041') and (not(../../nem:eResponse/nem:eResponse.07) or ../../nem:eResponse/nem:eResponse.07 = '' or (../../nem:eResponse/nem:eResponse.07 != '2207007')) and ../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-51806') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">If PT Contact was made then you need to change the Incident/Patient Disposition. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>ePatient.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:ePatient/nem:ePatient.PatientNameGroup">
			<sch:let name="nemsisElements" value="nem:ePatient.02"/> <sch:assert id="Rule_6379" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../../nem:eDisposition/nem:eDisposition.12 = '4212007' or ../../nem:eDisposition/nem:eDisposition.12 = '4212011' or ../../nem:eDisposition/nem:eDisposition.12 = '4212009' or ../../nem:eDisposition/nem:eDisposition.12 = '4212039' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109'] or ../../nem:eDisposition/nem:eDisposition.12 = '4212001' or ../../nem:eDisposition/nem:eDisposition.12 = '4212003' or ../../nem:eDisposition/nem:eDisposition.12 = '4212041') and (nem:ePatient.02 and nem:ePatient.02 != '') and (not(../../nem:eResponse/nem:eResponse.07) or ../../nem:eResponse/nem:eResponse.07 = '' or (../../nem:eResponse/nem:eResponse.07 != '2207007')) and ../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-51806') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S54')))">If PT Contact was made then you need to change the Incident/Patient Disposition. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.07 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.07"/> <sch:assert id="Rule_6380" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((../nem:eDisposition/nem:eDisposition.12 = '4212007' or ../nem:eDisposition/nem:eDisposition.12 = '4212011' or ../nem:eDisposition/nem:eDisposition.12 = '4212009' or ../nem:eDisposition/nem:eDisposition.12 = '4212039' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.109'] or ../nem:eDisposition/nem:eDisposition.12 = '4212001' or ../nem:eDisposition/nem:eDisposition.12 = '4212003' or ../nem:eDisposition/nem:eDisposition.12 = '4212041' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.149']) and (nem:eTimes.07 and nem:eTimes.07 != '') and (not(../nem:eResponse/nem:eResponse.07) or ../nem:eResponse/nem:eResponse.07 = '' or (../nem:eResponse/nem:eResponse.07 != '2207007')) and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-51806') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">If PT Contact was made then you need to change the Incident/Patient Disposition.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.16 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.16"/> <sch:assert id="Rule_6381" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eVitals.16) or nem:eVitals.16 = '') and (not(nem:eVitals.16[@NV])) and (not(nem:eVitals.16[@PN])) and (count(../../nem:eProcedures/nem:eProcedures.ProcedureGroup[nem:eProcedures.03 = ('232674004', '16883004', '182692007')]) + count(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eProcedures.03'][nem:eCustomResults.01 = ('itSNOMED.001', 'itSNOMED.003')]) &gt; 1))">ETC02 is required when advanced Airway is performed.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eCrew.03 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eCrew/nem:eCrew.CrewGroup">
			<sch:let name="nemsisElements" value="nem:eCrew.03"/> <sch:assert id="Rule_6382" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eCrew.01 and nem:eCrew.01 != '') and (not(nem:eCrew.03) or nem:eCrew.03 = '')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Crew member role is required.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eExam.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eExam">
			<sch:let name="nemsisElements" value="nem:eExam.21"/> <sch:assert id="Rule_6383" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eExam.21) or nem:eExam.21 = '')) and (../nem:eSituation/nem:eSituation.11 = 'I63.9' or count(../nem:eSituation/nem:eSituation.12[text() = 'I63.9']) != 0 or (../nem:eOther/nem:eOther.02 = '4502007')) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Stroke/CVA Symptoms Resolved are required for all Stroke Patients. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>itOtherKinGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport">
			<sch:let name="nemsisElements" value="nem:itOtherKinGroup"/> <sch:assert id="Rule_6384" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:itOtherKinGroup) = 0 and starts-with(nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') and nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (nem:eSituation/nem:eSituation.11 = 'I63.9' or count(nem:eSituation/nem:eSituation.12[text() = 'I63.9']) != 0))">Next of Kin is required</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.18"/> <sch:assert id="Rule_6385" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eSituation.18) or nem:eSituation.18 = '')) and (nem:eSituation.11 = 'I63.9' or count(nem:eSituation.12[text() = 'I63.9']) != 0) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the last time PT was seen normal date and time when positive stroke scale. If unknown estimate the time.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eVitals.29 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup/nem:eVitals.StrokeScaleGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.29"/> <sch:assert id="Rule_6386" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eVitals.29) or nem:eVitals.29 = '') and (nem:eVitals.29 = '3329003' or nem:eVitals.29 = '3329005'))">Stroke Scale Score Missing When Provider Impression Stroke (eVitals.29)</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eScene.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.08"/> <sch:assert id="Rule_6388" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((nem:eScene.08 and nem:eScene.08 != '') and nem:eScene.07 = '9923001') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Triage Classification should be blank if MCI is &quot;NO&quot;  (eScene.08) </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eSituation.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.02"/> <sch:assert id="Rule_6389" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eSituation.02 = '9922001') and (nem:eSituation.11 = 'T14.90' or count(nem:eSituation.12[text() = 'T14.90']) != 0) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Primary/Secondary Impression Contains Traumatic Injury then Possible Injury must be Yes</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.ProcedureGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures">
			<sch:let name="nemsisElements" value="nem:eProcedures.ProcedureGroup"/> <sch:assert id="Rule_6390" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(count(nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '33747003' or nem:eProcedures.03 = '412928005'))]) &lt; 1 and count(../nem:eVitals/nem:eVitals.VitalGroup[((nem:eVitals.18 and nem:eVitals.18 != ''))]) &gt; 0 and ../nem:eTimes/nem:eTimes.03 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.03) &gt; xs:dateTime('2019-08-16T00:00:00-06:00'))">Blood Glucose Procedure is required when evitals.18 is not blank</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.ProcedureGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures">
			<sch:let name="nemsisElements" value="nem:eProcedures.ProcedureGroup"/> <sch:assert id="Rule_6391" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:eProcedures.ProcedureGroup[(nem:eProcedures.03 = '250863006')]) &lt; 1 and count(../nem:eAirway/nem:eAirway.AirwayGroup/nem:eAirway.ConfirmationGroup[((nem:eAirway.04 = '4004019' or nem:eAirway.04 = '4004005'))]) &gt; 0 and (../nem:eResponse/nem:eResponse.15 = '2215013' or ../nem:eResponse/nem:eResponse.15 = '2215021' or ../nem:eResponse/nem:eResponse.15 = '2215009' or ../nem:eResponse/nem:eResponse.15 = '2215015' or ../nem:eResponse/nem:eResponse.15 = '2215011' or ../nem:eResponse/nem:eResponse.15 = '2215017' or ../nem:eResponse/nem:eResponse.15 = '2215019') and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62-50616') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Capnography  procedure needs to be documented when Airway device placement is not blank</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.08 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.08"/> <sch:assert id="Rule_6392" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.08 != '' and nem:eTimes.13 != '' and xs:dateTime(nem:eTimes.08) &gt; xs:dateTime(nem:eTimes.13)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Transfer of PT Care in field time must be before Unit back in service time.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.12"/> <sch:assert id="Rule_6393" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.12 != '' and nem:eTimes.13 != '' and xs:dateTime(nem:eTimes.12) &gt; xs:dateTime(nem:eTimes.13)) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">PT transfer of care at destination must be before unit back in service time.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.13 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.13"/> <sch:assert id="Rule_6394" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eTimes.13 != '' and nem:eTimes.01 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.01) or nem:eTimes.13 != '' and nem:eTimes.02 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.02) or nem:eTimes.13 != '' and nem:eTimes.03 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.03) or nem:eTimes.13 != '' and nem:eTimes.04 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.04) or nem:eTimes.13 != '' and nem:eTimes.05 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.05) or nem:eTimes.13 != '' and nem:eTimes.06 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.06) or nem:eTimes.13 != '' and nem:eTimes.07 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.07) or nem:eTimes.13 != '' and nem:eTimes.08 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.08) or nem:eTimes.13 != '' and nem:eTimes.09 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.09) or nem:eTimes.13 != '' and nem:eTimes.10 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.10) or nem:eTimes.13 != '' and nem:eTimes.11 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.11) or nem:eTimes.13 != '' and nem:eTimes.12 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.12) or nem:eTimes.13 != '' and nem:eTimes.14 != '' and xs:dateTime(nem:eTimes.13) &lt; xs:dateTime(nem:eTimes.14))">Unit Back in Service Time is out of Sequence.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eProcedures.ProcedureGroup related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures">
			<sch:let name="nemsisElements" value="nem:eProcedures.ProcedureGroup"/> <sch:assert id="Rule_6395" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((count(nem:eProcedures.ProcedureGroup[((nem:eProcedures.03 = '412928005' or nem:eProcedures.03 = '33747003'))]) &lt; 1 and count(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itVitals.018'][nem:eCustomResults.01 != '']) &gt; 0) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Blood Glucose Procedure is Required </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eTimes.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.12"/> <sch:assert id="Rule_6403" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eTimes.12) or nem:eTimes.12 = '') and (../nem:eDisposition/nem:eDisposition.12 = '4212001') and ../nem:eResponse/nem:eResponse.07 = '2207007') and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the time the care of the patient was transferred to the receiving facility staff. </sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.18"/> <sch:assert id="Rule_6405" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((../../nem:eDisposition/nem:eDisposition.12 = '4212001' and (not(nem:eOther.18) or nem:eOther.18 = '') and (nem:eOther.15 = '4515031' or nem:eOther.15 = '4515033')) and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Receiving Facility Signature is required when patient is Monitored.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.21 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.21"/> <sch:assert id="Rule_6406" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.21) or nem:eOther.21 = '') and (nem:eOther.13 and nem:eOther.13 != '') and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515003' and nem:eOther.15 != '4515005' and nem:eOther.15 != '4515007' and nem:eOther.15 != '4515009' and nem:eOther.15 != '4515011' and nem:eOther.15 != '4515013' and nem:eOther.15 != '4515015' and nem:eOther.15 != '4515017' and nem:eOther.15 != '4515019' and nem:eOther.15 != '4515021' and nem:eOther.15 != '4515023' and nem:eOther.15 != '4515025' and nem:eOther.15 != '4515027' and nem:eOther.15 != '4515001')) and ../../nem:eDisposition/nem:eDisposition.12 = '4212001') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Document the first name of the hospital staff who assumed care of the patient.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
		<sch:pattern>
			<sch:title>eOther.20 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eOther/nem:eOther.SignatureGroup">
			<sch:let name="nemsisElements" value="nem:eOther.20"/> <sch:assert id="Rule_6407" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eOther.20) or nem:eOther.20 = '') and (nem:eOther.13 and nem:eOther.13 != '') and (not(nem:eOther.15) or nem:eOther.15 = '' or (nem:eOther.15 != '4515003' and nem:eOther.15 != '4515005' and nem:eOther.15 != '4515007' and nem:eOther.15 != '4515009' and nem:eOther.15 != '4515011' and nem:eOther.15 != '4515013' and nem:eOther.15 != '4515015' and nem:eOther.15 != '4515017' and nem:eOther.15 != '4515019' and nem:eOther.15 != '4515021' and nem:eOther.15 != '4515023' and nem:eOther.15 != '4515025' and nem:eOther.15 != '4515027' and nem:eOther.15 != '4515001')) and ../../nem:eDisposition/nem:eDisposition.12 = '4212001') and (starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64') or starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65')))">Signature: Print the last name of the person signing</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eMedications.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.01"/> <sch:assert id="Rule_6500" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eMedications.01) or nem:eMedications.01 = '') and (nem:eMedications.03 and nem:eMedications.03 != '') and nem:eMedications.02 != '9923003'))">Date/Time Medication Administered Cannot be Blank</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eMedications.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.01"/> <sch:assert id="Rule_6501" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eMedications.02 = '9923001' and (nem:eMedications.01 != '' and ../../nem:eTimes/nem:eTimes.06 != '' and xs:dateTime(nem:eMedications.01) &lt; xs:dateTime(../../nem:eTimes/nem:eTimes.06) or nem:eMedications.01 != '' and ../../nem:eTimes/nem:eTimes.13 != '' and xs:dateTime(nem:eMedications.01) &gt; xs:dateTime(../../nem:eTimes/nem:eTimes.13)))">Date/Time Medication Administered cannot be out of time sequence if Medication was not administered prior to Scene Arrival Time or after Unit Back In Service Time.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eMedications.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eMedications/nem:eMedications.MedicationGroup">
			<sch:let name="nemsisElements" value="nem:eMedications.02"/> <sch:assert id="Rule_13001" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eMedications.02) or nem:eMedications.02 = '') and (nem:eMedications.03 and nem:eMedications.03 != ''))">Document if Medication was given prior to this EMS Unit</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eProcedures.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eProcedures/nem:eProcedures.ProcedureGroup">
			<sch:let name="nemsisElements" value="nem:eProcedures.02"/> <sch:assert id="Rule_13002" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((not(nem:eProcedures.02) or nem:eProcedures.02 = '') and (nem:eProcedures.03 and nem:eProcedures.03 != ''))">Procedure performed prior to this EMS Unit</sch:assert>
			</sch:rule>
		</sch:pattern>

<!-- ICEMA rule ID: 2538 -->
		<sch:pattern>
			<sch:title>eSituation.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.12"/> <sch:assert id="Rule_13004" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eSituation.12 and nem:eSituation.12 != '') and (not(nem:eSituation.12) or nem:eSituation.12 = '' or (count(nem:eSituation.12[text() = 'R10.84']) = 0 and count(nem:eSituation.12[text() = 'R41.0']) = 0 and count(nem:eSituation.12[text() = 'F10.92']) = 0 and count(nem:eSituation.12[text() = 'R68.13']) = 0 and count(nem:eSituation.12[text() = 'T78.2']) = 0 and count(nem:eSituation.12[text() = 'F99']) = 0 and count(nem:eSituation.12[text() = 'T30.0']) = 0 and count(nem:eSituation.12[text() = 'T58']) = 0 and count(nem:eSituation.12[text() = 'R41.82']) = 0 and count(nem:eSituation.12[text() = 'T78.40']) = 0 and count(nem:eSituation.12[text() = 'T71.9']) = 0 and count(nem:eSituation.12[text() = 'R04.0']) = 0 and count(nem:eSituation.12[text() = 'H57.9']) = 0 and count(nem:eSituation.12[text() = 'I10']) = 0 and count(nem:eSituation.12[text() = 'R50.9']) = 0 and count(nem:eSituation.12[text() = 'N39.9']) = 0 and count(nem:eSituation.12[text() = 'H93.90']) = 0 and count(nem:eSituation.12[text() = 'T75.4']) = 0 and count(nem:eSituation.12[text() = 'G24.0']) = 0 and count(nem:eSituation.12[text() = 'R53.1']) = 0 and count(nem:eSituation.12[text() = 'Z77.9']) = 0 and count(nem:eSituation.12[text() = 'R51']) = 0 and count(nem:eSituation.12[text() = 'E13.65']) = 0 and count(nem:eSituation.12[text() = 'T67.0']) = 0 and count(nem:eSituation.12[text() = 'E13.64']) = 0 and count(nem:eSituation.12[text() = 'T68']) = 0 and count(nem:eSituation.12[text() = 'J68.9']) = 0 and count(nem:eSituation.12[text() = 'K92.1']) = 0 and count(nem:eSituation.12[text() = 'R11.2']) = 0 and count(nem:eSituation.12[text() = 'Z38.2']) = 0 and count(nem:eSituation.12[text() = 'G89.1']) = 0 and count(nem:eSituation.12[text() = 'R99']) = 0 and count(nem:eSituation.12[text() = 'F19']) = 0 and count(nem:eSituation.12[text() = 'M79.60']) = 0 and count(nem:eSituation.12[text() = 'O60.0']) = 0 and count(nem:eSituation.12[text() = 'R00.2']) = 0 and count(nem:eSituation.12[text() = 'J96.9']) = 0 and count(nem:eSituation.12[text() = 'J98.01']) = 0 and count(nem:eSituation.12[text() = 'J80']) = 0 and count(nem:eSituation.12[text() = 'J81.0']) = 0 and count(nem:eSituation.12[text() = 'G40.901']) = 0 and count(nem:eSituation.12[text() = 'G40.909']) = 0 and count(nem:eSituation.12[text() = 'A41.9']) = 0 and count(nem:eSituation.12[text() = 'I95.9']) = 0 and count(nem:eSituation.12[text() = 'J70.5']) = 0 and count(nem:eSituation.12[text() = 'T63']) = 0 and count(nem:eSituation.12[text() = 'I63.9']) = 0 and count(nem:eSituation.12[text() = 'T75.1XXA']) = 0 and count(nem:eSituation.12[text() = 'R55']) = 0 and count(nem:eSituation.12[text() = 'I46.8']) = 0 and count(nem:eSituation.12[text() = 'T14.90']) = 0 and count(nem:eSituation.12[text() = 'K92.0']) = 0 and count(nem:eSituation.12[text() = 'N93.9']) = 0 and count(nem:eSituation.12[text() = 'Z00.00']) = 0 and count(nem:eSituation.12[text() = 'I46.9']) = 0 and count(nem:eSituation.12[text() = 'I49.9']) = 0 and count(nem:eSituation.12[text() = 'R07.89']) = 0 and count(nem:eSituation.12[text() = 'I21.3']) = 0 and count(nem:eSituation.12[text() = 'I20.9']) = 0 and count(nem:eSituation.12[text() = 'O80']) = 0 and count(nem:eSituation.12[text() = 'J00']) = 0 and count(nem:eSituation.12[text() = 'K59.1']) = 0 and count(nem:eSituation.12[text() = 'R42']) = 0 and count(nem:eSituation.12[text() = 'O99']) = 0 and count(nem:eSituation.12[text() = 'Z20.828']) = 0 and count(nem:eSituation.12[text() = 'Z20.9']) = 0)) and ../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2019-01-15T00:00:00-06:00'))">Rule to limit choices to EMSA&apos;s approved list.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eTimes.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:eTimes.01"/> <sch:assert id="Rule_13005" role="[ERROR]" diagnostics="nemsisDiagnostic" test="not((not(nem:eTimes.01) or nem:eTimes.01 = '') and nem:eTimes.01 != '' and xs:dateTime(nem:eTimes.01) &lt; xs:dateTime('2018-07-01T00:00:00-06:00'))">Date of Service can not be prior to 2017</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eVitals.18 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eVitals/nem:eVitals.VitalGroup">
			<sch:let name="nemsisElements" value="nem:eVitals.18"/> <sch:assert id="Rule_13006" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(number(nem:eVitals.18) &gt; number('2000') and (not(nem:eVitals.18[@NV]) or (nem:eVitals.18[@NV!='7701001'])) and (not(nem:eVitals.18[@PN]) or (nem:eVitals.18[@PN!='8801019'] and nem:eVitals.18[@PN!='8801023'])) and nem:eVitals.02 != '9923003' and ../../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2019-01-15T00:00:00-06:00'))">The blood glucose should be 2,000 or less. </sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition">
			<sch:let name="nemsisElements" value="nem:eDisposition.12"/> <sch:assert id="Rule_13010" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(not(nem:eDisposition.12) or (nem:eDisposition.12 != '4212033' and nem:eDisposition.12 != '4212031' and nem:eDisposition.12 != '4212027' and nem:eDisposition.12 != '4212015' and nem:eDisposition.12 != '4212019' and nem:eDisposition.12 != '4212007' and nem:eDisposition.12 != '4212011' and nem:eDisposition.12 != '4212009' and nem:eDisposition.12 != '4212039' and nem:eDisposition.12 != '4212035' and nem:eDisposition.12 != '4212037' and nem:eDisposition.12 != '4212007' and nem:eDisposition.12 != '4212003' and nem:eDisposition.12 != '4212005' and nem:eDisposition.12 != '4212023' and nem:eDisposition.12 != '4212025' and nem:eDisposition.12 != '4212041' and nem:eDisposition.12 != '4212013' and nem:eDisposition.12 != '4212017' and nem:eDisposition.12 != '4212021' and nem:eDisposition.12 != '4212029' and nem:eDisposition.12 != '4212043') and (not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S63')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64')) and not(starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S65'))) and ../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2019-01-15T00:00:00-06:00'))">Added to limit to NEMSIS Values only.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.DestinationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.02"/> <sch:assert id="Rule_2611" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(((not(nem:eDisposition.02) or nem:eDisposition.02 = '') and (nem:eDisposition.01 and nem:eDisposition.01 != '') and (not(nem:eDisposition.01[@NV])) and (not(../nem:eDisposition.21) or ../nem:eDisposition.21 = '' or (../nem:eDisposition.21 != '4221001' and ../nem:eDisposition.21 != '4221013'))) and ((../../nem:eTimes/nem:eTimes.11 and ../../nem:eTimes/nem:eTimes.11 != '') or (../nem:eDisposition.12 = '4212033' or ../nem:eDisposition.12 = '4212031' or  ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition.12 = '4212023' or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.101'] or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.116'])) and starts-with(../../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62'))">Destination is required.</sch:assert>
			</sch:rule>
		</sch:pattern>

<!-- ICEMA rule ID: 2612 -->
		<sch:pattern>
			<sch:title>eSituation.12 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eSituation">
			<sch:let name="nemsisElements" value="nem:eSituation.12"/> <sch:assert id="Rule_2612" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eSituation.12 and nem:eSituation.12 != '') and (not(nem:eSituation.12) or nem:eSituation.12 = '' or count(nem:eSituation.12[text() = ('R10.84', 'R41.0', 'T71.9', 'T78.40', 'F10.92', 'R41.82', 'R68.13', 'T78.2', 'F99', 'T30.0', 'T58', 'I46.9', 'I49.9', 'R07.89', 'I21.3', 'I20.9', 'O80', 'J00', 'K59.1', 'R42', 'G24.0', 'T75.4', 'H93.90', 'R04.0', 'H57.9', 'I10', 'R50.9', 'T17.9', 'N39.9', 'R53.1', 'Z77.9', 'R51', 'E13.65', 'T67.0', 'E13.64', 'T68', 'J68.9', 'K92.1', 'R11.2', 'Z38.2', 'G89.1', 'R99', 'F19', 'M79.60', 'R00.2', 'O60.0', 'J96.9', 'J98.01', 'J80', 'J81.0', 'G40.901', 'G40.909', 'A41.9', 'I95.9', 'J70.5', 'T63.0', 'I63.9', 'T75.1XXA', 'R55', 'I46.8', 'K92.0', 'T14.90', 'N93.9', 'Z00.00', 'O99', 'Z20.828', 'Z20.9')]) = 0) and ../nem:eTimes/nem:eTimes.01 != '' and xs:dateTime(../nem:eTimes/nem:eTimes.01) &gt; xs:dateTime('2019-05-20T00:00:00-06:00') and (../nem:eDisposition/nem:eDisposition.12 = '4212033' or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'eDisposition.12'][nem:eCustomResults.01 = 'it4212.142'] or ../nem:eDisposition/nem:eDisposition.12 = '4212031' or ../nem:eDisposition/nem:eDisposition.12 = '4212027' or ../nem:eDisposition/nem:eDisposition.12 = '4212035' or ../nem:eDisposition/nem:eDisposition.12 = '4212037' or ../nem:eDisposition/nem:eDisposition.12 = '4212029' or ../nem:eDisposition/nem:eDisposition.12 = '4212023') and (nem:eSituation.11 and nem:eSituation.11 != '') and ../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01 != 'S62')">Rule to limit choices to EMSA's approved list (eSitutation.12)</sch:assert>
			</sch:rule>
		</sch:pattern>

<!-- ICEMA rule ID: 2672 -->
		<sch:pattern>
			<sch:title>itExam.070 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eTimes">
			<sch:let name="nemsisElements" value="nem:itExam.070"/> <sch:assert id="Rule_2672" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not((nem:eTimes.03 != '' and xs:dateTime(nem:eTimes.03) &gt; xs:dateTime('2020-01-27T00:00:00-08:00')) and (not(../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.070']) or ../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.070'][nem:eCustomResults.01 = '']) and (../nem:eSituation/nem:eSituation.11 = ('A41.9', 'R50.9', 'R11.2', 'J00', 'J80', 'J98.01', 'J81.0', 'R53.1') or count(../nem:eSituation/nem:eSituation.12[text() = ('A41.9', 'R50.9', 'R11.2', 'J00', 'J80', 'J98.01', 'J81.0', 'R53.1')]) &gt; 0) and (starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S62') or starts-with(../nem:eResponse/nem:eResponse.AgencyGroup/nem:eResponse.01,'S64')))">Required for PT Contacts.</sch:assert>
			</sch:rule>
		</sch:pattern>

<!-- ICEMA rule ID: 2673 -->
		<sch:pattern>
			<sch:title>itExam.072 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse/nem:eResponse.AgencyGroup">
			<sch:let name="nemsisElements" value="nem:itExam.072"/> <sch:assert id="Rule_2673" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.070'][nem:eCustomResults.01 = 'itExam.070.102'] and (not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.072']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.071'][nem:eCustomResults.01 = '']) and starts-with(nem:eResponse.01,'S62'))">Required for all PT Contacts</sch:assert>
			</sch:rule>
		</sch:pattern>

<!-- ICEMA rule ID: 2674 -->
		<sch:pattern>
			<sch:title>itExam.071 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse/nem:eResponse.AgencyGroup">
			<sch:let name="nemsisElements" value="nem:itExam.071"/> <sch:assert id="Rule_2674" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.070'][nem:eCustomResults.01 = 'itExam.070.102'] and (not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.071']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.071'][nem:eCustomResults.01 = '']) and starts-with(nem:eResponse.01,'S62'))">Required for all PT Contacts</sch:assert>
			</sch:rule>
		</sch:pattern>

<!-- ICEMA rule ID: 2675 -->
		<sch:pattern>
			<sch:title>itExam.074 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eResponse/nem:eResponse.AgencyGroup">
			<sch:let name="nemsisElements" value="nem:itExam.074"/> <sch:assert id="Rule_2675" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.070'][nem:eCustomResults.01 = 'itExam.070.102'] and (not(../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.074']) or ../../nem:eCustomResults/nem:eCustomResults.ResultsGroup[nem:eCustomResults.02 = 'itExam.074'][nem:eCustomResults.01 = '']) and starts-with(nem:eResponse.01,'S62'))">Required for all PT Contacts. Example: Wuhan, China.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eScene.11 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eScene">
			<sch:let name="nemsisElements" value="nem:eScene.11"/> <sch:assert id="GPS_Scene" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(nem:eScene.11 != '' and not(matches(nem:eScene.11, '^(\-?\d+(\.\d+)?),\s*(\-\d+(\.\d+)?)$')))">Scene GPS Location is not valid.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>PatientCareReport related rule.</sch:title>
			<sch:rule context="nem:Header">
			<sch:let name="nemsisElements" value="nem:Header"/> <sch:assert id="One_PCR_Max" role="[FATAL]" diagnostics="nemsisDiagnostic" test="not(count(nem:PatientCareReport) &gt; 1)">There should only be one PCR record per file.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eRecord.04 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eRecord/nem:eRecord.SoftwareApplicationGroup">
			<sch:let name="nemsisElements" value="nem:eRecord.04"/> <sch:assert id="Software_Version_Compliance" role="[WARNING]" diagnostics="nemsisDiagnostic" test="not(
			(nem:eRecord.02 = 'Beyond Lucid Technologies' and nem:eRecord.03 = 'MEDIVIEW BEACON Prehospital Health Information Exchange' and not(starts-with(nem:eRecord.04, '2019'))) or 
			(nem:eRecord.02 = 'Center for Advanced Public Safety' and nem:eRecord.03 = 'RESCUE Submission Aggregator' and not(starts-with(nem:eRecord.04, '1.'))) or 
			(nem:eRecord.02 = 'CloudPCR LLC' and nem:eRecord.03 = 'CloudPCR Bridge' and not(starts-with(nem:eRecord.04, '2.'))) or 
			(nem:eRecord.02 = 'Consilience' and nem:eRecord.03 = 'Maven' and not(starts-with(nem:eRecord.04, '5.'))) or 
			(nem:eRecord.02 = 'Digital Innovation, Inc' and nem:eRecord.03 = 'DI NEMSIS Aggregator' and not(starts-with(nem:eRecord.04, '2015_12'))) or 
			(nem:eRecord.02 = 'ESO Solutions, Inc.' and nem:eRecord.03 = 'Health Data Exchange' and not(starts-with(nem:eRecord.04, '2.'))) or 
			(nem:eRecord.02 = 'ImageTrend, Inc.' and nem:eRecord.03 = ('Elite', 'ImageTrend Elite') and not(starts-with(nem:eRecord.04, '1'))) or 
			(nem:eRecord.02 = 'Inspironix' and nem:eRecord.03 = 'EMS Outfielder Web' and not(starts-with(nem:eRecord.04, '3.'))) or 
			(nem:eRecord.02 = 'Intermedix' and nem:eRecord.03 = ('TripTix CDX', 'TripTix') and not(starts-with(nem:eRecord.04, '4.'))) or 
			(nem:eRecord.02 = 'Kern County EMS Agency' and nem:eRecord.03 = 'KCEMSA NEMSIS Upload Utility' and not(starts-with(nem:eRecord.04, '2'))) or 
			(nem:eRecord.02 = 'World Advancement of Technology for EMS and Rescue' and nem:eRecord.03 = ('Street Sense', 'Street Analytics') and not(starts-with(nem:eRecord.04, '2.'))) or 
			(nem:eRecord.02 = 'ZOLL' and nem:eRecord.03 = 'ZOLL Online' and not(starts-with(nem:eRecord.04, '1'))) or 
			(nem:eRecord.02 = 'A/R Concepts, Inc.' and nem:eRecord.03 = 'ARC ePCR' and not(starts-with(nem:eRecord.04, '4.'))) or 
			(nem:eRecord.02 = 'Action Ambulance' and nem:eRecord.03 = 'EZPCR' and not(starts-with(nem:eRecord.04, '03.'))) or 
			(nem:eRecord.02 = 'Alpine Software Corp.' and nem:eRecord.03 = 'RedNMX' and not(starts-with(nem:eRecord.04, '10'))) or 
			(nem:eRecord.02 = 'American Ambulance' and nem:eRecord.03 = 'Simon' and not(starts-with(nem:eRecord.04, '2.'))) or 
			(nem:eRecord.02 = 'American Medical Reponse' and nem:eRecord.03 = 'MEDS' and not(starts-with(nem:eRecord.04, '4'))) or 
			(nem:eRecord.02 = 'AngelTrack LLC' and nem:eRecord.03 = 'AngelTrack' and not(starts-with(nem:eRecord.04, '2.'))) or 
			(nem:eRecord.02 = 'Application Data Systems Inc' and nem:eRecord.03 = 'DataforceWeb Fire &amp; EMS' and not(starts-with(nem:eRecord.04, '3.'))) or 
			(nem:eRecord.02 = 'Beyond Lucid Technologies' and nem:eRecord.03 = 'MediView' and not(starts-with(nem:eRecord.04, '2016'))) or 
			(nem:eRecord.02 = 'Center for Advanced Public Safety' and nem:eRecord.03 = 'RESCUE' and not(starts-with(nem:eRecord.04, '1.'))) or 
			(nem:eRecord.02 = 'CloudPCR LLC' and nem:eRecord.03 = 'CloudPCR' and not(starts-with(nem:eRecord.04, '1'))) or 
			(nem:eRecord.02 = 'Computer Investment Advice, Inc.' and nem:eRecord.03 = 'Quicktrip' and not(starts-with(nem:eRecord.04, '2017'))) or 
			(nem:eRecord.02 = 'Creative EMS' and nem:eRecord.03 = 'CreativeEMS' and not(starts-with(nem:eRecord.04, '1.'))) or 
			(nem:eRecord.02 = 'Documed Systems International Inc' and nem:eRecord.03 = 'Emergency-Pro' and not(starts-with(nem:eRecord.04, '6'))) or 
			(nem:eRecord.02 = 'Emergency Reporting' and nem:eRecord.03 = 'Emergency Reporting' and not(starts-with(nem:eRecord.04, '11.'))) or 
			(nem:eRecord.02 = 'EMS Consultants Ltd.' and nem:eRecord.03 = 'Prestige ePCR' and not(starts-with(nem:eRecord.04, '3'))) or 
			(nem:eRecord.02 = 'emsCharts, Inc' and nem:eRecord.03 = 'emsCharts Web' and not(starts-with(nem:eRecord.04, '4.'))) or 
			(nem:eRecord.02 = 'Eos Logic Inc.' and nem:eRecord.03 = 'Eos PCR' and not(starts-with(nem:eRecord.04, '3'))) or 
			(nem:eRecord.02 = 'Epr Systems USA Inc' and nem:eRecord.03 = 'FireWorks' and not(starts-with(nem:eRecord.04, '1.'))) or 
			(nem:eRecord.02 = 'ESO Solutions' and nem:eRecord.03 = 'EHR' and not(starts-with(nem:eRecord.04, '5.'))) or 
			(nem:eRecord.02 = 'Forte Holdings Inc' and nem:eRecord.03 = 'iPCR' and not(starts-with(nem:eRecord.04, 'v3.'))) or 
			(nem:eRecord.02 = 'Golden Hour Data Systems' and nem:eRecord.03 = 'Golden Hour Live' and not(starts-with(nem:eRecord.04, '2015'))) or 
			(nem:eRecord.02 = 'Lancet Technology' and nem:eRecord.03 = 'Fire-Rescue One' and not(starts-with(nem:eRecord.04, '411'))) or 
			(nem:eRecord.02 = 'Macro Logic, Inc' and nem:eRecord.03 = 'CodeRed EMS' and not(starts-with(nem:eRecord.04, '4.'))) or 
			(nem:eRecord.02 = 'MedaPoint, Inc' and nem:eRecord.03 = 'AdvanceCare' and not(starts-with(nem:eRecord.04, '1'))) or 
			(nem:eRecord.02 = 'Medusa Medical Technologies' and nem:eRecord.03 = 'Siren ePCR Suite' and not(starts-with(nem:eRecord.04, '4.'))) or 
			(nem:eRecord.02 = 'OCI Software' and nem:eRecord.03 = 'AmbuPro EMS' and not(starts-with(nem:eRecord.04, '16'))) or 
			(nem:eRecord.02 = 'ProPhoenix Corp.' and nem:eRecord.03 = 'Fire RMS' and not(starts-with(nem:eRecord.04, 'Version 2016'))) or 
			(nem:eRecord.02 = 'RAM Software Systems, Inc.' and nem:eRecord.03 = 'AIM Online EMS Workflow-Dispatch, ePCR, and Billing' and not(starts-with(nem:eRecord.04, '5'))) or 
			(nem:eRecord.02 = 'RescueMedic EMS' and nem:eRecord.03 = 'Rescue Medic PCR' and not(starts-with(nem:eRecord.04, '3.'))) or 
			(nem:eRecord.02 = 'SafetyPAD' and nem:eRecord.03 = 'SafetyPAD Mobile' and not(starts-with(nem:eRecord.04, '2.'))) or 
			(nem:eRecord.02 = 'Starwest Tech' and nem:eRecord.03 = 'Zoi' and not(starts-with(nem:eRecord.04, '1'))) or 
			(nem:eRecord.02 = 'Stryker' and nem:eRecord.03 = 'HealthEMS' and not(starts-with(nem:eRecord.04, '5.'))) or
			(nem:eRecord.02 = 'Traumasoft LLC' and nem:eRecord.03 = 'TSOFT v3' and not(starts-with(nem:eRecord.04, 'v3.'))) or 
			(nem:eRecord.02 = 'Tyler Technologies' and nem:eRecord.03 = 'New World Public Safety' and not(starts-with(nem:eRecord.04, '11.'))) or 
			(nem:eRecord.02 = 'World Advancement of Technology for EMS and Rescue' and nem:eRecord.03 = 'Street EMS' and not(starts-with(nem:eRecord.04, '3'))) or 
			(nem:eRecord.02 = 'ZOLL' and nem:eRecord.03 = 'RescueNet ePCR' and not(starts-with(nem:eRecord.04, '6.'))) or 
			(nem:eRecord.02 = 'ZOLL' and nem:eRecord.03 = 'ZOLL ePCR' and not(starts-with(nem:eRecord.04, '10')))
			)">Your product version is not NEMSIS compliant. This is currently a Schematron warning, but will become a Schematron error in January, 2020. The version submitted was <sch:value-of select="nem:eRecord.04" />.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.02 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.DestinationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.02"/> <sch:assert id="RestrictByDestinationCode" role="[FATAL]" diagnostics="nemsisDiagnostic" test="not(nem:eDisposition.02 and nem:eDisposition.02 != '' and .[not(nem:eDisposition.02 = ('1055', '1056', '20001', '20002', '20003', '20004', '20005', '20006', '20007', '20008', '20009', '20010', '20011', '20012', '20014', '20015', '20018', '20019', '20020', '20021', '20022', '20023', '20024', '20025', '20026', '20027', '20028', '20029', '20030', '20031', '20032', '20033', '20034', '20035', '20036', '20037', '20038', '20039', '20040', '20041', '20042', '20043', '20044', '20045', '20046', '20048', '20050', '20051', '20052', '20053', '20054', '20055', '20056', '20057', '20058', '20059', '20060', '20061', '20062', '20063', '20064', '20065', '20066', '20067', '20068', '20069', '20070', '20071', '20072', '20073', '20074', '20075', '20076', '20077', '20078', '20079', '20080', '20081', '20082', '20083', '20084', '20085', '20086', '20087', '20089', '20090', '20091', '20094', '20095', '20096', '20097', '20098', '20099', '20100', '20101', '20102', '20103', '20105', '20106', '20107', '20108', '20109', '20110', '20111', '20112', '20113', '20114', '20115', '20116', '20117', '20118', '20119', '20120', '20121', '20122', '20123', '20124', '20125', '20126', '20127', '20128', '20129', '20130', '20131', '20132', '20133', '20134', '20135', '20136', '20137', '20138', '20139', '20140', '20141', '20142', '20143', '20144', '20145', '20146', '20147', '20148', '20149', '20150', '20151', '20152', '20153', '20155', '20156', '20157', '20158', '20159', '20160', '20161', '20162', '20163', '20164', '20165', '20166', '20167', '20168', '20169', '20170', '20171', '20172', '20173', '20174', '20175', '20176', '20177', '20178', '20179', '20180', '20181', '20182', '20183', '20184', '20185', '20186', '20187', '20188', '20189', '20190', '20191', '20192', '20193', '20194', '20195', '20196', '20197', '20198', '20199', '20200', '20201', '20202', '20203', '20204', '20205', '20206', '20207', '20208', '20209', '20210', '20211', '20212', '20213', '20214', '20215', '20216', '20217', '20218', '20219', '20220', '20221', '20222', '20223', '20224', '20225', '20226', '20227', '20228', '20229', '20230', '20231', '20232', '20233', '20234', '20235', '20236', '20237', '20238', '20239', '20240', '20241', '20242', '20243', '20244', '20245', '20246', '20247', '20248', '20249', '20250', '20251', '20252', '20253', '20254', '20255', '20256', '20257', '20258', '20259', '20260', '20261', '20262', '20263', '20264', '20265', '20266', '20267', '20268', '20269', '20270', '20271', '20272', '20273', '20274', '20275', '20276', '20277', '20278', '20279', '20280', '20281', '20282', '20283', '20284', '20285', '20286', '20287', '20288', '20289', '20290', '20291', '20292', '20293', '20294', '20295', '20296', '20297', '20298', '20299', '20300', '20301', '20302', '20303', '20304', '20305', '20306', '20307', '20308', '20309', '20310', '20311', '20313', '20314', '20315', '20316', '20317', '20318', '20319', '20320', '20321', '20322', '20323', '20324', '20325', '20326', '20328', '20329', '20330', '20331', '20333', '20334', '20335', '20336', '20337', '20338', '20339', '20340', '20341', '20342', '20343', '20344', '20345', '20346', '20347', '20348', '20349', '20350', '20351', '20352', '20353', '20354', '20355', '20356', '20357', '20358', '20359', '20360', '20361', '20362', '20364', '20365', '20366', '20367', '20368', '20369', '20370', '20371', '20372', '20373', '20374', '20375', '20376', '20377', '20378', '20379', '20380', '20381', '20382', '20383', '20385', '20386', '20387', '20388', '20389', '20390', '20391', '20392', '20393', '20394', '20395', '20396', '20397', '20398', '20399', '20400', '20401', '20402', '20403', '20404', '20405', '20406', '20407', '20408', '20409', '20410', '20411', '20412', '20413', '20414', '20415', '20416', '20417', '20418', '20419', '20420', '20421', '20422', '20423', '20424', '20425', '20426', '20427', '20428', '20429', '20430', '20431', '20432', '20433', '20434', '20435', '20436', '20437', '20438', '20439', '20440', '20441', '20442', '20443', '20444', '20445', '20446', '20447', '20448', '20449', '20450', '20451', '20452', '20453', '20454', '20455', '20456', '20457', '20458', '20459', '20460', '20461', '20462', '20463', '20464', '20465', '20466', '20467', '20468', '20469', '20470', '20471', '20472', '20473', '20474', '20475', '20476', '20477', '20478', '20479', '20480', '20481', '20482', '20483', '20484', '20485', '20486', '20487', '20488', '20489', '20490', '20491', '20492', '20493', '20494', '20495', '20496', '20497', '20498', '20499', '20500', '20502', '20503', '20504', '20505', '20506', '20508', '20509', '20510', '20511', '20512', '20513', '20514', '20515', '20516', '20517', '20518', '20519', '20520', '20521', '20522', '20523', '20524', '20525', '20526', '20527', '20528', '20529', '20530', '20531', '20532', '20533', '20534', '20535', '20536', '20537', '20538', '20539', '20540', '20541', '20542', '20543', '20544', '20545', '20546', '20547', '20549', '20550', '20551', '20552', '20553', '20554', '20555', '20556', '20557', '20559', '20560', '20561', '20562', '20563', '20564', '20565', '20566', '20567', '20568', '20569', '20570', '20571', '20572', '20573', '20574', '20575', '20576', '20577', '20578', '20579', '20580', '20581', '20582', '20583', '20584', '20585', '20586', '20587', '20588', '20589', '20590', '20591', '20592', '20593', '20594', '20595', '20596', '20597', '20598', '20599', '20600', '20601', '20602', '20603', '20604', '20605', '20606', '20607', '20608', '20609', '20610', '20611', '20612', '20613', '20614', '20615', '20616', '20617', '20618', '20619', '20620', '20621', '20622', '20623', '20624', '20625', '20626', '20627', '20628', '20629', '20630', '20631', '20632', '20633', '20634', '20635', '20636', '20637', '20638', '20639', '20640', '20641', '20642', '20643', '20644', '20645', '20646', '20647', '20648', '20649', '20650', '20651', '20652', '20653', '20654', '20655', '20656', '20657', '20658', '20659', '20660', '20661', '20662', '20663', '20664', '20665', '20666', '20667', '20668', '20669', '20670', '20671', '20672', '20673', '20674', '20675', '20676', '20677', '20678', '20679', '20680', '20681', '20682', '20683', '20684', '20685', '20686', '20687', '20688', '20689', '20690', '20691', '20692', '20693', '20694', '20695', '20696', '20697', '20698', '20699', '20700', '20701', '20702', '20703', '20704', '20705', '20706', '20707', '20708', '20709', '20710', '20711', '20712', '20713', '20714', '20715', '20716', '20717', '20718', '20719', '20720', '20721', '20722', '20723', '20724', '20725', '20726', '20727', '20728', '20729', '20730', '20731', '20732', '20733', '20734', '20735', '20736', '20737', '20738', '20739', '20740', '20741', '20742', '20743', '20744', '20745', '20746', '20747', '20748', '20749', '20750', '20751', '20752', '20753', '20754', '20755', '20756', '20757', '20758', '20759', '20760', '20761', '20762', '20763', '20764', '20765', '20766', '20767', '20768', '20769', '20770', '20771', '20772', '20773', '20774', '20775', '20776', '20777', '20778', '20779', '20780', '20781', '20782', '20783', '20784', '20785', '20786', '20787', '20788', '20789', '20790', '20791', '20792', '20793', '20794', '20795', '20796', '20797', '20798', '20799', '20800', '20801', '20802', '20803', '20804', '20805', '20806', '20807', '20808', '20809', '20810', '20811', '20812', '20813', '20814', '20815', '20816', '20817', '20818', '20819', '20820', '20821', '20822', '20823', '20824', '20825', '20826', '20827', '20828', '20829', '20830', '20831', '20832', '20833', '20834', '20835', '20836', '20837', '20838', '20839', '20840', '20841', '20842', '20843', '20844', '20845', '20846', '20847', '20848', '20849', '20850', '20851', '20852', '20853', '20854', '20855', '20856', '20857', '20858', '20859', '20860', '20861', '20862', '20863', '20864', '20865', '20866', '20867', '20868', '20869', '20870', '20871', '20872', '20873', '20874', '20875', '20876', '20877', '20878', '20879', '20880', '20881', '20882', '20883', '20884', '20885', '20886', '20888', '20889', '20890', '20891', '20892', '20893', '20894', '20895', '20896', '20897', '20898', '20899', '20900', '20901', '20902', '20903', '20904', '20905', '20906', '20907', '20908', '20909', '20910', '20911', '20912', '20913', '20914', '20915', '20916', '20917', '20918', '20919', '20920', '20921', '20922', '20923', '20924', '20925', '20926', '20927', '20928', '20929', '20930', '20931', '20932', '20933', '20934', '20935', '20936', '20937', '20938', '20939', '20940', '20941', '20942', '20943', '20944', '20945', '20946', '20947', '20948', '20949', '20950', '20951', '20952', '20953', '20954', '20955', '20956', '20957', '20958', '20959', '20960', '20961', '20962', '20963', '20964', '20965', '20966', '20967', '20968', '20969', '20970', '20971', '20972', '20973', '20974', '20975', '20976', '20977', '20978', '20979', '20980', '20981', '20982', '20983', '20984', '20985', '20986', '20987', '20988', '20989', '20990', '20991', '20992', '20993', '20994', '20995', '20996', '20997', '20998', '20999', '21000', '21001', '21002', '21003', '21004', '21005', '21006', '21007', '21008', '21009', '21010', '21011', '21012', '21013', '21014', '21015', '21016', '21017', '21018', '21019', '21020', '21021', '21022', '21023', '21024', '21025', '21026', '21027', '21028', '21029', '21030', '21031', '21032', '21033', '21034', '21035', '21036', '21037', '21038', '21039', '21040', '21041', '21042', '21043', '21044', '21045', '21046', '21047', '21048', '21049', '21050', '21051', '21052', '21053', '21054', '21055', '21056', '21057', '21058', '21059', '21060', '21061', '21062', '21063', '21064', '21065', '21066', '21067', '21068', '21069', '21070', '21071', '21072', '21073', '21074', '21075', '21076', '21077', '21078', '21079', '21080', '21081', '21082', '21083', '21084', '21085', '21086', '21087', '21088', '21089', '21090', '21091', '21092', '21093', '21094', '21095', '21096', '21097', '21098', '21099', '21100', '21101', '21102', '21103', '21104', '21105', '21106', '21107', '21108', '21109', '21110', '21111', '21112', '21113', '21114', '21115', '21116', '21117', '21118', '21119', '21120', '21121', '21122', '21123', '21124', '21125', '21126', '21127', '21128', '21129', '21130', '21131', '21132', '21133', '21134', '21135', '21136', '21137', '21138', '21139', '21140', '21141', '21142', '21143', '21144', '21145', '21146', '21147', '21148', '21149', '21150', '21151', '21152', '21153', '21154', '21155', '21156', '21157', '21158', '21159', '21160', '21161', '21162', '21163', '21164', '21165', '21166', '21167', '21168', '21169', '21170', '21171', '21172', '21173', '21174', '21175', '21176', '21177', '21178', '21179', '21180', '21181', '21182', '21183', '21184', '21185', '21186', '21187', '21188', '21189', '21190', '21191', '21192', '21193', '21194', '21195', '21196', '21197', '21198', '21199', '21200', '21201', '21202', '21203', '21204', '21205', '21206', '21207', '21208', '21209', '21210', '21211', '21212', '21213', '21214', '21215', '21216', '21217', '21218', '21219', '21220', '21221', '21222', '21223', '21224', '21225', '21226', '21227', '21228', '21229', '21230', '21231', '21232', '21233', '21234', '21235', '21236', '21237', '21238', '21239', '21240', '21241', '21242', '21243', '21244', '21245', '21246', '21247', '21248', '21249', '21250', '21251', '21252', '21253', '21254', '21255', '21256', '21257', '21258', '21259', '21260', '21261', '21262', '21263', '21264', '21265', '21266', '21267', '21268', '21269', '21270', '21271', '21272', '21273', '21274', '21275', '21276', '21277', '21278', '21279', '21280', '21281', '21282', '21283', '21284', '21285', '21286', '21287', '21288', '21289', '21290', '21291', '21292', '21293', '21294', '21295', '21296', '21297', '21298', '21299', '21300', '21301', '21302', '21303', '21304', '21305', '21306', '21307', '21308', '21309', '21310', '21311', '21312', '21313', '21314', '21315', '21316', '21317', '21318', '21319', '21320', '21321', '21322', '21323', '21324', '21325', '21326', '21327', '21328', '21329', '21330', '21331', '21332', '21333', '21334', '21335', '21336', '21337', '21338', '21339', '21340', '21341', '21342', '21343', '21344', '21345', '21346', '21347', '21348', '21349', '21350', '21351', '21352', '21353', '21354', '21355', '21356', '21357', '21358', '21359', '21360', '21361', '21362', '21363', '21364', '21365', '21366', '21367', '21368', '21369', '21370', '21371', '21372', '21373', '21374', '21375', '21376', '21377', '21378', '21379', '21380', '21381', '21382', '21383', '21384', '21385', '21386', '21387', '21388', '21389', '21390', '21391', '21392', '21393', '21394', '21395', '21396', '21397', '21398', '21399', '21400', '21401', '21402', '21403', '21404', '21405', '21406', '21407', '21408', '21409', '21410', '21411', '21412', '21413', '21414', '21415', '21416', '21417', '21418', '21419', '21420', '21421', '21422', '21423', '21424', '21425', '21426', '21427', '21428', '21429', '21430', '21431', '21432', '21433', '21434', '21435', '21436', '21437', '21438', '21439', '21440', '21441', '21442', '21443', '21444', '21445', '21446', '21447', '21448', '21449', '21450', '21451', '21452', '21453', '21454', '21455', '21456', '21457', '21458', '21459', '21460', '21461', '21462', '21463', '21464', '21465', '21466', '21467', '21468', '21469', '21470', '21471', '21472', '21473', '21474', '21475', '21476', '21477', '21478', '21479', '21480', '21481', '21482', '21483', '21484', '21485', '21486', '21487', '21488', '21489', '21490', '21491', '21492', '21493', '21494', '21495', '21496', '21497', '21498', '21499', '21500', '21501', '21502', '21503', '21504', '21505', '21506', '21507', '21508', '21509', '21510', '21511', '21512', '21513', '21514', '21515', '21516', '21517', '21518', '21519', '21520', '21521', '21522', '21523', '21524', '21525', '21526', '21527', '21528', '21529', '21530', '21531', '21532', '21533', '21534', '21535', '21536', '21537', '21538', '21539', '21540', '21541', '21542', '21543', '21544', '21545', '21546', '21547', '21548', '21549', '21550', '21551', '21552', '21553', '21554', '21555', '21556', '21557', '21558', '21559', '21560', '21561', '21562', '21563', '21564', '21565', '21566', '21567', '21568', '21569', '21570', '21571', '21572', '21573', '21574', '21575', '21576', '21577', '21578', '21579', '21580', '21581', '21582', '21583', '21584', '21585', '21586', '21587', '21588', '21589', '21590', '21591', '21592', '21593', '21594', '21595', '21596', '21597', '21598', '21599', '21600', '21601', '21602', '21603', '21604', '21605', '21606', '21607', '21608', '21609', '21610', '21611', '21612', '21613', '21614', '21615', '21616', '21617', '21618', '21619', '21620', '21621', '21622', '21623', '21624', '21625', '21626', '21627', '21628', '21629', '21630', '21631', '21632', '21633', '21634', '21635', '21636', '21637', '21638', '21639', '21640', '21641', '21642', '21643', '21644', '21645', '21646', '21647', '21648', '21649', '21650', '21651', '21652', '21653', '21654', '21655', '21656', '21657', '21658', '21659', '21660', '21661', '21662', '21663', '21664', '21665', '21666', '21667', '21668', '21669', '21670', '21671', '21672', '21673', '21674', '21675', '21676', '21677', '21678', '21679', '21680', '21681', '21682', '21683', '21684', '21685', '21686', '21687', '21688', '21689', '21690', '21691', '21692', '21693', '21694', '21695', '21696', '21697', '21698', '21699', '21700', '21701', '21702', '21703', '21704', '21705', '21706', '21707', '21708', '21709', '21710', '21711', '21712', '21713', '21714', '21715', '21716', '21717', '21718', '21719', '21720', '21721', '21722', '21723', '21724', '21725', '21726', '21727', '21728', '21729', '21730', '21731', '21732', '21733', '21734', '21735', '21736', '21737', '21738', '21739', '21740', '21741', '21742', '21743', '21744', '21745', '21746', '21747', '21748', '21749', '21750', '21751', '21752', '21753', '21754', '21755', '21756', '21757', '21758', '21759', '21760', '21761', '21762', '21763', '21764', '21765', '21766', '21767', '21768', '21769', '21770', '21771', '21772', '21773', '21774', '21775', '21776', '21777', '21778', '21779', '21780', '21781', '21782', '21783', '21784', '21785', '21786', '21787', '21788', '21789', '21790', '21791', '21792', '21793', '21794', '21795', '21796', '21797', '21798', '21799', '21800', '21801', '21802', '21803', '21804', '21805', '21806', '21807', '21808', '21809', '21810', '21811', '21812', '21813', '21814', '21815', '21816', '21817', '21818', '21819', '21820', '21821', '21822', '21823', '21824', '21825', '21826', '21827', '21828', '21829', '21830', '21831', '21832', '21833', '21834', '21835', '21836', '21837', '21838', '21839', '21840', '21841', '21842', '21843', '21844', '21845', '21846', '21847', '21848', '21849', '21850', '21851', '21852', '21853', '21854', '21855', '21856', '21857', '21858', '21859', '21860', '21861', '21862', '21863', '21864', '21865', '21866', '21867', '21868', '21869', '21870', '21871', '21872', '21873', '21874', '21875', '21876', '21877', '21878', '21879', '21880', '21881', '21882', '21883', '21884', '21885', '21886', '21887', '21888', '21889', '21890', '21891', '21892', '21893', '21894', '21895', '21896', '21897', '21898', '21899', '21900', '21901', '21902', '21903', '21904', '21905', '21906', '21907', '21908', '21909', '21910', '21911', '21912', '21913', '21914', '21915', '21916', '21917', '21918', '21919', '21920', '21921', '21922', '21923', '21924', '21925', '21926', '21927', '21928', '21929', '21930', '21931', '21932', '21933', '21934', '21935', '21936', '21937', '21938', '21939', '21940', '21941', '21942', '21943', '21944', '21945', '21946', '21947', '21948', '21949', '21950', '21951', '21952', '21953', '21954', '21955', '21956', '21957', '21958', '21959', '21960', '21961', '21962', '21963', '21964', '21965', '21966', '21967', '21968', '21969', '21970', '21971', '21972', '21973', '21974', '21975', '21976', '21977', '21978', '21979', '21980', '21981', '21982', '21983', '21984', '21985', '21986', '21987', '21988', '21989', '21990', '21991', '21992', '21993', '21994', '21995', '21996', '21997', '21998', '21999', '22000', '22001', '22002', '22003', '22004', '22005', '22006', '22007', '22008', '22009', '22010', '22011', '22012', '22013', '22014', '22015', '22016', '22017', '22018', '22019', '22020', '22021', '22022', '22023', '22024', '22025', '22026', '22027', '22028', '22029', '22030', '22031', '22032', '22033', '22034', '22035', '22036', '22037', '22038', '22039', '22040', '22041', '22042', '22043', '22044', '22045', '22046', '22047', '22048', '22049', '22050', '22051', '22052', '22053', '22054', '22055', '22056', '22057', '22058', '22059', '22060', '22061', '22062', '22063', '22064', '22065', '22066', '22067', '22068', '22069', '22070', '22071', '22072', '22073', '22074', '22075', '22076', '22077', '22078', '22079', '22080', '22081', '22082', '22083', '22084', '22085', '22086', '22087', '22088', '22089', '22090', '22091', '22092', '22093', '22094', '22095', '22096', '22097', '22098', '22099', '22100', '22101', '22102', '22103', '22104', '22105', '22106', '22107', '22108', '22109', '22110', '22111', '22112', '22113', '22114', '22115', '22116', '22117', '22118', '22119', '22120', '22121', '22122', '22123', '22124', '22125', '22126', '22127', '22128', '22129', '22130', '22131', '22132', '22133', '22134', '22135', '22136', '22137', '22138', '22139', '22140', '22141', '22142', '22143', '22144', '22145', '22146', '22147', '22148', '22149', '22150', '22151', '22152', '22153', '22154', '22155', '22156', '22157', '22158', '22159', '22160', '22161', '22162', '22163', '22164', '22165', '22166', '22167', '22168', '22169', '22170', '22171', '22172', '22173', '22174', '22175', '22176', '22177', '22178', '22179', '22180', '22181', '22182', '22183', '22184', '22185', '22186', '22187', '22188', '22189', '22190', '22191', '22192', '22193', '22194', '22195', '22196', '22197', '22198', '22201', '22202', '22203', '22204', '22205', '22206', '22207', '22208', '22209', '22210', '22211', '22212', '22213', '22214', '22215', '22216', '22217', '22218', '22219', '22220', '22221', '22222', '22223', '22224', '22225', '22226', '22227', '22228', '22229', '22230', '22231', '22232', '22233', '22234', '22235', '22236', '22237', '22238', '22239', '22240', '22241', '22242', '22243', '22244', '22245', '22246', '22247', '22248', '22249', '22250', '22251', '22252', '22253', '22254', '22255', '22256', '22257', '22258', '22259', '22260', '22261', '22262', '22263', '22264', '22265', '22266', '22267', '22268', '22269', '22270', '22271', '22272', '22273', '22274', '22275', '22276', '22277', '22278', '22279', '22280', '22281', '22282', '22283', '22284', '22285', '22286', '22287', '22288', '22289', '22290', '22291', '22292', '22293', '22294', '22295', '22296', '22297', '22298', '22299', '22300', '22301', '22302', '22303', '22304', '22305', '22306', '22307', '22308', '22309', '22310', '22311', '22312', '22313', '22314', '22315', '22316', '22317', '22318', '22319', '22320', '22321', '22322', '22323', '22324', '22325', '22326', '22327', '22328', '22329', '22330', '22331', '22332', '22333', '22334', '22335', '22336', '22337', '22338', '22339', '22340', '22341', '22342', '22343', '22344', '22345', '22346', '22347', '22348', '22349', '22350', '22351', '22352', '22353', '22354', '22355', '22356', '22357', '22358', '22359', '22360', '22361', '22362', '22363', '22364', '22365', '22366', '22367', '22368', '22369', '22370', '22371', '22372', '22373', '22374', '22375', '22376', '22377', '22378', '22379', '22380', '22381', '22382', '22383', '22384', '22385', '22386', '22387', '22388', '22389', '22390', '22391', '22392', '22393', '22394', '22395', '22396', '22397', '22398', '22399', '22400', '22401', '22402', '22403', '22404', '22405', '22406', '22407', '22408', '22409', '22410', '22411', '22412', '22413', '22414', '22415', '22416', '22417', '22418', '22419', '22420', '22421', '22422', '22423', '22424', '22425', '22426', '22427', '22428', '22429', '22430', '22431', '22432', '22433', '22434', '22435', '22436', '22437', '22438', '22439', '22440', '22441', '22442', '22444', '22445', '22446', '22447', '22448', '22449', '22450', '22451', '22452', '22453', '22454', '22455', '22456', '22457', '22458', '22459', '22460', '22461', '22462', '22463', '22464', '22465', '22466', '22467', '22468', '22469', '22470', '22471', '22472', '22473', '22474', '22475', '22476', '22477', '22478', '22479', '22480', '22481', '22482', '22483', '22484', '22485', '22486', '22487', '22488', '22489', '22490', '22491', '22492', '22493', '22494', '22495', '22496', '22497', '22498', '22499', '22500', '22501', '22502', '22503', '22504', '22505', '22506', '22507', '22508', '22509', '22510', '22511', '22512', '22513', '22514', '22515', '22516', '22517', '22518', '22520', '22521', '22522', '22523', '22524', '22525', '22526', '22527', '22528', '22529', '22530', '22531', '22532', '22533', '22534', '22535', '22536', '22537', '22538', '22539', '22540', '22541', '22542', '22543', '22544', '22545', '22546', '22547', '22548', '22549', '22550', '22551', '22553', '22554', '22555', '22556', '22557', '22558', '22559', '22560', '22561', '22562', '22563', '22564', '22565', '22566', '22567', '22568', '22569', '22570', '22571', '22572', '22573', '22574', '22575', '22576', '22577', '22578', '22579', '22580', '22581', '22582', '22583', '22584', '22585', '22586', '22587', '22588', '22589', '22590', '22591', '22592', '22593', '22594', '22595', '22596', '22597', '22598', '22599', '22600', '22601', '22602', '22603', '22604', '22605', '22606', '22607', '22608', '22609', '22610', '22612', '22613', '22614', '22615', '22616', '22617', '22618', '22619', '22620', '22621', '22622', '22623', '22624', '22625', '22626', '22627', '22628', '22629', '22630', '22631', '22632', '22633', '22634', '22635', '22636', '22637', '22638', '22639', '22640', '22641', '22642', '22643', '22644', '22645', '22646', '22647', '22648', '22649', '22650', '22651', '22652', '22653', '22654', '22655', '22656', '22657', '22658', '22659', '22660', '22661', '22662', '22663', '22664', '22665', '22666', '22667', '22668', '22669', '22670', '22671', '22672', '22673', '22674', '22675', '22676', '22677', '22678', '22679', '22680', '22681', '22682', '22683', '22684', '22685', '22686', '22687', '22688', '22689', '22690', '22691', '22692', '22693', '22694', '22695', '22696', '22697', '22698', '22699', '22700', '22701', '22702', '22703', '22704', '22705', '22706', '22707', '22708', '22709', '22710', '22711', '22712', '22713', '22714', '22715', '22716', '22717', '22718', '22719', '22720', '22721', '22722', '22723', '22724', '22725', '22726', '22727', '22728', '22729', '22730', '22731', '22732', '22733', '22734', '22735', '22736', '22737', '22738', '22739', '22740', '22741', '22742', '22743', '22744', '22745', '22746', '22747', '22748', '22749', '22750', '22751', '22752', '22753', '22754', '22755', '22756', '22757', '22758', '22759', '22760', '22761', '22762', '22763', '22764', '22765', '22766', '22767', '22768', '22769', '22770', '22771', '22772', '22773', '22774', '22775', '22776', '22777', '22778', '22779', '22780', '22781', '22782', '22783', '22784', '22785', '22786', '22787', '22788', '22789', '22790', '22791', '22792', '22793', '22794', '22795', '22796', '22797', '22798', '22799', '22800', '22801', '22802', '22803', '22804', '22805', '22806', '22807', '22808', '22809', '22810', '22811', '22812', '22813', '22814', '22815', '22816', '22817', '22818', '22819', '22820', '22821', '22822', '22823', '22824', '22825', '22826', '22827', '22828', '22829', '22830', '22831', '22832', '22833', '22834', '22835', '22836', '22837', '22838', '22839', '22840', '22841', '22842', '22843', '22844', '22845', '22846', '22847', '22848', '22849', '22850', '22851', '22852', '22853', '22854', '22855', '22856', '22857', '22858', '22859', '22860', '22861', '22862', '22863', '22864', '22865', '22866', '22867', '22868', '22869', '22870', '22871', '22872', '22873', '22874', '22875', '22876', '22877', '22878', '22879', '22880', '22881', '22882', '22883', '22884', '22885', '22886', '22887', '22888', '22889', '22890', '22891', '22892', '22893', '22894', '22895', '22896', '22897', '22898', '22899', '22900', '22901', '22902', '22903', '22904', '22905', '22906', '22907', '22908', '22909', '22910', '22911', '22912', '22913', '22914', '22915', '22916', '22917', '22918', '22919', '22920', '22921', '22922', '22923', '22924', '22925', '22926', '22927', '22928', '22929', '22930', '22931', '22932', '22933', '22934', '22935', '60000', '60001', '60002', '60003', '60004', '60005', '60006', '60007', '60008', '60009', '60010', '60011', '60012', '60013', '60014', '60015', '60016', '60017', '60018', '60019', '60020', '60021', '60022', '60023', '60024', '60025', '60026', '60027', '60028', '60029', '60030', '60031', '60032', '60033', '60034', '60035', '60036', '60037', '60038', '60039', '60040', '60041', '60042', '60043', '60044', '60045', '60046', '60047', '60048', '60049', '60050', '60051', '60052', '60053', '60054', '60055', '60056', '60057', '60058', '60059', '60060', '60062', '60063', '60064', '60065', '60066', '60068', '60069', '60070', '60071', '60072', '60073', '60074', '60075', '60076', '60077', '60078', '60079', '60080', '60081', '60082', '60083', '60084', '60085', '60086', '60087', '60088', '60089', '60090', '60091', '60092', '60093', '60094', '60095', '60096', '60097', '60098', '60099', '60100', '60101', '60102', '60103', '60104', '60105', '60106', '60107', '60108', '60109', '60110', '60111', '60112', '60113', '60114', '60115', '60116', '60117', '60118', '60119', '60120', '60121', '60122', '60123', '60124', '60125', '60126', '60127', '60128', '60129', '60130', '60131', '60132', '60133', '60134', '60135', '60136', '60137', '60138', '60139', '60140', '60141', '60142', '60143', '60144', '60145', '60146', '60147', '60148', '60149', '60150', '60151', '60152', '60153', '60154', '60155', '60156', '60157', '60158', '60159', '60160', '60161', '60162', '60163', '60164', '60165', '60166', '60167', '60168', '60169', '60170', '60171', '60172', '60173', '60174', '60175', '60176', '60177', '60178', '60179', '60180', '60181', '60182', '60183', '60184', '60185', '60186', '60187', '60188', '60189', '60190', '60191', '60192', '60193', '60194', '60195', '60196', '60197', '60198', '60199', '60200', '60201', '60202', '60203', '60204', '60205', '60206', '60207', '60208', '60209', '60210', '60211', '60212', '60213', '60214', '60215', '60216', '60217', '60218', '60219', '60220', '60221', '60222', '60223', '60224', '60225', '60226', '60227', '60228', '60229', '60230', '60231', '60232', '60233', '60234', '60235', '60236', '60237', '60238', '60239', '60240', '60241', '60242', '60243', '60244', '60245', '60246', '60247', '60248', '60249', '60250', '60251', '60252', '60253', '60254', '60255', '60256', '60257', '60258', '60259', '60260', '60261', '60262', '60263', '60264', '60265', '60266', '60268', '60269', '60270', '60271', '60272', '60273', '60274', '60275', '60276', '60277', '60278', '60279', '60280', '60281', '60282', '60283', '60284', '60285', '60286', '60287', '60288', '60289', '60290', '60291', '60292', '60293', '60294', '60295', '60296', '60297', '60298', '60299', '60300', '60301', '60302', '60303', '60304', '60305', '60306', '60307', '60308', '60309', '60310', '60311', '60312', '60313', '60314', '60315', '60316', '60317', '60318', '60319', '60320', '60321', '60322', '60323', '60324', '60325', '60326', '60327', '60328', '60329', '60330', '60331', '60332', '60333', '60334', '60335', '60336', '60337', '60338', '60339', '60340', '60341', '60342', '60343', '60344', '60345', '60346', '60347', '60348', '60349', '60350', '60351', '60352', '60353', '60354', '60355', '60356', '60357', '60358', '60359', '60360', '60361', '60362', '60363', '60364', '60365', '60366', '60367', '60368', '60369', '60370', '60371', '60372', '60373', '60374', '60375', '60376', '60377', '60378', '60379', '60380', '60381', '60382', '60383', '60384', '60385', '60386', '60387', '60388', '60390', '60391', '60394', '60396', '60397', '60398', '60400', '60401', '60403', '60404', '60406', '60407', '60408', '60409', '60410', '60411', '60412', '60413', '60414', '60415', '60416', '60417', '60418', '60419', '60420', '60421', '60422', '60423', '60424', '60425', '60426', '60427', '60428', '60429', '60430', '60431', '60432', '60433', '60434', '60435', '60436', '60437', '60438', '60439', '60442', '60443', '60444', '60445', '60446', '60447', '60448', '60449', '60451', '60452', '60453', '60454', '60455', '60456', '60457', '60458', '60459', '60460', '60461', '60462', '60463', '60464', '60465', '60466', '60467', '60468', '60469', '60470', '60471', '60472', '60473', '60474', '60475', '60476', '60477', '60478', '60479', '60480', '60481', '60482', '60483', '60484', '60485', '60486', '60487', '60488', '60489', '60490', '60491', '60492', '60493', '60494', '60495', '60496', '60497', '60498', '60499', '60500', '60501', '60502', '60503', '60504', '60505', '60506', '60507', '60508', '60509', '60510', '60511', '60512', '60513', '60514', '60515', '60516', '60517', '60518', '60519', '60520', '60521', '60522', '60523', '60524', '60525', '60526', '60527', '60528', '60529', '60531', '60532', '60533', '60534', '60535', '60536', '60537', '60538', '60539', '60540', '60541', '60542', '60543', '60544', '60545', '60546', '60547', '60548', '60549', '60550', '60551', '60552', '60553', '60554', '60555', '60556', '60557', '60558', '60559', '60560', '60561', '60562', '60563', '60564', '60565', '60566', '60567', '60568', '60569', '60570', '60571', '60572', '60573', '60574', '60575', '60576', '60577', '60578', '60579', '60580', '60581', '60582', '60583', '60584', '60585', '60586', '60587', '60588', '60589', '60590', '60591', '60593', '60594', '60595', '60596', '60597', '60598', '60599', '60600', '60601', '60602', '60603', '60604', '60605', '60606', '60607', '60608', '60609', '60610', '60611', '60612', '60613', '60614', '60615', '60616', '60617', '60618', '60619', '60620', '60621', '60622', '60623', '60624', '60625', '60626', '60627', '60628', '60629', '60630', '60631', '60632', '60633', '60634', '60635', '60636', '60637', '60638', '60639', '60640', '60641', '60642', '60643', '60644', '60645', '60646', '60647', '60648', '60649', '60650', '60651', '60652', '60653', '60654', '60655', '60656', '60657', '60658', '60659', '60660', '60661', '60662', '60663', '60664', '60666', '60667', '60668', '60669', '60670', '60671', '60672', '60673', '60674', '60675', '60676', '60677', '60678', '60679', '60680', '60681', '60682', '60683', '60684', '60685', '60686', '60687', '60688', '60689', '60690', '60691', '60692', '60693', '60694', '60695', '60696', '60697', '60698', '60699', '60700', '60701', '60702', '60703', '60704', '60705', '60706', '60707', '60708', '60709', '60710', '60711', '60712', '60713', '60714', '60715', '60716', '60717', '60718', '60719', '60720', '60721', '60722', '60723', '60724', '60725', '60726', '60727', '60728', '60729', '60730', '60731', '60732', '60733', '60734', '60735', '60736', '60737', '60738', '60739', '60740', '60741', '60742', '60743', '60744', '60745', '60746', '60747', '60748', '60749', '60750', '60751', '60752', '60753', '60754', '60755', '60756', '60757', '60758', '60759', '60760', '60761', '60762', '60763', '60764', '60765', '60766', '60767', '60768', '60769', '60770', '60771', '60772', '60773', '60774', '60775', '60776', '60777', '60778', '60779', '60780', '60781', '60782', '60783', '60784', '60785', '60786', '60787', '60788', '60789', '60790', '60791', '60792', '60793', '60794', '60795', '60796', '60797', '60798', '60799', '60800', '60801', '60802', '60803', '60804', '60805', '60806', '60807', '60808', '60809', '60810', '60811', '60812', '60813', '60814', '60815', '60816', '60817', '60818', '60819', '60820', '60821', '60822', '60823', '60824', '60825', '60826', '60827', '60828', '60829', '60830', '60831', '60832', '60833', '60834', '60835', '60836', '60837', '60838', '60839', '60840', '60841', '60842', '60843', '60844', '60845', '60846', '60847', '60848', '60849', '60850', '60851', '60852', '60853', '60854', '60855', '60856', '60857', '60858', '60859', '60860', '60861', '60862', '60863', '60864', '60865', '60866', '60867', '60868', '60869', '60870', '60871', '60872', '60873', '60874', '60875', '60876', '60878', '60879', '60880', '60881', '60882', '60883', '60884', '60885', '60886', '60887', '60888', '60889', '60890', '60891', '60892', '60893', '60894', '60895', '60896', '60897', '60898', '60899', '60900', '60901', '60902', '60903', '60904', '60905', '60906', '60907', '60908', '60909', '60910', '60911', '60912', '60913', '60914', '60915', '60916', '60917', '60918', '60919', '60920', '60921', '60922', '60923', '60924', '60925', '60926', '60927', '60928', '60929', '60930', '60931', '60932', '60933', '60934', '60935', '60936', '60937', '60938', '60939', '60940', '60941', '60942', '60943', '60944', '60945', '60946', '60947', '60948', '60949', '60950', '60951', '60952', '60953', '60954', '60955', '60956', '60957', '60958', '60959', '60960', '60961', '60962', '60963', '60964', '60965', '60966', '60967', '60968', '60969', '60970', '60971', '60972', '60973', '60974', '60975', '60976', '60977', '60978', '60979', '60980', '60982', '60983', '60984', '60985', '60986', '60987', '60988', '60989', '60990', '60991', '60992', '60993', '60994', '60995', '60996', '60997', '60998', '60999', '61000', '61001', '61002', '61003', '61004', '61005', '61006', '61008', '61009', '61010', '61011', '61012', '61013', '61014', '61015', '61016', '61017', '61018', '61019', '61020', '61021', '61023', '61024', '61025', '61026', '61027', '61028', '61029', '61030', '61031', '61032', '61033', '61034', '61035', '61036', '61037', '61038', '61039', '61040', '61041', '61042', '61044', '61045', '61046', '61047', '61048', '61049', '61050', '61051', '61052', '61053', '61054', '61055', '61056', '61057', '61058', '61059', '61060', '61061', '61062', '61063', '61064', '61065', '61066', '61067', '61068', '61069', '61070', '61071', '61072', '61073', '61074', '61075', '61076', '61077', '61078', '61079', '61080', '61081', '61082', '61083', '61084', '61085', '61086', '61087', '61088', '61089', '61090', '61091', '61092', '61094', '61095', '61096', '61097', '61098', '61099', '61100', '61101', '61102', '61103', '61104', '61105', '61106', '61107', '61108', '61109', '61110', '61111', '61112', '61113', '61114', '61115', '61116', '61117', '61118', '61119', '61120', '61121', '61122', '61123', '61124', '61125', '61126', '61127', '61128', '61129', '61130', '61131', '61132', '61133', '61134', '61135', '61136', '61137', '61138', '61139', '61140', '61141', '61142', '61143', '61144', '61145', '61146', '61147', '61148', '61149', '61150', '61151', '61152', '61153', '61154', '61155', '61156', '61157', '61158', '61159', '61160', '61161', '61162', '61163', '61164', '61165', '61166', '61167', '61168', '61169', '61170', '61171', '61172', '61173', '61174', '61175', '61176', '61177', '61178', '61179', '61180', '61181', '61182', '61183', '61184', '61185', '61186', '61187', '61188', '61189', '61190', '61191', '61192', '61193', '61194', '61195', '61196', '61197', '61198', '61199', '61200', '61201', '61202', '61203', '61204', '61205', '61206', '61207', '61208', '61209', '61210', '61211', '61212', '61213', '61214', '61215', '61216', '61217', '61218', '61219', '61220', '61221', '61222', '61223', '61224', '61225', '61226', '61227', '61228', '61229', '61230', '61231', '61232', '61233', '61234', '61235', '61236', '61237', '61238', '61239', '61240', '61241', '61242', '61243', '61244', '61245', '61246', '61247', '61248', '61249', '61250', '61251', '61252', '61253', '61254', '61255', '61256', '61257', '61258', '61259', '61260', '61261', '61262', '61263', '61264', '61265', '61267', '61268', '61269', '61270', '61271', '61272', '61273', '61275', '61276', '61277', '61278', '61279', '61280', '61281', '61282', '61283', '61284', '61285', '61286', '61287', '61288', '61289', '61290', '61291', '61292', '61293', '61294', '61295', '61296', '61297', '61298', '61299', '61300', '61301', '61302', '61303', '61304', '61305', '61306', '61307', '61308', '61309', '61310', '61311', '61312', '61313', '61314', '61315', '61316', '61317', '61318', '61319', '61320', '61321', '61322', '61323', '61324', '61325', '61326', '61327', '61328', '61329', '61331', '61332', '61333', '61334', '61335', '61336', '61337', '61338', '61339', '61340', '61341', '61342', '61343', '61344', '61345', '61346', '61347', '61348', '61349', '61350', '61351', '61352', '61353', '61354', '61355', '61356', '61357', '61358', '61359', '61360', '61361', '61362', '61363', '61364', '61365', '61366', '61367', '61368', '61369', '61370', '61371', '61372', '61373', '61374', '61375', '61376', '61377', '61378', '61379', '61380', '61381', '61382', '61383', '61384', '61385', '61386', '61387', '61388', '61389', '61390', '61391', '61392', '61393', '61394', '61395', '61396', '61397', '61398', '61399', '61400', '61401', '61402', '61403', '61404', '61405', '61406', '61407', '61408', '61410', '61411', '61412', '61413', '61414', '61415', '61416', '61417', '61418', '61419', '61420', '61421', '61422', '61423', '61424', '61425', '61426', '61427', '61428', '61429', '61430', '61431', '61432', '61433', '61434', '61435', '61436', '61437', '61438', '61439', '61440', '61441', '61442', '61443', '61444', '61445', '61446', '61447', '61448', '61449', '61451', '61452', '61453', '61454', '61455', '61456', '61457', '61458', '61459', '61460', '61461', '61463', '61464', '61465', '61466', '61467', '61468', '61469', '61470', '61471', '61472', '61473', '61474', '61475', '61476', '61477', '61478', '61479', '61480', '61481', '61482', '61483', '61484', '61485', '61486', '61487', '61488', '61489', '61490', '61491', '61492', '61493', '61494', '61495', '61496', '61497', '61498', '61499', '61500', '61501', '61502', '61503', '61504', '61505', '61506', '61507', '61508', '61509', '61510', '61511', '61512', '61513', '61515', '61516', '61517', '61518', '61519', '61520', '61521', '61522', '61523', '61524', '61525', '61526', '61527', '61528', '61529', '61530', '61531', '61532', '61533', '61534', '61535', '61536', '61537', '61538', '61539', '61540', '61541', '61542', '61543', '61544', '61545', '61546', '61547', '61548', '61549', '61551', '61552', '61553', '61554', '61556', '61557', '61558', '61559', '61560', '61561', '61562', '61563', '61564', '61565', '61566', '61567', '61568', '61569', '61570', '61571', '61572', '61573', '61574', '61575', '61576', '61577', '61579', '61580', '61581', '61582', '61583', '61584', '61585', '61586', '61587', '61588', '61589', '61590', '61591', '61592', '61593', '61594', '61595', '61596', '61597', '61598', '61599', '61600', '61601', '61602', '61603', '61604', '61605', '61606', '61607', '61608', '61609', '61610', '61611', '61612', '61613', '61614', '61616', '61617', '61618', '61619', '61620', '61621', '61622', '61623', '61624', '61625', '61626', '61627', '61628', '61629', '61630', '61631', '61632', '61633', '61634', '61635', '61636', '61637', '61638', '61639', '61640', '61641', '61642', '61643', '61644', '61645', '61646', '61647', '61648', '61649', '61650', '61651', '61652', '61653', '61654', '61656', '61657', '61658', '61659', '61660', '61661', '61662', '61663', '61664', '61665', '61666', '61667', '61668', '61669', '61670', '61671', '61672', '61673', '61674', '61675', '61676', '61677', '61678', '61679', '61680', '61681', '61682', '61683', '61684', '61685', '61686', '61687', '61688', '61689', '61690', '61691', '61692', '62000', '62001', '62002', '62003', '62004', '62005', '62007', '62009', '62010', '62011', '62013', '62014', '62015', '62016', '62017', '62018', '62020', '62021', '62022', '62023', '62024', '62025', '62026', '62027', '62028', '62029', '62030', '62031', '62032', '62033', '62034', '62035', '62036', '62038', '62039', '62040', '62041', '62042', '62043', '62044', '62045', '62046', '62047', '62049', '62050', '62051', '62052', '62053', '62054', '62056', '62057', '62058', '62059', '62060', '62061', '62062', '62063', '62064', '62065', '62066', '62067', '62068', '62069', '62070', '62071', '62072', '62073', '62074', '62075', '62079', '62080', '62081', '62082', '62083', '62084', '62085', '62086', '62087', '62088', '62089', '62091', '62092', '62093', '62094', '62096', '62097', '62098', '62099', '62101', '62102', '62103', '62104', '62105', '62106', '62107', '62108', '62109', '62110', '62111', '62114', '62115', '62119', '62121', '62122', '62123', '62124', '62125', '62126', '62127', '62128', '62129', '62130', '62131', '62132', '62135', '62139', '62140', '62143', '62144', '62146', '62147', '62148', '62149', '62151', '62152', '62154', '62157', '62158', '62159', '62160', '62161', '62162', '62163', '62164', '62165', '62166', '62167', '62168', '62169', '62170', '62171', '62172', '62173', '62175', '62177', '62178', '62179', '62180', '62181', '62182', '62185', '62186', '62187', '62188', '62195', '62198', '62199', '62200', '62201', '62203', '62204', '62205', '62206', '62207', '62208', '62209', '62210', '62211', '62212', '62213', '62214', '62216', '62222', '62224', '62225', '62227', '62228', '62229', '62230', '62231', '62233', '62234', '62235', '62237', '62238', '62239', '62242', '62243', '62244', '62245', '62246', '62247', '62248', '62249', '62250', '62251', '62252', '62255', '62256', '62258', '62259', '62260', '62263', '62264', '62265', '62266', '62267', '62268', '62269', '62270', '62271', '62272', '62273', '62274', '62275', '62276', '62277', '62278', '62279', '62280', '62281', '62282', '62283', '62284', '62285', '62286', '62287', '62288', '62289', '62290', '62291', '62292', '62293', '62294', '62295', '62296', '62297', '62298', '62299', '62300', '62301', '62302', '62303', '62304', '62305', '62306', '62307', '62308', '62309', '62310', '62311', '62312', '62313', '62314', '62315', '62316', '62317', '62318', '62319', '62320', '62321', '62323', '62325', '62327', '62328', '62333', '62334', '62337', '62338', '62339', '62340', '62341', '62342', '62343', '62344', '62345', '62346', '62347', '62348', '62349', '62350', '62351', '62352', '62353', '62354', '62355', '62356', '62357', '62358', '62359', '62360', '62361', '62362', '62363', '62364', '62365', '62366', '62367', '62368', '62369', '62370', '62371', '62372', '62373', '62374', '62375', '62376', '62377', '62378', '62379', '62380', '62381', '62382', '62383', '62384', '62385', '62386', '62387', '62388', '62389', '62390', '62391', '62392', '62393', '62394', '62395', '62396', '62397', '62398', '62399', '62400', '62401', '62402', '62403', '62404', '62405', '62406', '62407', '62408', '62409', '62410', '62411', '62412', '62413', '62414', '62415', '62416', '62417', '62418', '62419', '62420', '62421', '62422', '62423', '62424', '62425', '62426', '62427', '62428', '62429', '62430', '62431', '62432', '62433', '62434', '62435', '62436', '62437', '62438', '62439', '62440', '62441', '62442', '62443', '62444', '62445', '62446', '62447', '62448', '62449', '62450', '62451', '62452', '62453', '62454', '62455', '62456', '62457', '62458', '62459', '62460', '62461', '62462', '62463', '62464', '62465', '62466', '62467', '62468', '62469', '62470', '62471', '62472', '62473', '62474', '62475', '62476', '62477', '62478', '62479', '62480', '62481', '62482', '62483', '62484', '62485', '62486', '62487', '62488', '62489', '62490', '62491', '62492', '62493', '62494', '62496', '62497', '62498', '62499', '62500', '62501', '62502', '62503', '62504', '62505', '62506', '62507', '62508', '62509', '62510', '62511', '62512', '62513', '62514', '62515', '62516', '62617', '62618', '62619', '62620', '62621', '62622', '62623', '62624', '62625', '62626', '62627', '62628', '62629', '62630', '62631', '62632', '62633', '62634', '62635', '62636', '62637', '62638', '62639', '62640', '62641', '62642', '62643', '64644', '64645', '64646', '64647', '64648', '64649', '64650', '64651', '64652', '64653', '64654', '64655', '64656', '64657', '64658', '64659', '64660', '64661', '64662', '64663', '64664', '64665', '64666', '64667', '64668', '64669', '64670', '64671', '64672', '64673', '64674', '64675', '64676', '64677', '64678', '64679', '64680', '64681', '64682', '64683', '64684', '64685', '64686', '64687', '64688', '64689', '64690', '64691', '64692', '64693', '64694', '64695', '64696', '64697', '64698', '64699', '64700', '64701', '64702', '64703', '64704', '64705', '64706', '64707', '64708', '64709', '64710', '64711', '64712', '64713', '64714', '64715', '64716', '64717', '64718', '64719', '64720', '64721', '64722', '64723', '64724', '64725', '64726', '64727', '64728', '64729', '64730', '64731', '64732', '64733', '64734', '64735', '64736', '64737', '64738', '64739', '64740', '64741', '64742', '64743', '64744', '64745', '64746', '64747', '64748', '64749', '64750', '64751', '64752', '64753', '64754', '64755', '64756', '64757', '64758', '64759', '64760', '64761', '64762', '64763', '64764', '64765', '64766', '64767', '64768', '64769', '64770', '64771', '64772', '64773', '64774', '64775', '64776', '64777', '64778', '64779', '64780', '64781', '64782', '64783', '64784', '64785', '64786', '64787', '64788', '64789', '64790', '64791', '64792', '64793', '64794', '64795', '64796', '64797', '64798', '64799', '64800', '64801', '64802', '64803'))])">Submitted value for Destination Code (eDisposition.02) does not exist in the system.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.DestinationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.01"/> <sch:assert id="RestrictDestinationCodeToName" role="[FATAL]" diagnostics="nemsisDiagnostic" test="not(
(nem:eDisposition.02 = '20001' and nem:eDisposition.01 != 'Adventist Health Hanford') or 
(nem:eDisposition.02 = '20002' and nem:eDisposition.01 != 'AHMC Anaheim Regional Medical Center') or 
(nem:eDisposition.02 = '20003' and nem:eDisposition.01 != 'Alameda County Fairmont Hospital') or 
(nem:eDisposition.02 = '20004' and nem:eDisposition.01 != 'Alameda County Medical Center, Highland') or 
(nem:eDisposition.02 = '20005' and nem:eDisposition.01 != 'Alameda Hospital') or 
(nem:eDisposition.02 = '20007' and nem:eDisposition.01 != 'Alhambra Hospital') or 
(nem:eDisposition.02 = '20008' and nem:eDisposition.01 != 'Alta Bates Summit Medical Center, Alta Bates Campus') or 
(nem:eDisposition.02 = '20009' and nem:eDisposition.01 != 'Alta Bates Summit Medical Center, Herrick Campus') or 
(nem:eDisposition.02 = '20010' and nem:eDisposition.01 != 'Alta Bates Summit Medical Center, Hawthorne') or 
(nem:eDisposition.02 = '20011' and nem:eDisposition.01 != 'Alta Bates Summit Medical Center, Summit Campus') or 
(nem:eDisposition.02 = '20012' and nem:eDisposition.01 != 'Alvarado Hospital') or 
(nem:eDisposition.02 = '20018' and nem:eDisposition.01 != 'Antelope Valley Hospital') or 
(nem:eDisposition.02 = '20019' and nem:eDisposition.01 != 'Arrowhead Regional Medical Center') or 
(nem:eDisposition.02 = '20020' and nem:eDisposition.01 != 'Arroyo Grande Community Hospital') or 
(nem:eDisposition.02 = '20021' and nem:eDisposition.01 != 'Atascadero State Hospital') or 
(nem:eDisposition.02 = '20022' and nem:eDisposition.01 != 'Aurora Santa Rosa Hospital') or 
(nem:eDisposition.02 = '20024' and nem:eDisposition.01 != 'Aurora Las Encinas Hospital') or 
(nem:eDisposition.02 = '20026' and nem:eDisposition.01 != 'Aurora Vista Del Mar Hospital') or 
(nem:eDisposition.02 = '20027' and nem:eDisposition.01 != 'Bakersfield Heart Hospital') or 
(nem:eDisposition.02 = '20028' and nem:eDisposition.01 != 'Bakersfield Memorial Hospital') or 
(nem:eDisposition.02 = '20029' and nem:eDisposition.01 != 'Ballard Rehabilitation Hospital') or 
(nem:eDisposition.02 = '20030' and nem:eDisposition.01 != 'Banner Lassen Medical Center') or 
(nem:eDisposition.02 = '20031' and nem:eDisposition.01 != 'Barlow Respiratory Hospital') or 
(nem:eDisposition.02 = '20032' and nem:eDisposition.01 != 'Barstow Community Hospital') or 
(nem:eDisposition.02 = '20033' and nem:eDisposition.01 != 'Barton Memorial Hospital') or 
(nem:eDisposition.02 = '20034' and nem:eDisposition.01 != 'Bear Valley Community Healthcare District') or 
(nem:eDisposition.02 = '20035' and nem:eDisposition.01 != 'Los Angeles Community Hospital at Bellflower') or 
(nem:eDisposition.02 = '20038' and nem:eDisposition.01 != 'Beverly Hospital') or 
(nem:eDisposition.02 = '20040' and nem:eDisposition.01 != 'Orchard Hospital') or 
(nem:eDisposition.02 = '20041' and nem:eDisposition.01 != 'Emanuel Medical Center, Brandel Manor') or 
(nem:eDisposition.02 = '20042' and nem:eDisposition.01 != 'Southern California Hospital at Culver City') or 
(nem:eDisposition.02 = '20045' and nem:eDisposition.01 != 'California Hospital Medical Center') or 
(nem:eDisposition.02 = '20046' and nem:eDisposition.01 != 'Sutter Health CPMC') or 
(nem:eDisposition.02 = '20048' and nem:eDisposition.01 != 'California Pacific Medical Center, Davies Campus Hospital') or 
(nem:eDisposition.02 = '20050' and nem:eDisposition.01 != 'CPMC Mission Bernal Campus') or 
(nem:eDisposition.02 = '20051' and nem:eDisposition.01 != 'Canyon Ridge Hospital') or 
(nem:eDisposition.02 = '20052' and nem:eDisposition.01 != 'Casa Colina Hospital') or 
(nem:eDisposition.02 = '20053' and nem:eDisposition.01 != 'Catalina Island Medical Center') or 
(nem:eDisposition.02 = '20054' and nem:eDisposition.01 != 'Cedars-Sinai Medical Center') or 
(nem:eDisposition.02 = '20055' and nem:eDisposition.01 != 'Centinela Hospital Medical Center') or 
(nem:eDisposition.02 = '20056' and nem:eDisposition.01 != 'Central Valley General Hospital') or 
(nem:eDisposition.02 = '20057' and nem:eDisposition.01 != 'California Rehabilitation Institute') or 
(nem:eDisposition.02 = '20058' and nem:eDisposition.01 != 'Chapman Global Medical Center') or 
(nem:eDisposition.02 = '20059' and nem:eDisposition.01 != 'Children''s Hospital &amp; Research Center Oakland') or 
(nem:eDisposition.02 = '20060' and nem:eDisposition.01 != 'Children''s Hospital At Mission') or 
(nem:eDisposition.02 = '20061' and nem:eDisposition.01 != 'Valley Children''s Hospital') or 
(nem:eDisposition.02 = '20062' and nem:eDisposition.01 != 'Children''s Hospital Los Angeles') or 
(nem:eDisposition.02 = '20063' and nem:eDisposition.01 != 'Children''s Hospital of Orange County') or 
(nem:eDisposition.02 = '20064' and nem:eDisposition.01 != 'Children''s Recovery Center of Northern California') or 
(nem:eDisposition.02 = '20065' and nem:eDisposition.01 != 'Chinese Hospital') or 
(nem:eDisposition.02 = '20066' and nem:eDisposition.01 != 'Chino Valley Medical Center') or 
(nem:eDisposition.02 = '20067' and nem:eDisposition.01 != 'Citrus Valley Medical Center, Inter - Community Campus') or 
(nem:eDisposition.02 = '20068' and nem:eDisposition.01 != 'Citrus Valley Medical Center, Queen of the Valley Campus') or 
(nem:eDisposition.02 = '20069' and nem:eDisposition.01 != 'City of Hope Helford Clinical Research Hospital') or 
(nem:eDisposition.02 = '20070' and nem:eDisposition.01 != 'Clovis Community Medical Center') or 
(nem:eDisposition.02 = '20071' and nem:eDisposition.01 != 'Coalinga Regional Medical Center') or 
(nem:eDisposition.02 = '20073' and nem:eDisposition.01 != 'Coast Plaza Hospital') or 
(nem:eDisposition.02 = '20074' and nem:eDisposition.01 != 'South Coast Global Medical Center') or 
(nem:eDisposition.02 = '20076' and nem:eDisposition.01 != 'College Hospital Costa Mesa') or 
(nem:eDisposition.02 = '20077' and nem:eDisposition.01 != 'Colorado River Medical Center') or 
(nem:eDisposition.02 = '20078' and nem:eDisposition.01 != 'Colusa Medical Center') or 
(nem:eDisposition.02 = '20080' and nem:eDisposition.01 != 'Community Hospital of the Monterey Peninsula') or 
(nem:eDisposition.02 = '20081' and nem:eDisposition.01 != 'Community Hospital of Huntington Park') or 
(nem:eDisposition.02 = '20082' and nem:eDisposition.01 != 'Community Hospital of Long Beach') or 
(nem:eDisposition.02 = '20083' and nem:eDisposition.01 != 'Community Hospital of San Bernardino') or 
(nem:eDisposition.02 = '20084' and nem:eDisposition.01 != 'Community Memorial Hospital, San Buenaventura') or 
(nem:eDisposition.02 = '20085' and nem:eDisposition.01 != 'Community Regional Medical Center, Fresno') or 
(nem:eDisposition.02 = '20087' and nem:eDisposition.01 != 'Contra Costa Regional Medical Center') or 
(nem:eDisposition.02 = '20089' and nem:eDisposition.01 != 'Corona Rehabilitation Hospital') or 
(nem:eDisposition.02 = '20090' and nem:eDisposition.01 != 'Corona Regional Medical Center') or 
(nem:eDisposition.02 = '20094' and nem:eDisposition.01 != 'Dameron Hospital') or 
(nem:eDisposition.02 = '20095' and nem:eDisposition.01 != 'Del Amo Hospital') or 
(nem:eDisposition.02 = '20096' and nem:eDisposition.01 != 'Delano Regional Medical Center') or 
(nem:eDisposition.02 = '20097' and nem:eDisposition.01 != 'Desert Regional Medical Center') or 
(nem:eDisposition.02 = '20098' and nem:eDisposition.01 != 'Desert Valley Hospital') or 
(nem:eDisposition.02 = '20099' and nem:eDisposition.01 != 'Doctors Hospital of Manteca') or 
(nem:eDisposition.02 = '20100' and nem:eDisposition.01 != 'Doctors Hospital of West Covina') or 
(nem:eDisposition.02 = '20101' and nem:eDisposition.01 != 'Doctors Medical Center') or 
(nem:eDisposition.02 = '20102' and nem:eDisposition.01 != 'Doctors Medical Center, San Pablo') or 
(nem:eDisposition.02 = '20105' and nem:eDisposition.01 != 'Dominican Hospital, Santa Cruz') or 
(nem:eDisposition.02 = '20106' and nem:eDisposition.01 != 'PIH Health Hospital, Downey') or 
(nem:eDisposition.02 = '20107' and nem:eDisposition.01 != 'Earl and Lorraine Miller Childrens Hospital') or 
(nem:eDisposition.02 = '20108' and nem:eDisposition.01 != 'East Los Angeles Doctors Hospital') or 
(nem:eDisposition.02 = '20109' and nem:eDisposition.01 != 'Glendora Community Hospital') or 
(nem:eDisposition.02 = '20110' and nem:eDisposition.01 != 'Eastern Plumas Hospital, Loyalton Campus') or 
(nem:eDisposition.02 = '20111' and nem:eDisposition.01 != 'Eastern Plumas Hospital, Portola Campus') or 
(nem:eDisposition.02 = '20112' and nem:eDisposition.01 != 'Eden Medical Center') or 
(nem:eDisposition.02 = '20114' and nem:eDisposition.01 != 'Eisenhower Medical Center') or 
(nem:eDisposition.02 = '20115' and nem:eDisposition.01 != 'El Camino Hospital') or 
(nem:eDisposition.02 = '20116' and nem:eDisposition.01 != 'El Camino Hospital Los Gatos') or 
(nem:eDisposition.02 = '20117' and nem:eDisposition.01 != 'El Centro Regional Medical Center') or 
(nem:eDisposition.02 = '20119' and nem:eDisposition.01 != 'Emanuel Medical Center') or 
(nem:eDisposition.02 = '20120' and nem:eDisposition.01 != 'Encino Hospital Medical Center') or 
(nem:eDisposition.02 = '20121' and nem:eDisposition.01 != 'Enloe Medical Center, Cohasset') or 
(nem:eDisposition.02 = '20122' and nem:eDisposition.01 != 'Enloe Medical Center, Esplanade') or 
(nem:eDisposition.02 = '20123' and nem:eDisposition.01 != 'Enloe Rehabilitation Center') or 
(nem:eDisposition.02 = '20124' and nem:eDisposition.01 != 'Fairchild Medical Center') or 
(nem:eDisposition.02 = '20125' and nem:eDisposition.01 != 'Fairview Developmental Center') or 
(nem:eDisposition.02 = '20128' and nem:eDisposition.01 != 'Adventist Health Feather River') or 
(nem:eDisposition.02 = '20129' and nem:eDisposition.01 != 'Foothill Presbyterian Hospital') or 
(nem:eDisposition.02 = '20130' and nem:eDisposition.01 != 'Fountain Valley Regional Hospital and Medical Center, Euclid') or 
(nem:eDisposition.02 = '20131' and nem:eDisposition.01 != 'Fountain Valley Regional Hospital and Medical Center, Warner') or 
(nem:eDisposition.02 = '20132' and nem:eDisposition.01 != 'Adventist Health Howard Memorial') or 
(nem:eDisposition.02 = '20133' and nem:eDisposition.01 != 'Fremont Hospital') or 
(nem:eDisposition.02 = '20134' and nem:eDisposition.01 != 'Fremont Medical Center') or 
(nem:eDisposition.02 = '20135' and nem:eDisposition.01 != 'French Hospital Medical Center') or 
(nem:eDisposition.02 = '20137' and nem:eDisposition.01 != 'Fresno Heart and Surgical Hospital') or 
(nem:eDisposition.02 = '20138' and nem:eDisposition.01 != 'Fresno Surgical Hospital') or 
(nem:eDisposition.02 = '20139' and nem:eDisposition.01 != 'Garden Grove Hospital and Medical Center') or 
(nem:eDisposition.02 = '20140' and nem:eDisposition.01 != 'Garfield Medical Center') or 
(nem:eDisposition.02 = '20142' and nem:eDisposition.01 != 'General Hospital') or 
(nem:eDisposition.02 = '20143' and nem:eDisposition.01 != 'George L. Mee Memorial Hospital') or 
(nem:eDisposition.02 = '20144' and nem:eDisposition.01 != 'Adventist Health Glendale') or 
(nem:eDisposition.02 = '20145' and nem:eDisposition.01 != 'Glendale Memorial Hospital and Health Center') or 
(nem:eDisposition.02 = '20146' and nem:eDisposition.01 != 'Glenn Medical Center') or 
(nem:eDisposition.02 = '20147' and nem:eDisposition.01 != 'Goleta Valley Cottage Hospital') or 
(nem:eDisposition.02 = '20148' and nem:eDisposition.01 != 'Good Samaritan Hospital, Bakersfield') or 
(nem:eDisposition.02 = '20149' and nem:eDisposition.01 != 'Good Samaritan Hospital, Los Angeles') or 
(nem:eDisposition.02 = '20150' and nem:eDisposition.01 != 'Good Samaritan Hospital, San Jose') or 
(nem:eDisposition.02 = '20152' and nem:eDisposition.01 != 'Greater El Monte Community Hospital') or 
(nem:eDisposition.02 = '20153' and nem:eDisposition.01 != 'Sharp Grossmont Hospital') or 
(nem:eDisposition.02 = '20156' and nem:eDisposition.01 != 'Hazel Hawkins Memorial Hospital') or 
(nem:eDisposition.02 = '20157' and nem:eDisposition.01 != 'Healdsburg District Hospital') or 
(nem:eDisposition.02 = '20158' and nem:eDisposition.01 != 'Healthbridge Children''s Hospital, Orange') or 
(nem:eDisposition.02 = '20159' and nem:eDisposition.01 != 'Health South Rehab') or 
(nem:eDisposition.02 = '20160' and nem:eDisposition.01 != 'Healthsouth Tustin Rehabilitation Hospital') or 
(nem:eDisposition.02 = '20161' and nem:eDisposition.01 != 'Hemet Valley Medical Care') or 
(nem:eDisposition.02 = '20162' and nem:eDisposition.01 != 'Hemet Valley Medical Center') or 
(nem:eDisposition.02 = '20163' and nem:eDisposition.01 != 'Henry Mayo Newhall Memorial Hospital') or 
(nem:eDisposition.02 = '20165' and nem:eDisposition.01 != 'Hi-Desert Medical Center') or 
(nem:eDisposition.02 = '20166' and nem:eDisposition.01 != 'Hoag Hospital Irvine') or 
(nem:eDisposition.02 = '20167' and nem:eDisposition.01 != 'Hoag Hospital Newport Beach') or 
(nem:eDisposition.02 = '20168' and nem:eDisposition.01 != 'Hoag Orthopedic Institute') or 
(nem:eDisposition.02 = '20169' and nem:eDisposition.01 != 'Southern California Hospital at Hollywood') or 
(nem:eDisposition.02 = '20170' and nem:eDisposition.01 != 'Hollywood Community Hospital of Van Nuys') or 
(nem:eDisposition.02 = '20171' and nem:eDisposition.01 != 'Hollywood Presbyterian Medical Center') or 
(nem:eDisposition.02 = '20172' and nem:eDisposition.01 != 'Huntington Beach Hospital') or 
(nem:eDisposition.02 = '20173' and nem:eDisposition.01 != 'Huntington Memorial Hospital') or 
(nem:eDisposition.02 = '20174' and nem:eDisposition.01 != 'Jerold Phelps Community Hospital') or 
(nem:eDisposition.02 = '20176' and nem:eDisposition.01 != 'John C Fremont Healthcare District') or 
(nem:eDisposition.02 = '20177' and nem:eDisposition.01 != 'JFK - John F Kennedy Memorial Hospital') or 
(nem:eDisposition.02 = '20179' and nem:eDisposition.01 != 'John Muir Medical Center, Concord') or 
(nem:eDisposition.02 = '20180' and nem:eDisposition.01 != 'John Muir Medical Center, Walnut Creek') or 
(nem:eDisposition.02 = '20181' and nem:eDisposition.01 != 'Joyce Eisenberg Keefer Medical Center') or 
(nem:eDisposition.02 = '20182' and nem:eDisposition.01 != 'Kaiser Permanente, Lakeview') or 
(nem:eDisposition.02 = '20183' and nem:eDisposition.01 != 'Kaiser Permanente, Baldwin Park') or 
(nem:eDisposition.02 = '20184' and nem:eDisposition.01 != 'Kaiser Permanente, Fontana') or 
(nem:eDisposition.02 = '20185' and nem:eDisposition.01 != 'Kaiser Permanente, Fremont') or 
(nem:eDisposition.02 = '20186' and nem:eDisposition.01 != 'Kaiser Permanente, Fresno') or 
(nem:eDisposition.02 = '20187' and nem:eDisposition.01 != 'Kaiser Permanente, Hayward') or 
(nem:eDisposition.02 = '20188' and nem:eDisposition.01 != 'Kaiser Permanente, Irvine') or 
(nem:eDisposition.02 = '20190' and nem:eDisposition.01 != 'Kaiser Permanente, Oakland Medical Center') or 
(nem:eDisposition.02 = '20191' and nem:eDisposition.01 != 'Kaiser Permanente, Panorama City') or 
(nem:eDisposition.02 = '20192' and nem:eDisposition.01 != 'Kaiser Permanente, Redwood City') or 
(nem:eDisposition.02 = '20193' and nem:eDisposition.01 != 'Kaiser Permanente, Vallejo') or 
(nem:eDisposition.02 = '20194' and nem:eDisposition.01 != 'Kaiser Permanente, Richmond') or 
(nem:eDisposition.02 = '20195' and nem:eDisposition.01 != 'Kaiser Permanente, Riverside') or 
(nem:eDisposition.02 = '20196' and nem:eDisposition.01 != 'Kaiser Permanente, Roseville Medical Center') or 
(nem:eDisposition.02 = '20197' and nem:eDisposition.01 != 'Kaiser Permanente, Sacramento Medical Center') or 
(nem:eDisposition.02 = '20198' and nem:eDisposition.01 != 'Kaiser Permanente, San Diego') or 
(nem:eDisposition.02 = '20199' and nem:eDisposition.01 != 'Kaiser Permanente, San Francisco') or 
(nem:eDisposition.02 = '20200' and nem:eDisposition.01 != 'Kaiser Permanente, San Jose') or 
(nem:eDisposition.02 = '20201' and nem:eDisposition.01 != 'Kaiser Permanente, San Rafael') or 
(nem:eDisposition.02 = '20202' and nem:eDisposition.01 != 'Kaiser Permanente, Santa Clara Medical Center and Medical Offices') or 
(nem:eDisposition.02 = '20203' and nem:eDisposition.01 != 'Kaiser Permanente, Santa Rosa') or 
(nem:eDisposition.02 = '20204' and nem:eDisposition.01 != 'Kaiser Permanente, South Bay') or 
(nem:eDisposition.02 = '20205' and nem:eDisposition.01 != 'Kaiser Permanente, South Sacramento Medical Center') or 
(nem:eDisposition.02 = '20206' and nem:eDisposition.01 != 'Kaiser Permanente, South San Francisco') or 
(nem:eDisposition.02 = '20207' and nem:eDisposition.01 != 'Kaiser Permanente, Los Angeles') or 
(nem:eDisposition.02 = '20208' and nem:eDisposition.01 != 'Kaiser Permanente, Walnut Creek') or 
(nem:eDisposition.02 = '20209' and nem:eDisposition.01 != 'Kaiser Permanente, West Los Angeles') or 
(nem:eDisposition.02 = '20210' and nem:eDisposition.01 != 'Kaiser Permanente, Woodland Hills') or 
(nem:eDisposition.02 = '20211' and nem:eDisposition.01 != 'Kaiser Permanente, Moreno Valley') or 
(nem:eDisposition.02 = '20212' and nem:eDisposition.01 != 'Kaiser Permanente, Manteca') or 
(nem:eDisposition.02 = '20213' and nem:eDisposition.01 != 'Kaiser Permanente, Modesto') or 
(nem:eDisposition.02 = '20214' and nem:eDisposition.01 != 'Kaiser Permanente, Antioch') or 
(nem:eDisposition.02 = '20215' and nem:eDisposition.01 != 'Kaiser Permanente, Downey') or 
(nem:eDisposition.02 = '20216' and nem:eDisposition.01 != 'Kaiser Permanente, Vacaville') or 
(nem:eDisposition.02 = '20217' and nem:eDisposition.01 != 'Kaiser Permanente, Behavioral Health Center, Santa Clara') or 
(nem:eDisposition.02 = '20219' and nem:eDisposition.01 != 'Kaweah Delta Medical Center') or 
(nem:eDisposition.02 = '20223' and nem:eDisposition.01 != 'Kentfield Hospital') or 
(nem:eDisposition.02 = '20224' and nem:eDisposition.01 != 'Kern Medical') or 
(nem:eDisposition.02 = '20225' and nem:eDisposition.01 != 'Kern Valley Healthcare District') or 
(nem:eDisposition.02 = '20226' and nem:eDisposition.01 != 'Kindred Hospital, La Mirada') or 
(nem:eDisposition.02 = '20227' and nem:eDisposition.01 != 'Kindred Hospital, Los Angeles') or 
(nem:eDisposition.02 = '20229' and nem:eDisposition.01 != 'Kindred Hospital, San Diego') or 
(nem:eDisposition.02 = '20230' and nem:eDisposition.01 != 'Kindred Hospital, San Francisco Bay Area') or 
(nem:eDisposition.02 = '20231' and nem:eDisposition.01 != 'Kindred Hospital, San Gabriel Valley') or 
(nem:eDisposition.02 = '20232' and nem:eDisposition.01 != 'Kindred Hospital, Santa Ana') or 
(nem:eDisposition.02 = '20233' and nem:eDisposition.01 != 'Kindred Hospital, Brea') or 
(nem:eDisposition.02 = '20234' and nem:eDisposition.01 != 'Central Valley Specialty Care') or 
(nem:eDisposition.02 = '20235' and nem:eDisposition.01 != 'Kindred Hospital, Ontario') or 
(nem:eDisposition.02 = '20236' and nem:eDisposition.01 != 'Kindred Hospital, Westminster') or 
(nem:eDisposition.02 = '20237' and nem:eDisposition.01 != 'Kingsburg Medical Center') or 
(nem:eDisposition.02 = '20239' and nem:eDisposition.01 != 'La Palma Intercommunity Hospital') or 
(nem:eDisposition.02 = '20240' and nem:eDisposition.01 != 'Harbor UCLA Medical Center') or 
(nem:eDisposition.02 = '20241' and nem:eDisposition.01 != 'Los Angeles County - Rancho Los Amigos National Rehab Center') or 
(nem:eDisposition.02 = '20242' and nem:eDisposition.01 != 'LAC USC Medical Center') or 
(nem:eDisposition.02 = '20243' and nem:eDisposition.01 != 'Laguna Honda Hospital and Rehabilitation Center') or 
(nem:eDisposition.02 = '20244' and nem:eDisposition.01 != 'Lakewood Regional Medical Center') or 
(nem:eDisposition.02 = '20247' and nem:eDisposition.01 != 'Adventist Health Lodi Memorial') or 
(nem:eDisposition.02 = '20248' and nem:eDisposition.01 != 'Lodi Memorial Hospital, West') or 
(nem:eDisposition.02 = '20249' and nem:eDisposition.01 != 'Loma Linda University Medical Center, East Campus Hospital') or 
(nem:eDisposition.02 = '20251' and nem:eDisposition.01 != 'Loma Linda University Heart and Surgical Hospital') or 
(nem:eDisposition.02 = '20252' and nem:eDisposition.01 != 'Loma Linda University Medical Center') or 
(nem:eDisposition.02 = '20253' and nem:eDisposition.01 != 'Lompoc Valley Medical Center') or 
(nem:eDisposition.02 = '20255' and nem:eDisposition.01 != 'MemorialCare Long Beach Medical Center') or 
(nem:eDisposition.02 = '20256' and nem:eDisposition.01 != 'Los Alamitos Medical Center') or 
(nem:eDisposition.02 = '20257' and nem:eDisposition.01 != 'Los Angeles Community Hospital') or 
(nem:eDisposition.02 = '20258' and nem:eDisposition.01 != 'Olive View UCLA Medical Center') or 
(nem:eDisposition.02 = '20259' and nem:eDisposition.01 != 'Los Angeles Metropolitan Medical Center, Hawthorne') or 
(nem:eDisposition.02 = '20260' and nem:eDisposition.01 != 'Los Angeles Metropolitan Medical Center') or 
(nem:eDisposition.02 = '20261' and nem:eDisposition.01 != 'Los Robles Hospital &amp; Medical Center') or 
(nem:eDisposition.02 = '20262' and nem:eDisposition.01 != 'Los Robles Hospital &amp; Medical Center, East Campus') or 
(nem:eDisposition.02 = '20263' and nem:eDisposition.01 != 'Lucile Packard Children''s Hospital at Stanford') or 
(nem:eDisposition.02 = '20264' and nem:eDisposition.01 != 'Mad River Community Hospital') or 
(nem:eDisposition.02 = '20265' and nem:eDisposition.01 != 'Madera Community Hospital') or 
(nem:eDisposition.02 = '20266' and nem:eDisposition.01 != 'Mammoth Hospital') or 
(nem:eDisposition.02 = '20267' and nem:eDisposition.01 != 'Marian Regional Medical Center') or 
(nem:eDisposition.02 = '20269' and nem:eDisposition.01 != 'Marin Health Medical Center') or 
(nem:eDisposition.02 = '20270' and nem:eDisposition.01 != 'Marina Del Rey Hospital') or 
(nem:eDisposition.02 = '20271' and nem:eDisposition.01 != 'Mark Twain Medical Center') or 
(nem:eDisposition.02 = '20272' and nem:eDisposition.01 != 'Marshall Medical Center') or 
(nem:eDisposition.02 = '20273' and nem:eDisposition.01 != 'Mayers Memorial Hospital District') or 
(nem:eDisposition.02 = '20274' and nem:eDisposition.01 != 'Memorial Hospital Los Banos') or 
(nem:eDisposition.02 = '20275' and nem:eDisposition.01 != 'Memorial Medical Center, Modesto') or 
(nem:eDisposition.02 = '20276' and nem:eDisposition.01 != 'Memorial Hospital Of Gardena') or 
(nem:eDisposition.02 = '20277' and nem:eDisposition.01 != 'Mendocino Coast District Hospital') or 
(nem:eDisposition.02 = '20278' and nem:eDisposition.01 != 'Menifee Valley Medical Center') or 
(nem:eDisposition.02 = '20279' and nem:eDisposition.01 != 'Menlo Park Surgical Hospital') or 
(nem:eDisposition.02 = '20280' and nem:eDisposition.01 != 'Mercy General Hospital') or 
(nem:eDisposition.02 = '20281' and nem:eDisposition.01 != 'Mercy Hospital') or 
(nem:eDisposition.02 = '20282' and nem:eDisposition.01 != 'Mercy Hospital of Folsom') or 
(nem:eDisposition.02 = '20283' and nem:eDisposition.01 != 'Mercy Medical Center, Merced') or 
(nem:eDisposition.02 = '20284' and nem:eDisposition.01 != 'Mercy Medical Center, Redding') or 
(nem:eDisposition.02 = '20285' and nem:eDisposition.01 != 'Mercy Medical Center, Mt. Shasta') or 
(nem:eDisposition.02 = '20286' and nem:eDisposition.01 != 'Mercy San Juan Medical Center') or 
(nem:eDisposition.02 = '20287' and nem:eDisposition.01 != 'Mercy Hospital SW - Bakersfield') or 
(nem:eDisposition.02 = '20288' and nem:eDisposition.01 != 'Methodist Hospital of Sacramento') or 
(nem:eDisposition.02 = '20289' and nem:eDisposition.01 != 'Methodist Hospital of Southern California') or 
(nem:eDisposition.02 = '20291' and nem:eDisposition.01 != 'Mills-Peninsula Medical Center, San Mateo Campus') or 
(nem:eDisposition.02 = '20293' and nem:eDisposition.01 != 'Miracle Mile Medical Center') or 
(nem:eDisposition.02 = '20294' and nem:eDisposition.01 != 'Mission Community Hospital') or 
(nem:eDisposition.02 = '20295' and nem:eDisposition.01 != 'Mission Hospital Laguna Beach') or 
(nem:eDisposition.02 = '20296' and nem:eDisposition.01 != 'Mission Hospital') or 
(nem:eDisposition.02 = '20297' and nem:eDisposition.01 != 'Mission Oaks Hospital') or 
(nem:eDisposition.02 = '20298' and nem:eDisposition.01 != 'Modoc Medical Center') or 
(nem:eDisposition.02 = '20299' and nem:eDisposition.01 != 'Monrovia Memorial Hospital') or 
(nem:eDisposition.02 = '20300' and nem:eDisposition.01 != 'Montclair Hospital Medical Center') or 
(nem:eDisposition.02 = '20301' and nem:eDisposition.01 != 'Monterey Park Hospital') or 
(nem:eDisposition.02 = '20303' and nem:eDisposition.01 != 'Mountains Community Hospital') or 
(nem:eDisposition.02 = '20306' and nem:eDisposition.01 != 'Natividad Medical Center') or 
(nem:eDisposition.02 = '20308' and nem:eDisposition.01 != 'Foothill Regional Medical Center') or 
(nem:eDisposition.02 = '20309' and nem:eDisposition.01 != 'NorthBay Medical Center') or 
(nem:eDisposition.02 = '20310' and nem:eDisposition.01 != 'NorthBay VacaValley Hospital') or 
(nem:eDisposition.02 = '20313' and nem:eDisposition.01 != 'Vibra Hospital of Northern California') or 
(nem:eDisposition.02 = '20314' and nem:eDisposition.01 != 'Northern Inyo Hospital') or 
(nem:eDisposition.02 = '20315' and nem:eDisposition.01 != 'Northridge Hospital Medical Center') or 
(nem:eDisposition.02 = '20316' and nem:eDisposition.01 != 'Norwalk Community Hospital') or 
(nem:eDisposition.02 = '20317' and nem:eDisposition.01 != 'Novato Community Hospital') or 
(nem:eDisposition.02 = '20319' and nem:eDisposition.01 != 'Oak Valley Hospital') or 
(nem:eDisposition.02 = '20321' and nem:eDisposition.01 != 'O''Connor Hospital, San Jose') or 
(nem:eDisposition.02 = '20323' and nem:eDisposition.01 != 'Ojai Valley Community Hospital') or 
(nem:eDisposition.02 = '20324' and nem:eDisposition.01 != 'Olympia Medical Center') or 
(nem:eDisposition.02 = '20325' and nem:eDisposition.01 != 'Orange Coast Memorial Medical Center') or 
(nem:eDisposition.02 = '20326' and nem:eDisposition.01 != 'Oroville Hospital') or 
(nem:eDisposition.02 = '20328' and nem:eDisposition.01 != 'College Medical Center') or 
(nem:eDisposition.02 = '20331' and nem:eDisposition.01 != 'Pacifica Hospital of the Valley') or 
(nem:eDisposition.02 = '20333' and nem:eDisposition.01 != 'Palmdale Regional Medical Center') or 
(nem:eDisposition.02 = '20334' and nem:eDisposition.01 != 'Palo Verde Hospital') or 
(nem:eDisposition.02 = '20336' and nem:eDisposition.01 != 'Palomar Health Downtown Campus') or 
(nem:eDisposition.02 = '20337' and nem:eDisposition.01 != 'Paradise Valley Hospital') or 
(nem:eDisposition.02 = '20339' and nem:eDisposition.01 != 'Parkview Community Hospital Medical Center') or 
(nem:eDisposition.02 = '20340' and nem:eDisposition.01 != 'Patients'' Hospital of Redding') or 
(nem:eDisposition.02 = '20342' and nem:eDisposition.01 != 'Mills-Peninsula Medical Center') or 
(nem:eDisposition.02 = '20343' and nem:eDisposition.01 != 'Petaluma Valley Hospital') or 
(nem:eDisposition.02 = '20344' and nem:eDisposition.01 != 'Pioneers Memorial Hospital') or 
(nem:eDisposition.02 = '20345' and nem:eDisposition.01 != 'Placentia-Linda Hospital') or 
(nem:eDisposition.02 = '20346' and nem:eDisposition.01 != 'Plumas District Hospital') or 
(nem:eDisposition.02 = '20347' and nem:eDisposition.01 != 'Pomerado Hospital') or 
(nem:eDisposition.02 = '20348' and nem:eDisposition.01 != 'Pomona Valley Hospital Medical Center') or 
(nem:eDisposition.02 = '20349' and nem:eDisposition.01 != 'Porterville Developmental Center') or 
(nem:eDisposition.02 = '20350' and nem:eDisposition.01 != 'PIH Health Hospital, Whittier') or 
(nem:eDisposition.02 = '20352' and nem:eDisposition.01 != 'Promise Hospital of East Los Angeles, Suburban Campus') or 
(nem:eDisposition.02 = '20354' and nem:eDisposition.01 != 'Providence Holy Cross Medical Center') or 
(nem:eDisposition.02 = '20356' and nem:eDisposition.01 != 'Providence Little Company of Mary Medical Center, San Pedro') or 
(nem:eDisposition.02 = '20357' and nem:eDisposition.01 != 'Providence Little Company of Mary Medical Center, Torrance') or 
(nem:eDisposition.02 = '20360' and nem:eDisposition.01 != 'Providence Saint Joseph Medical Center') or 
(nem:eDisposition.02 = '20361' and nem:eDisposition.01 != 'Providence Tarzana Medical Center') or 
(nem:eDisposition.02 = '20362' and nem:eDisposition.01 != 'Queen Of The Valley Medical Center') or 
(nem:eDisposition.02 = '20364' and nem:eDisposition.01 != 'Rady Children''s Hospital') or 
(nem:eDisposition.02 = '20365' and nem:eDisposition.01 != 'Kindred Hospital, Rancho') or 
(nem:eDisposition.02 = '20366' and nem:eDisposition.01 != 'Redlands Community Hospital') or 
(nem:eDisposition.02 = '20367' and nem:eDisposition.01 != 'Redwood Memorial Hospital') or 
(nem:eDisposition.02 = '20368' and nem:eDisposition.01 != 'Regional Medical Center of San Jose') or 
(nem:eDisposition.02 = '20369' and nem:eDisposition.01 != 'Cottage Rehabilitation Hospital') or 
(nem:eDisposition.02 = '20371' and nem:eDisposition.01 != 'Adventist Health Rideout') or 
(nem:eDisposition.02 = '20372' and nem:eDisposition.01 != 'Ridgecrest Regional Hospital') or 
(nem:eDisposition.02 = '20374' and nem:eDisposition.01 != 'Riverside Community Hospital') or 
(nem:eDisposition.02 = '20375' and nem:eDisposition.01 != 'Riverside University Health System Medical Center') or 
(nem:eDisposition.02 = '20377' and nem:eDisposition.01 != 'Ronald Reagan UCLA Medical Center') or 
(nem:eDisposition.02 = '20379' and nem:eDisposition.01 != 'MemorialCare Saddleback Medical Center') or 
(nem:eDisposition.02 = '20380' and nem:eDisposition.01 != 'Saddleback Memorial Medical Center, San Clemente') or 
(nem:eDisposition.02 = '20381' and nem:eDisposition.01 != 'Salinas Valley Memorial Hospital') or 
(nem:eDisposition.02 = '20382' and nem:eDisposition.01 != 'San Antonio Regional Hospital') or 
(nem:eDisposition.02 = '20385' and nem:eDisposition.01 != 'San Dimas Community Hospital') or 
(nem:eDisposition.02 = '20386' and nem:eDisposition.01 != 'Zuckerberg San Francisco General Hospital and Trauma Center') or 
(nem:eDisposition.02 = '20387' and nem:eDisposition.01 != 'San Gabriel Valley Medical Center') or 
(nem:eDisposition.02 = '20388' and nem:eDisposition.01 != 'San Gorgonio Memorial Hospital') or 
(nem:eDisposition.02 = '20389' and nem:eDisposition.01 != 'Adventist Health Bakersfield') or 
(nem:eDisposition.02 = '20391' and nem:eDisposition.01 != 'San Joaquin General Hospital') or 
(nem:eDisposition.02 = '20392' and nem:eDisposition.01 != 'San Joaquin Valley Rehabilitation Hospital') or 
(nem:eDisposition.02 = '20393' and nem:eDisposition.01 != 'San Leandro Hospital') or 
(nem:eDisposition.02 = '20395' and nem:eDisposition.01 != 'San Mateo Medical Center') or 
(nem:eDisposition.02 = '20396' and nem:eDisposition.01 != 'San Ramon Regional Medical Center') or 
(nem:eDisposition.02 = '20397' and nem:eDisposition.01 != 'San Ramon Regional Medical Center, South Building') or 
(nem:eDisposition.02 = '20398' and nem:eDisposition.01 != 'Santa Barbara Cottage Hospital') or 
(nem:eDisposition.02 = '20400' and nem:eDisposition.01 != 'Santa Clara Valley Medical Center') or 
(nem:eDisposition.02 = '20401' and nem:eDisposition.01 != 'Santa Monica - UCLA Medical Center and Orthopaedic Hospital') or 
(nem:eDisposition.02 = '20402' and nem:eDisposition.01 != 'Santa Rosa Memorial Hospital, Montgomery') or 
(nem:eDisposition.02 = '20403' and nem:eDisposition.01 != 'Santa Rosa Memorial Hospital, Sotoyome') or 
(nem:eDisposition.02 = '20404' and nem:eDisposition.01 != 'Santa Ynez Valley Cottage Hospital') or 
(nem:eDisposition.02 = '20405' and nem:eDisposition.01 != 'Scripps Green Hospital') or 
(nem:eDisposition.02 = '20406' and nem:eDisposition.01 != 'Scripps Memorial Hospital, Encinitas') or 
(nem:eDisposition.02 = '20407' and nem:eDisposition.01 != 'Scripps Memorial Hospital, La Jolla') or 
(nem:eDisposition.02 = '20408' and nem:eDisposition.01 != 'Scripps Mercy Hospital') or 
(nem:eDisposition.02 = '20409' and nem:eDisposition.01 != 'Scripps Mercy Hospital, Chula Vista') or 
(nem:eDisposition.02 = '20410' and nem:eDisposition.01 != 'Adventist Health Selma') or 
(nem:eDisposition.02 = '20412' and nem:eDisposition.01 != 'Seneca District Hospital') or 
(nem:eDisposition.02 = '20413' and nem:eDisposition.01 != 'Sequoia Hospital') or 
(nem:eDisposition.02 = '20414' and nem:eDisposition.01 != 'Seton Medical Center') or 
(nem:eDisposition.02 = '20415' and nem:eDisposition.01 != 'Seton Medical Center, Coastside') or 
(nem:eDisposition.02 = '20416' and nem:eDisposition.01 != 'Sharp Chula Vista Medical Center') or 
(nem:eDisposition.02 = '20417' and nem:eDisposition.01 != 'Sharp Coronado Hospital and Healthcare Center') or 
(nem:eDisposition.02 = '20418' and nem:eDisposition.01 != 'Sharp Mary Birch Hospital for Women and Newborns') or 
(nem:eDisposition.02 = '20419' and nem:eDisposition.01 != 'Sharp Memorial Hospital') or 
(nem:eDisposition.02 = '20420' and nem:eDisposition.01 != 'Sharp Mesa Vista Hospital') or 
(nem:eDisposition.02 = '20423' and nem:eDisposition.01 != 'Shasta Regional Medical Center') or 
(nem:eDisposition.02 = '20424' and nem:eDisposition.01 != 'Sherman Oaks Hospital') or 
(nem:eDisposition.02 = '20426' and nem:eDisposition.01 != 'Shriners Hospitals For Children, Northern California') or 
(nem:eDisposition.02 = '20427' and nem:eDisposition.01 != 'Adventist Health Reedley') or 
(nem:eDisposition.02 = '20428' and nem:eDisposition.01 != 'Sierra Nevada Memorial Hospital') or 
(nem:eDisposition.02 = '20429' and nem:eDisposition.01 != 'Sierra View Medical Center') or 
(nem:eDisposition.02 = '20431' and nem:eDisposition.01 != 'Sierra Vista Regional Medical Center') or 
(nem:eDisposition.02 = '20432' and nem:eDisposition.01 != 'Silver Lake Medical Center, Downtown Campus') or 
(nem:eDisposition.02 = '20433' and nem:eDisposition.01 != 'Silver Lake Medical Center, Ingleside Campus') or 
(nem:eDisposition.02 = '20434' and nem:eDisposition.01 != 'Adventist Health Simi Valley') or 
(nem:eDisposition.02 = '20435' and nem:eDisposition.01 != 'Sonoma Developmental Center') or 
(nem:eDisposition.02 = '20436' and nem:eDisposition.01 != 'Sonoma Valley Hospital') or 
(nem:eDisposition.02 = '20437' and nem:eDisposition.01 != 'Adventist Health Sonora, Fairview') or 
(nem:eDisposition.02 = '20438' and nem:eDisposition.01 != 'Adventist Health Sonora, Greenley') or 
(nem:eDisposition.02 = '20439' and nem:eDisposition.01 != 'Sonora Regional Medical Center Skilled Nursing Facility') or 
(nem:eDisposition.02 = '20440' and nem:eDisposition.01 != 'Southern Inyo Hospital') or 
(nem:eDisposition.02 = '20441' and nem:eDisposition.01 != 'Rancho Springs Medical Center') or 
(nem:eDisposition.02 = '20442' and nem:eDisposition.01 != 'Inland Valley Medical Center') or 
(nem:eDisposition.02 = '20443' and nem:eDisposition.01 != 'Saint Agnes Medical Center') or 
(nem:eDisposition.02 = '20444' and nem:eDisposition.01 != 'St. Bernardine Medical Center') or 
(nem:eDisposition.02 = '20445' and nem:eDisposition.01 != 'St. Elizabeth Community Hospital') or 
(nem:eDisposition.02 = '20446' and nem:eDisposition.01 != 'Saint Francis Medical Center') or 
(nem:eDisposition.02 = '20447' and nem:eDisposition.01 != 'Saint Francis Memorial Hospital') or 
(nem:eDisposition.02 = '20448' and nem:eDisposition.01 != 'Adventist Health St. Helena') or 
(nem:eDisposition.02 = '20449' and nem:eDisposition.01 != 'Adventist Health Clearlake') or 
(nem:eDisposition.02 = '20450' and nem:eDisposition.01 != 'Adventist Health Vallejo, Behavioral Health') or 
(nem:eDisposition.02 = '20451' and nem:eDisposition.01 != 'Providence Saint John''s Health Center') or 
(nem:eDisposition.02 = '20452' and nem:eDisposition.01 != 'Saint John''s Pleasant Valley Hospital') or 
(nem:eDisposition.02 = '20453' and nem:eDisposition.01 != 'Saint John''s Regional Medical Center') or 
(nem:eDisposition.02 = '20454' and nem:eDisposition.01 != 'Saint Joseph Hospital, Eureka') or 
(nem:eDisposition.02 = '20455' and nem:eDisposition.01 != 'St. Joseph Hospital, Orange') or 
(nem:eDisposition.02 = '20456' and nem:eDisposition.01 != 'Saint Joseph''s Behavioral Health Center') or 
(nem:eDisposition.02 = '20457' and nem:eDisposition.01 != 'St. Joseph''s Medical Center of Stockton') or 
(nem:eDisposition.02 = '20458' and nem:eDisposition.01 != 'St. Jude Medical Center') or 
(nem:eDisposition.02 = '20459' and nem:eDisposition.01 != 'St. Louise Regional Hospital') or 
(nem:eDisposition.02 = '20460' and nem:eDisposition.01 != 'St. Mary Medical Center, Long Beach') or 
(nem:eDisposition.02 = '20461' and nem:eDisposition.01 != 'St. Mary Medical Center') or 
(nem:eDisposition.02 = '20462' and nem:eDisposition.01 != 'St. Mary''s Medical Center, San Francisco') or 
(nem:eDisposition.02 = '20463' and nem:eDisposition.01 != 'Saint Rose Hospital') or 
(nem:eDisposition.02 = '20464' and nem:eDisposition.01 != 'Saint Vincent Medical Center') or 
(nem:eDisposition.02 = '20465' and nem:eDisposition.01 != 'Stanford Health Care') or 
(nem:eDisposition.02 = '20466' and nem:eDisposition.01 != 'Stanislaus Surgical Hospital') or 
(nem:eDisposition.02 = '20468' and nem:eDisposition.01 != 'Surprise Valley Community Hospital') or 
(nem:eDisposition.02 = '20469' and nem:eDisposition.01 != 'Sutter Amador Hospital') or 
(nem:eDisposition.02 = '20470' and nem:eDisposition.01 != 'Sutter Auburn Faith Hospital') or 
(nem:eDisposition.02 = '20472' and nem:eDisposition.01 != 'Sutter Coast Hospital') or 
(nem:eDisposition.02 = '20473' and nem:eDisposition.01 != 'Sutter Davis Hospital') or 
(nem:eDisposition.02 = '20474' and nem:eDisposition.01 != 'Sutter Delta Medical Center') or 
(nem:eDisposition.02 = '20475' and nem:eDisposition.01 != 'Sutter Medical Center - Sacramento') or 
(nem:eDisposition.02 = '20476' and nem:eDisposition.01 != 'Sutter Lakeside Hospital') or 
(nem:eDisposition.02 = '20477' and nem:eDisposition.01 != 'Sutter Maternity and Surgery Center of Santa Cruz') or 
(nem:eDisposition.02 = '20478' and nem:eDisposition.01 != 'Sutter Santa Rosa Regional Hospital') or 
(nem:eDisposition.02 = '20479' and nem:eDisposition.01 != 'Sutter Memorial Hospital') or 
(nem:eDisposition.02 = '20480' and nem:eDisposition.01 != 'Sutter Oaks Nursing Center, Midtown') or 
(nem:eDisposition.02 = '20481' and nem:eDisposition.01 != 'Sutter Roseville Medical Center') or 
(nem:eDisposition.02 = '20482' and nem:eDisposition.01 != 'Sutter Solano Medical Center') or 
(nem:eDisposition.02 = '20483' and nem:eDisposition.01 != 'Sutter Surgical Hospital, North Valley') or 
(nem:eDisposition.02 = '20484' and nem:eDisposition.01 != 'Sutter Tracy Community Hospital') or 
(nem:eDisposition.02 = '20486' and nem:eDisposition.01 != 'Tahoe Forest Hospital') or 
(nem:eDisposition.02 = '20487' and nem:eDisposition.01 != 'Tarzana Treatment Center') or 
(nem:eDisposition.02 = '20488' and nem:eDisposition.01 != 'Adventist Health Tehachapi Valley') or 
(nem:eDisposition.02 = '20492' and nem:eDisposition.01 != 'Temple Community Hospital') or 
(nem:eDisposition.02 = '20493' and nem:eDisposition.01 != 'Thousand Oaks Surgical Hospital') or 
(nem:eDisposition.02 = '20496' and nem:eDisposition.01 != 'Torrance Memorial Medical Center') or 
(nem:eDisposition.02 = '20497' and nem:eDisposition.01 != 'Tri-City Medical Center') or 
(nem:eDisposition.02 = '20498' and nem:eDisposition.01 != 'Gardens Regional Hospital &amp; Medical Center') or 
(nem:eDisposition.02 = '20499' and nem:eDisposition.01 != 'Trinity Hospital') or 
(nem:eDisposition.02 = '20500' and nem:eDisposition.01 != 'Tulare Regional Medical Center') or 
(nem:eDisposition.02 = '20502' and nem:eDisposition.01 != 'Twin Cities Community Hospital') or 
(nem:eDisposition.02 = '20503' and nem:eDisposition.01 != 'University of California, San Diego, John M. &amp; Sally B. Thornton Hospital') or 
(nem:eDisposition.02 = '20504' and nem:eDisposition.01 != 'UCSF Medical Center at Parnassus') or 
(nem:eDisposition.02 = '20505' and nem:eDisposition.01 != 'University of California, San Francisco Medical Center at Mount Zion') or 
(nem:eDisposition.02 = '20506' and nem:eDisposition.01 != 'Adventist Health Ukiah Valley') or 
(nem:eDisposition.02 = '20508' and nem:eDisposition.01 != 'UC Davis Medical Center') or 
(nem:eDisposition.02 = '20509' and nem:eDisposition.01 != 'University of California, Irvine Medical Center') or 
(nem:eDisposition.02 = '20510' and nem:eDisposition.01 != 'University of California, San Diego Medical Center') or 
(nem:eDisposition.02 = '20511' and nem:eDisposition.01 != 'USC Kenneth Norris, Jr. Cancer Hospital') or 
(nem:eDisposition.02 = '20512' and nem:eDisposition.01 != 'Keck Hospital of USC') or 
(nem:eDisposition.02 = '20513' and nem:eDisposition.01 != 'Valley Memorial Hospital, Livermore') or 
(nem:eDisposition.02 = '20514' and nem:eDisposition.01 != 'Valley Presbyterian Hospital') or 
(nem:eDisposition.02 = '20515' and nem:eDisposition.01 != 'Stanford Health Care - ValleyCare') or 
(nem:eDisposition.02 = '20516' and nem:eDisposition.01 != 'Ventura County Medical Center') or 
(nem:eDisposition.02 = '20517' and nem:eDisposition.01 != 'Ventura County Medical Center - Santa Paula Hospital') or 
(nem:eDisposition.02 = '20518' and nem:eDisposition.01 != 'USC Verdugo Hills Hospital') or 
(nem:eDisposition.02 = '20519' and nem:eDisposition.01 != 'Vibra Hospital of San Diego') or 
(nem:eDisposition.02 = '20520' and nem:eDisposition.01 != 'Victor Valley Global Medical Center') or 
(nem:eDisposition.02 = '20521' and nem:eDisposition.01 != 'Villa Coronado Convalescent') or 
(nem:eDisposition.02 = '20522' and nem:eDisposition.01 != 'Kindred Hospital, Riverside') or 
(nem:eDisposition.02 = '20523' and nem:eDisposition.01 != 'Kindred Hospital, Baldwin Park') or 
(nem:eDisposition.02 = '20524' and nem:eDisposition.01 != 'Kindred Hospital South Bay') or 
(nem:eDisposition.02 = '20525' and nem:eDisposition.01 != 'Washington Hospital, Fremont') or 
(nem:eDisposition.02 = '20526' and nem:eDisposition.01 != 'Watsonville Community Hospital') or 
(nem:eDisposition.02 = '20527' and nem:eDisposition.01 != 'West Anaheim Medical Center') or 
(nem:eDisposition.02 = '20528' and nem:eDisposition.01 != 'West Hills Hospital and Medical Center') or 
(nem:eDisposition.02 = '20529' and nem:eDisposition.01 != 'Orange County Global Medical Center') or 
(nem:eDisposition.02 = '20530' and nem:eDisposition.01 != 'Anaheim Global Medical Center') or 
(nem:eDisposition.02 = '20531' and nem:eDisposition.01 != 'Adventist Health White Memorial') or 
(nem:eDisposition.02 = '20532' and nem:eDisposition.01 != 'Whittier Hospital Medical Center') or 
(nem:eDisposition.02 = '20533' and nem:eDisposition.01 != 'Woodland Memorial Hospital') or 
(nem:eDisposition.02 = '20535' and nem:eDisposition.01 != 'Loma Linda University Medical Center, Murrieta') or 
(nem:eDisposition.02 = '20536' and nem:eDisposition.01 != 'Veterans Administration Medical Center, Fresno') or 
(nem:eDisposition.02 = '20537' and nem:eDisposition.01 != 'Naval Medical Center San Diego') or 
(nem:eDisposition.02 = '20538' and nem:eDisposition.01 != 'Naval Hospital Camp Pendleton') or 
(nem:eDisposition.02 = '20539' and nem:eDisposition.01 != 'Veterans Administration San Diego Healthcare System') or 
(nem:eDisposition.02 = '20540' and nem:eDisposition.01 != 'Veterans Administration Medical Center, San Francisco') or 
(nem:eDisposition.02 = '20541' and nem:eDisposition.01 != 'Veterans Administration Palo Alto Health Care System, Palo Alto Division') or 
(nem:eDisposition.02 = '20542' and nem:eDisposition.01 != 'Veterans Administration Greater Los Angeles Medical Center') or 
(nem:eDisposition.02 = '20543' and nem:eDisposition.01 != 'Veterans Administration Loma Linda Healthcare System') or 
(nem:eDisposition.02 = '20544' and nem:eDisposition.01 != 'Veterans Administration Long Beach Healthcare System') or 
(nem:eDisposition.02 = '20545' and nem:eDisposition.01 != 'Lancaster Community Hospital') or 
(nem:eDisposition.02 = '20546' and nem:eDisposition.01 != 'Veterans Administration Palo Alto Health Care System, Livermore Division') or 
(nem:eDisposition.02 = '20547' and nem:eDisposition.01 != 'Veterans Administration Palo Alto Health Care System, Menlo Park Division') or 
(nem:eDisposition.02 = '20549' and nem:eDisposition.01 != 'Sacramento VA Medical Center') or 
(nem:eDisposition.02 = '20550' and nem:eDisposition.01 != 'Sky Lakes Medical Center') or 
(nem:eDisposition.02 = '20551' and nem:eDisposition.01 != 'Northern Nevada Medical Center') or 
(nem:eDisposition.02 = '20552' and nem:eDisposition.01 != 'Providence Medford Medical Center') or 
(nem:eDisposition.02 = '20553' and nem:eDisposition.01 != 'Renown Regional Medical Center') or 
(nem:eDisposition.02 = '20554' and nem:eDisposition.01 != 'David Grant US Air Force Medical Center') or 
(nem:eDisposition.02 = '20555' and nem:eDisposition.01 != 'Kaiser Permanente, Ontario') or 
(nem:eDisposition.02 = '20557' and nem:eDisposition.01 != 'Asante Rogue Regional Medical Center') or 
(nem:eDisposition.02 = '20559' and nem:eDisposition.01 != 'Temecula Valley Hospital') or 
(nem:eDisposition.02 = '20560' and nem:eDisposition.01 != 'Kaiser Permanente, Anaheim') or 
(nem:eDisposition.02 = '20561' and nem:eDisposition.01 != 'Palomar Medical Center') or 
(nem:eDisposition.02 = '20563' and nem:eDisposition.01 != 'Alameda Hospital at Waters Edge') or 
(nem:eDisposition.02 = '21632' and nem:eDisposition.01 != 'Totally Kids Rehabilitation Hospital') or 
(nem:eDisposition.02 = '60248' and nem:eDisposition.01 != 'Carson Tahoe Regional Medical Center') or 
(nem:eDisposition.02 = '60988' and nem:eDisposition.01 != 'Martin Luther King, Jr. Community Hospital') or 
(nem:eDisposition.02 = '61304' and nem:eDisposition.01 != 'Alvarado Hospital Medical Center') or 
(nem:eDisposition.02 = '61412' and nem:eDisposition.01 != 'Saint Mary''s Regional Medical Center') or 
(nem:eDisposition.02 = '61531' and nem:eDisposition.01 != 'UMC Medical') or 
(nem:eDisposition.02 = '61532' and nem:eDisposition.01 != 'UMC Trauma') or 
(nem:eDisposition.02 = '61545' and nem:eDisposition.01 != 'USAF Regional Hos') or 
(nem:eDisposition.02 = '61554' and nem:eDisposition.01 != 'VA Greater Los Angeles Healthcare System, Sepulveda') or 
(nem:eDisposition.02 = '61564' and nem:eDisposition.01 != 'Valley Hospital Medical Center') or 
(nem:eDisposition.02 = '61569' and nem:eDisposition.01 != 'Valley View Medical Center') or 
(nem:eDisposition.02 = '61588' and nem:eDisposition.01 != 'Veterans Administration, Reno') or 
(nem:eDisposition.02 = '61636' and nem:eDisposition.01 != 'Weed Army Community Hospital (Wach), Ft Irwin') or 
(nem:eDisposition.02 = '61643' and nem:eDisposition.01 != 'West Hills Hospital') or 
(nem:eDisposition.02 = '61680' and nem:eDisposition.01 != 'LAC+USC Medical Center Women''s and Children''s Hospital') or 
(nem:eDisposition.02 = '62054' and nem:eDisposition.01 != 'David Grant Medical Center-Travis AFB') or 
(nem:eDisposition.02 = '62239' and nem:eDisposition.01 != 'Vibra Hospital of Sacramento') or 
(nem:eDisposition.02 = '62298' and nem:eDisposition.01 != 'Desert Parkway Behavioral Healthcare Hospital') or 
(nem:eDisposition.02 = '62313' and nem:eDisposition.01 != 'Fresno Community Hospital') or 
(nem:eDisposition.02 = '62338' and nem:eDisposition.01 != 'UCSF Medical Center at Mission Bay') or 
(nem:eDisposition.02 = '62346' and nem:eDisposition.01 != 'Mayo Clinic Hospital') or 
(nem:eDisposition.02 = '62348' and nem:eDisposition.01 != 'Kindred Hospital, Arizona') or 
(nem:eDisposition.02 = '62349' and nem:eDisposition.01 != 'VA Sierra Nevada Health Care System') or 
(nem:eDisposition.02 = '62352' and nem:eDisposition.01 != 'Kindred Hospital, Las Vegas - Sahara') or 
(nem:eDisposition.02 = '62356' and nem:eDisposition.01 != 'Kaiser Permanente, San Leandro Medical Center') or 
(nem:eDisposition.02 = '62357' and nem:eDisposition.01 != 'Henderson Hospital') or 
(nem:eDisposition.02 = '62358' and nem:eDisposition.01 != 'Lake District Hospital') or 
(nem:eDisposition.02 = '62370' and nem:eDisposition.01 != 'Barrow Neurological Institute') or 
(nem:eDisposition.02 = '62393' and nem:eDisposition.01 != 'Kaiser Permanente, San Diego Medical Center') or 
(nem:eDisposition.02 = '62404' and nem:eDisposition.01 != 'UCSF Benioff Children''s Hospital') or 
(nem:eDisposition.02 = '62445' and nem:eDisposition.01 != 'San Jose Behavioral Health Hospital') or 
(nem:eDisposition.02 = '62463' and nem:eDisposition.01 != 'Kentfield Hospital San Francisco') or 
(nem:eDisposition.02 = '62470' and nem:eDisposition.01 != 'Sonoma Specialty Hospital') or 
(nem:eDisposition.02 = '62636' and nem:eDisposition.01 != 'CPMC-Van Ness') or 
(nem:eDisposition.02 = '62642' and nem:eDisposition.01 != 'Banner Thunderbird Medical Center') or 
(nem:eDisposition.02 = '64691' and nem:eDisposition.01 != 'Edwards Air Force Base Hospital') or 
(nem:eDisposition.02 = '64709' and nem:eDisposition.01 != 'St. Joseph''s Hospital and Medical Center') or 
(nem:eDisposition.02 = '64712' and nem:eDisposition.01 != 'Asante Three Rivers Medical Center') or 
(nem:eDisposition.02 = '64802' and nem:eDisposition.01 != 'Phoenix Children''s Hospital') or 
(nem:eDisposition.02 = '64803' and nem:eDisposition.01 != 'Abrazo Central Campus'))">Submitted value for Destination Code (eDisposition.02) with Destination Name (eDisposition.01) does not exist in the system.</sch:assert>
			</sch:rule>
		</sch:pattern>

		<sch:pattern>
			<sch:title>eDisposition.01 related rule.</sch:title>
			<sch:rule context="nem:PatientCareReport/nem:eDisposition/nem:eDisposition.DestinationGroup">
			<sch:let name="nemsisElements" value="nem:eDisposition.01"/> <sch:assert id="RestrictDestinationNameToCode" role="[FATAL]" diagnostics="nemsisDiagnostic" test="not(
(nem:eDisposition.01 = 'Adventist Health Hanford' and nem:eDisposition.02 != '20001') or 
(nem:eDisposition.01 = 'AHMC Anaheim Regional Medical Center' and nem:eDisposition.02 != '20002') or 
(nem:eDisposition.01 = 'Alameda County Fairmont Hospital' and nem:eDisposition.02 != '20003') or 
(nem:eDisposition.01 = 'Alameda County Medical Center, Highland' and nem:eDisposition.02 != '20004') or 
(nem:eDisposition.01 = 'Alameda Hospital' and nem:eDisposition.02 != '20005') or 
(nem:eDisposition.01 = 'Alhambra Hospital' and nem:eDisposition.02 != '20007') or 
(nem:eDisposition.01 = 'Alta Bates Summit Medical Center, Alta Bates Campus' and nem:eDisposition.02 != '20008') or 
(nem:eDisposition.01 = 'Alta Bates Summit Medical Center, Herrick Campus' and nem:eDisposition.02 != '20009') or 
(nem:eDisposition.01 = 'Alta Bates Summit Medical Center, Hawthorne' and nem:eDisposition.02 != '20010') or 
(nem:eDisposition.01 = 'Alta Bates Summit Medical Center, Summit Campus' and nem:eDisposition.02 != '20011') or 
(nem:eDisposition.01 = 'Alvarado Hospital' and nem:eDisposition.02 != '20012') or 
(nem:eDisposition.01 = 'Antelope Valley Hospital' and nem:eDisposition.02 != '20018') or 
(nem:eDisposition.01 = 'Arrowhead Regional Medical Center' and nem:eDisposition.02 != '20019') or 
(nem:eDisposition.01 = 'Arroyo Grande Community Hospital' and nem:eDisposition.02 != '20020') or 
(nem:eDisposition.01 = 'Atascadero State Hospital' and nem:eDisposition.02 != '20021') or 
(nem:eDisposition.01 = 'Aurora Santa Rosa Hospital' and nem:eDisposition.02 != '20022') or 
(nem:eDisposition.01 = 'Aurora Las Encinas Hospital' and nem:eDisposition.02 != '20024') or 
(nem:eDisposition.01 = 'Aurora Vista Del Mar Hospital' and nem:eDisposition.02 != '20026') or 
(nem:eDisposition.01 = 'Bakersfield Heart Hospital' and nem:eDisposition.02 != '20027') or 
(nem:eDisposition.01 = 'Bakersfield Memorial Hospital' and nem:eDisposition.02 != '20028') or 
(nem:eDisposition.01 = 'Ballard Rehabilitation Hospital' and nem:eDisposition.02 != '20029') or 
(nem:eDisposition.01 = 'Banner Lassen Medical Center' and nem:eDisposition.02 != '20030') or 
(nem:eDisposition.01 = 'Barlow Respiratory Hospital' and nem:eDisposition.02 != '20031') or 
(nem:eDisposition.01 = 'Barstow Community Hospital' and nem:eDisposition.02 != '20032') or 
(nem:eDisposition.01 = 'Barton Memorial Hospital' and nem:eDisposition.02 != '20033') or 
(nem:eDisposition.01 = 'Bear Valley Community Healthcare District' and nem:eDisposition.02 != '20034') or 
(nem:eDisposition.01 = 'Los Angeles Community Hospital at Bellflower' and nem:eDisposition.02 != '20035') or 
(nem:eDisposition.01 = 'Beverly Hospital' and nem:eDisposition.02 != '20038') or 
(nem:eDisposition.01 = 'Orchard Hospital' and nem:eDisposition.02 != '20040') or 
(nem:eDisposition.01 = 'Emanuel Medical Center, Brandel Manor' and nem:eDisposition.02 != '20041') or 
(nem:eDisposition.01 = 'Southern California Hospital at Culver City' and nem:eDisposition.02 != '20042') or 
(nem:eDisposition.01 = 'California Hospital Medical Center' and nem:eDisposition.02 != '20045') or 
(nem:eDisposition.01 = 'Sutter Health CPMC' and nem:eDisposition.02 != '20046') or 
(nem:eDisposition.01 = 'California Pacific Medical Center, Davies Campus Hospital' and nem:eDisposition.02 != '20048') or 
(nem:eDisposition.01 = 'CPMC Mission Bernal Campus' and nem:eDisposition.02 != '20050') or 
(nem:eDisposition.01 = 'Canyon Ridge Hospital' and nem:eDisposition.02 != '20051') or 
(nem:eDisposition.01 = 'Casa Colina Hospital' and nem:eDisposition.02 != '20052') or 
(nem:eDisposition.01 = 'Catalina Island Medical Center' and nem:eDisposition.02 != '20053') or 
(nem:eDisposition.01 = 'Cedars-Sinai Medical Center' and nem:eDisposition.02 != '20054') or 
(nem:eDisposition.01 = 'Centinela Hospital Medical Center' and nem:eDisposition.02 != '20055') or 
(nem:eDisposition.01 = 'Central Valley General Hospital' and nem:eDisposition.02 != '20056') or 
(nem:eDisposition.01 = 'California Rehabilitation Institute' and nem:eDisposition.02 != '20057') or 
(nem:eDisposition.01 = 'Chapman Global Medical Center' and nem:eDisposition.02 != '20058') or 
(nem:eDisposition.01 = 'Children''s Hospital &amp; Research Center Oakland' and nem:eDisposition.02 != '20059') or 
(nem:eDisposition.01 = 'Children''s Hospital At Mission' and nem:eDisposition.02 != '20060') or 
(nem:eDisposition.01 = 'Valley Children''s Hospital' and nem:eDisposition.02 != '20061') or 
(nem:eDisposition.01 = 'Children''s Hospital Los Angeles' and nem:eDisposition.02 != '20062') or 
(nem:eDisposition.01 = 'Children''s Hospital of Orange County' and nem:eDisposition.02 != '20063') or 
(nem:eDisposition.01 = 'Children''s Recovery Center of Northern California' and nem:eDisposition.02 != '20064') or 
(nem:eDisposition.01 = 'Chinese Hospital' and nem:eDisposition.02 != '20065') or 
(nem:eDisposition.01 = 'Chino Valley Medical Center' and nem:eDisposition.02 != '20066') or 
(nem:eDisposition.01 = 'Citrus Valley Medical Center, Inter - Community Campus' and nem:eDisposition.02 != '20067') or 
(nem:eDisposition.01 = 'Citrus Valley Medical Center, Queen of the Valley Campus' and nem:eDisposition.02 != '20068') or 
(nem:eDisposition.01 = 'City of Hope Helford Clinical Research Hospital' and nem:eDisposition.02 != '20069') or 
(nem:eDisposition.01 = 'Clovis Community Medical Center' and nem:eDisposition.02 != '20070') or 
(nem:eDisposition.01 = 'Coalinga Regional Medical Center' and nem:eDisposition.02 != '20071') or 
(nem:eDisposition.01 = 'Coast Plaza Hospital' and nem:eDisposition.02 != '20073') or 
(nem:eDisposition.01 = 'South Coast Global Medical Center' and nem:eDisposition.02 != '20074') or 
(nem:eDisposition.01 = 'College Hospital Costa Mesa' and nem:eDisposition.02 != '20076') or 
(nem:eDisposition.01 = 'Colorado River Medical Center' and nem:eDisposition.02 != '20077') or 
(nem:eDisposition.01 = 'Colusa Medical Center' and nem:eDisposition.02 != '20078') or 
(nem:eDisposition.01 = 'Community Hospital of the Monterey Peninsula' and nem:eDisposition.02 != '20080') or 
(nem:eDisposition.01 = 'Community Hospital of Huntington Park' and nem:eDisposition.02 != '20081') or 
(nem:eDisposition.01 = 'Community Hospital of Long Beach' and nem:eDisposition.02 != '20082') or 
(nem:eDisposition.01 = 'Community Hospital of San Bernardino' and nem:eDisposition.02 != '20083') or 
(nem:eDisposition.01 = 'Community Memorial Hospital, San Buenaventura' and nem:eDisposition.02 != '20084') or 
(nem:eDisposition.01 = 'Community Regional Medical Center, Fresno' and nem:eDisposition.02 != '20085') or 
(nem:eDisposition.01 = 'Contra Costa Regional Medical Center' and nem:eDisposition.02 != '20087') or 
(nem:eDisposition.01 = 'Corona Rehabilitation Hospital' and nem:eDisposition.02 != '20089') or 
(nem:eDisposition.01 = 'Corona Regional Medical Center' and nem:eDisposition.02 != '20090') or 
(nem:eDisposition.01 = 'Dameron Hospital' and nem:eDisposition.02 != '20094') or 
(nem:eDisposition.01 = 'Del Amo Hospital' and nem:eDisposition.02 != '20095') or 
(nem:eDisposition.01 = 'Delano Regional Medical Center' and nem:eDisposition.02 != '20096') or 
(nem:eDisposition.01 = 'Desert Regional Medical Center' and nem:eDisposition.02 != '20097') or 
(nem:eDisposition.01 = 'Desert Valley Hospital' and nem:eDisposition.02 != '20098') or 
(nem:eDisposition.01 = 'Doctors Hospital of Manteca' and nem:eDisposition.02 != '20099') or 
(nem:eDisposition.01 = 'Doctors Hospital of West Covina' and nem:eDisposition.02 != '20100') or 
(nem:eDisposition.01 = 'Doctors Medical Center' and nem:eDisposition.02 != '20101') or 
(nem:eDisposition.01 = 'Doctors Medical Center, San Pablo' and nem:eDisposition.02 != '20102') or 
(nem:eDisposition.01 = 'Dominican Hospital, Santa Cruz' and nem:eDisposition.02 != '20105') or 
(nem:eDisposition.01 = 'PIH Health Hospital, Downey' and nem:eDisposition.02 != '20106') or 
(nem:eDisposition.01 = 'Earl and Lorraine Miller Childrens Hospital' and nem:eDisposition.02 != '20107') or 
(nem:eDisposition.01 = 'East Los Angeles Doctors Hospital' and nem:eDisposition.02 != '20108') or 
(nem:eDisposition.01 = 'Glendora Community Hospital' and nem:eDisposition.02 != '20109') or 
(nem:eDisposition.01 = 'Eastern Plumas Hospital, Loyalton Campus' and nem:eDisposition.02 != '20110') or 
(nem:eDisposition.01 = 'Eastern Plumas Hospital, Portola Campus' and nem:eDisposition.02 != '20111') or 
(nem:eDisposition.01 = 'Eden Medical Center' and nem:eDisposition.02 != '20112') or 
(nem:eDisposition.01 = 'Eisenhower Medical Center' and nem:eDisposition.02 != '20114') or 
(nem:eDisposition.01 = 'El Camino Hospital' and nem:eDisposition.02 != '20115') or 
(nem:eDisposition.01 = 'El Camino Hospital Los Gatos' and nem:eDisposition.02 != '20116') or 
(nem:eDisposition.01 = 'El Centro Regional Medical Center' and nem:eDisposition.02 != '20117') or 
(nem:eDisposition.01 = 'Emanuel Medical Center' and nem:eDisposition.02 != '20119') or 
(nem:eDisposition.01 = 'Encino Hospital Medical Center' and nem:eDisposition.02 != '20120') or 
(nem:eDisposition.01 = 'Enloe Medical Center, Cohasset' and nem:eDisposition.02 != '20121') or 
(nem:eDisposition.01 = 'Enloe Medical Center, Esplanade' and nem:eDisposition.02 != '20122') or 
(nem:eDisposition.01 = 'Enloe Rehabilitation Center' and nem:eDisposition.02 != '20123') or 
(nem:eDisposition.01 = 'Fairchild Medical Center' and nem:eDisposition.02 != '20124') or 
(nem:eDisposition.01 = 'Fairview Developmental Center' and nem:eDisposition.02 != '20125') or 
(nem:eDisposition.01 = 'Adventist Health Feather River' and nem:eDisposition.02 != '20128') or 
(nem:eDisposition.01 = 'Foothill Presbyterian Hospital' and nem:eDisposition.02 != '20129') or 
(nem:eDisposition.01 = 'Fountain Valley Regional Hospital and Medical Center, Euclid' and nem:eDisposition.02 != '20130') or 
(nem:eDisposition.01 = 'Fountain Valley Regional Hospital and Medical Center, Warner' and nem:eDisposition.02 != '20131') or 
(nem:eDisposition.01 = 'Adventist Health Howard Memorial' and nem:eDisposition.02 != '20132') or 
(nem:eDisposition.01 = 'Fremont Hospital' and nem:eDisposition.02 != '20133') or 
(nem:eDisposition.01 = 'Fremont Medical Center' and nem:eDisposition.02 != '20134') or 
(nem:eDisposition.01 = 'French Hospital Medical Center' and nem:eDisposition.02 != '20135') or 
(nem:eDisposition.01 = 'Fresno Heart and Surgical Hospital' and nem:eDisposition.02 != '20137') or 
(nem:eDisposition.01 = 'Fresno Surgical Hospital' and nem:eDisposition.02 != '20138') or 
(nem:eDisposition.01 = 'Garden Grove Hospital and Medical Center' and nem:eDisposition.02 != '20139') or 
(nem:eDisposition.01 = 'Garfield Medical Center' and nem:eDisposition.02 != '20140') or 
(nem:eDisposition.01 = 'General Hospital' and nem:eDisposition.02 != '20142') or 
(nem:eDisposition.01 = 'George L. Mee Memorial Hospital' and nem:eDisposition.02 != '20143') or 
(nem:eDisposition.01 = 'Adventist Health Glendale' and nem:eDisposition.02 != '20144') or 
(nem:eDisposition.01 = 'Glendale Memorial Hospital and Health Center' and nem:eDisposition.02 != '20145') or 
(nem:eDisposition.01 = 'Glenn Medical Center' and nem:eDisposition.02 != '20146') or 
(nem:eDisposition.01 = 'Goleta Valley Cottage Hospital' and nem:eDisposition.02 != '20147') or 
(nem:eDisposition.01 = 'Good Samaritan Hospital, Bakersfield' and nem:eDisposition.02 != '20148') or 
(nem:eDisposition.01 = 'Good Samaritan Hospital, Los Angeles' and nem:eDisposition.02 != '20149') or 
(nem:eDisposition.01 = 'Good Samaritan Hospital, San Jose' and nem:eDisposition.02 != '20150') or 
(nem:eDisposition.01 = 'Greater El Monte Community Hospital' and nem:eDisposition.02 != '20152') or 
(nem:eDisposition.01 = 'Sharp Grossmont Hospital' and nem:eDisposition.02 != '20153') or 
(nem:eDisposition.01 = 'Hazel Hawkins Memorial Hospital' and nem:eDisposition.02 != '20156') or 
(nem:eDisposition.01 = 'Healdsburg District Hospital' and nem:eDisposition.02 != '20157') or 
(nem:eDisposition.01 = 'Healthbridge Children''s Hospital, Orange' and nem:eDisposition.02 != '20158') or 
(nem:eDisposition.01 = 'Health South Rehab' and nem:eDisposition.02 != '20159') or 
(nem:eDisposition.01 = 'Healthsouth Tustin Rehabilitation Hospital' and nem:eDisposition.02 != '20160') or 
(nem:eDisposition.01 = 'Hemet Valley Medical Care' and nem:eDisposition.02 != '20161') or 
(nem:eDisposition.01 = 'Hemet Valley Medical Center' and nem:eDisposition.02 != '20162') or 
(nem:eDisposition.01 = 'Henry Mayo Newhall Memorial Hospital' and nem:eDisposition.02 != '20163') or 
(nem:eDisposition.01 = 'Hi-Desert Medical Center' and nem:eDisposition.02 != '20165') or 
(nem:eDisposition.01 = 'Hoag Hospital Irvine' and nem:eDisposition.02 != '20166') or 
(nem:eDisposition.01 = 'Hoag Hospital Newport Beach' and nem:eDisposition.02 != '20167') or 
(nem:eDisposition.01 = 'Hoag Orthopedic Institute' and nem:eDisposition.02 != '20168') or 
(nem:eDisposition.01 = 'Southern California Hospital at Hollywood' and nem:eDisposition.02 != '20169') or 
(nem:eDisposition.01 = 'Hollywood Community Hospital of Van Nuys' and nem:eDisposition.02 != '20170') or 
(nem:eDisposition.01 = 'Hollywood Presbyterian Medical Center' and nem:eDisposition.02 != '20171') or 
(nem:eDisposition.01 = 'Huntington Beach Hospital' and nem:eDisposition.02 != '20172') or 
(nem:eDisposition.01 = 'Huntington Memorial Hospital' and nem:eDisposition.02 != '20173') or 
(nem:eDisposition.01 = 'Jerold Phelps Community Hospital' and nem:eDisposition.02 != '20174') or 
(nem:eDisposition.01 = 'John C Fremont Healthcare District' and nem:eDisposition.02 != '20176') or 
(nem:eDisposition.01 = 'JFK - John F Kennedy Memorial Hospital' and nem:eDisposition.02 != '20177') or 
(nem:eDisposition.01 = 'John Muir Medical Center, Concord' and nem:eDisposition.02 != '20179') or 
(nem:eDisposition.01 = 'John Muir Medical Center, Walnut Creek' and nem:eDisposition.02 != '20180') or 
(nem:eDisposition.01 = 'Joyce Eisenberg Keefer Medical Center' and nem:eDisposition.02 != '20181') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Lakeview' and nem:eDisposition.02 != '20182') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Baldwin Park' and nem:eDisposition.02 != '20183') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Fontana' and nem:eDisposition.02 != '20184') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Fremont' and nem:eDisposition.02 != '20185') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Fresno' and nem:eDisposition.02 != '20186') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Hayward' and nem:eDisposition.02 != '20187') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Irvine' and nem:eDisposition.02 != '20188') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Oakland Medical Center' and nem:eDisposition.02 != '20190') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Panorama City' and nem:eDisposition.02 != '20191') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Redwood City' and nem:eDisposition.02 != '20192') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Vallejo' and nem:eDisposition.02 != '20193') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Richmond' and nem:eDisposition.02 != '20194') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Riverside' and nem:eDisposition.02 != '20195') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Roseville Medical Center' and nem:eDisposition.02 != '20196') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Sacramento Medical Center' and nem:eDisposition.02 != '20197') or 
(nem:eDisposition.01 = 'Kaiser Permanente, San Diego' and nem:eDisposition.02 != '20198') or 
(nem:eDisposition.01 = 'Kaiser Permanente, San Francisco' and nem:eDisposition.02 != '20199') or 
(nem:eDisposition.01 = 'Kaiser Permanente, San Jose' and nem:eDisposition.02 != '20200') or 
(nem:eDisposition.01 = 'Kaiser Permanente, San Rafael' and nem:eDisposition.02 != '20201') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Santa Clara Medical Center and Medical Offices' and nem:eDisposition.02 != '20202') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Santa Rosa' and nem:eDisposition.02 != '20203') or 
(nem:eDisposition.01 = 'Kaiser Permanente, South Bay' and nem:eDisposition.02 != '20204') or 
(nem:eDisposition.01 = 'Kaiser Permanente, South Sacramento Medical Center' and nem:eDisposition.02 != '20205') or 
(nem:eDisposition.01 = 'Kaiser Permanente, South San Francisco' and nem:eDisposition.02 != '20206') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Los Angeles' and nem:eDisposition.02 != '20207') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Walnut Creek' and nem:eDisposition.02 != '20208') or 
(nem:eDisposition.01 = 'Kaiser Permanente, West Los Angeles' and nem:eDisposition.02 != '20209') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Woodland Hills' and nem:eDisposition.02 != '20210') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Moreno Valley' and nem:eDisposition.02 != '20211') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Manteca' and nem:eDisposition.02 != '20212') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Modesto' and nem:eDisposition.02 != '20213') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Antioch' and nem:eDisposition.02 != '20214') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Downey' and nem:eDisposition.02 != '20215') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Vacaville' and nem:eDisposition.02 != '20216') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Behavioral Health Center, Santa Clara' and nem:eDisposition.02 != '20217') or 
(nem:eDisposition.01 = 'Kaweah Delta Medical Center' and nem:eDisposition.02 != '20219') or 
(nem:eDisposition.01 = 'Kentfield Hospital' and nem:eDisposition.02 != '20223') or 
(nem:eDisposition.01 = 'Kern Medical' and nem:eDisposition.02 != '20224') or 
(nem:eDisposition.01 = 'Kern Valley Healthcare District' and nem:eDisposition.02 != '20225') or 
(nem:eDisposition.01 = 'Kindred Hospital, La Mirada' and nem:eDisposition.02 != '20226') or 
(nem:eDisposition.01 = 'Kindred Hospital, Los Angeles' and nem:eDisposition.02 != '20227') or 
(nem:eDisposition.01 = 'Kindred Hospital, San Diego' and nem:eDisposition.02 != '20229') or 
(nem:eDisposition.01 = 'Kindred Hospital, San Francisco Bay Area' and nem:eDisposition.02 != '20230') or 
(nem:eDisposition.01 = 'Kindred Hospital, San Gabriel Valley' and nem:eDisposition.02 != '20231') or 
(nem:eDisposition.01 = 'Kindred Hospital, Santa Ana' and nem:eDisposition.02 != '20232') or 
(nem:eDisposition.01 = 'Kindred Hospital, Brea' and nem:eDisposition.02 != '20233') or 
(nem:eDisposition.01 = 'Central Valley Specialty Care' and nem:eDisposition.02 != '20234') or 
(nem:eDisposition.01 = 'Kindred Hospital, Ontario' and nem:eDisposition.02 != '20235') or 
(nem:eDisposition.01 = 'Kindred Hospital, Westminster' and nem:eDisposition.02 != '20236') or 
(nem:eDisposition.01 = 'Kingsburg Medical Center' and nem:eDisposition.02 != '20237') or 
(nem:eDisposition.01 = 'La Palma Intercommunity Hospital' and nem:eDisposition.02 != '20239') or 
(nem:eDisposition.01 = 'Harbor UCLA Medical Center' and nem:eDisposition.02 != '20240') or 
(nem:eDisposition.01 = 'Los Angeles County - Rancho Los Amigos National Rehab Center' and nem:eDisposition.02 != '20241') or 
(nem:eDisposition.01 = 'LAC USC Medical Center' and nem:eDisposition.02 != '20242') or 
(nem:eDisposition.01 = 'Laguna Honda Hospital and Rehabilitation Center' and nem:eDisposition.02 != '20243') or 
(nem:eDisposition.01 = 'Lakewood Regional Medical Center' and nem:eDisposition.02 != '20244') or 
(nem:eDisposition.01 = 'Adventist Health Lodi Memorial' and nem:eDisposition.02 != '20247') or 
(nem:eDisposition.01 = 'Lodi Memorial Hospital, West' and nem:eDisposition.02 != '20248') or 
(nem:eDisposition.01 = 'Loma Linda University Medical Center, East Campus Hospital' and nem:eDisposition.02 != '20249') or 
(nem:eDisposition.01 = 'Loma Linda University Heart and Surgical Hospital' and nem:eDisposition.02 != '20251') or 
(nem:eDisposition.01 = 'Loma Linda University Medical Center' and nem:eDisposition.02 != '20252') or 
(nem:eDisposition.01 = 'Lompoc Valley Medical Center' and nem:eDisposition.02 != '20253') or 
(nem:eDisposition.01 = 'MemorialCare Long Beach Medical Center' and nem:eDisposition.02 != '20255') or 
(nem:eDisposition.01 = 'Los Alamitos Medical Center' and nem:eDisposition.02 != '20256') or 
(nem:eDisposition.01 = 'Los Angeles Community Hospital' and nem:eDisposition.02 != '20257') or 
(nem:eDisposition.01 = 'Olive View UCLA Medical Center' and nem:eDisposition.02 != '20258') or 
(nem:eDisposition.01 = 'Los Angeles Metropolitan Medical Center, Hawthorne' and nem:eDisposition.02 != '20259') or 
(nem:eDisposition.01 = 'Los Angeles Metropolitan Medical Center' and nem:eDisposition.02 != '20260') or 
(nem:eDisposition.01 = 'Los Robles Hospital &amp; Medical Center' and nem:eDisposition.02 != '20261') or 
(nem:eDisposition.01 = 'Los Robles Hospital &amp; Medical Center, East Campus' and nem:eDisposition.02 != '20262') or 
(nem:eDisposition.01 = 'Lucile Packard Children''s Hospital at Stanford' and nem:eDisposition.02 != '20263') or 
(nem:eDisposition.01 = 'Mad River Community Hospital' and nem:eDisposition.02 != '20264') or 
(nem:eDisposition.01 = 'Madera Community Hospital' and nem:eDisposition.02 != '20265') or 
(nem:eDisposition.01 = 'Mammoth Hospital' and nem:eDisposition.02 != '20266') or 
(nem:eDisposition.01 = 'Marian Regional Medical Center' and nem:eDisposition.02 != '20267') or 
(nem:eDisposition.01 = 'Marin Health Medical Center' and nem:eDisposition.02 != '20269') or 
(nem:eDisposition.01 = 'Marina Del Rey Hospital' and nem:eDisposition.02 != '20270') or 
(nem:eDisposition.01 = 'Mark Twain Medical Center' and nem:eDisposition.02 != '20271') or 
(nem:eDisposition.01 = 'Marshall Medical Center' and nem:eDisposition.02 != '20272') or 
(nem:eDisposition.01 = 'Mayers Memorial Hospital District' and nem:eDisposition.02 != '20273') or 
(nem:eDisposition.01 = 'Memorial Hospital Los Banos' and nem:eDisposition.02 != '20274') or 
(nem:eDisposition.01 = 'Memorial Medical Center, Modesto' and nem:eDisposition.02 != '20275') or 
(nem:eDisposition.01 = 'Memorial Hospital Of Gardena' and nem:eDisposition.02 != '20276') or 
(nem:eDisposition.01 = 'Mendocino Coast District Hospital' and nem:eDisposition.02 != '20277') or 
(nem:eDisposition.01 = 'Menifee Valley Medical Center' and nem:eDisposition.02 != '20278') or 
(nem:eDisposition.01 = 'Menlo Park Surgical Hospital' and nem:eDisposition.02 != '20279') or 
(nem:eDisposition.01 = 'Mercy General Hospital' and nem:eDisposition.02 != '20280') or 
(nem:eDisposition.01 = 'Mercy Hospital' and nem:eDisposition.02 != '20281') or 
(nem:eDisposition.01 = 'Mercy Hospital of Folsom' and nem:eDisposition.02 != '20282') or 
(nem:eDisposition.01 = 'Mercy Medical Center, Merced' and nem:eDisposition.02 != '20283') or 
(nem:eDisposition.01 = 'Mercy Medical Center, Redding' and nem:eDisposition.02 != '20284') or 
(nem:eDisposition.01 = 'Mercy Medical Center, Mt. Shasta' and nem:eDisposition.02 != '20285') or 
(nem:eDisposition.01 = 'Mercy San Juan Medical Center' and nem:eDisposition.02 != '20286') or 
(nem:eDisposition.01 = 'Mercy Hospital SW - Bakersfield' and nem:eDisposition.02 != '20287') or 
(nem:eDisposition.01 = 'Methodist Hospital of Sacramento' and nem:eDisposition.02 != '20288') or 
(nem:eDisposition.01 = 'Methodist Hospital of Southern California' and nem:eDisposition.02 != '20289') or 
(nem:eDisposition.01 = 'Mills-Peninsula Medical Center, San Mateo Campus' and nem:eDisposition.02 != '20291') or 
(nem:eDisposition.01 = 'Miracle Mile Medical Center' and nem:eDisposition.02 != '20293') or 
(nem:eDisposition.01 = 'Mission Community Hospital' and nem:eDisposition.02 != '20294') or 
(nem:eDisposition.01 = 'Mission Hospital Laguna Beach' and nem:eDisposition.02 != '20295') or 
(nem:eDisposition.01 = 'Mission Hospital' and nem:eDisposition.02 != '20296') or 
(nem:eDisposition.01 = 'Mission Oaks Hospital' and nem:eDisposition.02 != '20297') or 
(nem:eDisposition.01 = 'Modoc Medical Center' and nem:eDisposition.02 != '20298') or 
(nem:eDisposition.01 = 'Monrovia Memorial Hospital' and nem:eDisposition.02 != '20299') or 
(nem:eDisposition.01 = 'Montclair Hospital Medical Center' and nem:eDisposition.02 != '20300') or 
(nem:eDisposition.01 = 'Monterey Park Hospital' and nem:eDisposition.02 != '20301') or 
(nem:eDisposition.01 = 'Mountains Community Hospital' and nem:eDisposition.02 != '20303') or 
(nem:eDisposition.01 = 'Natividad Medical Center' and nem:eDisposition.02 != '20306') or 
(nem:eDisposition.01 = 'Foothill Regional Medical Center' and nem:eDisposition.02 != '20308') or 
(nem:eDisposition.01 = 'NorthBay Medical Center' and nem:eDisposition.02 != '20309') or 
(nem:eDisposition.01 = 'NorthBay VacaValley Hospital' and nem:eDisposition.02 != '20310') or 
(nem:eDisposition.01 = 'Vibra Hospital of Northern California' and nem:eDisposition.02 != '20313') or 
(nem:eDisposition.01 = 'Northern Inyo Hospital' and nem:eDisposition.02 != '20314') or 
(nem:eDisposition.01 = 'Northridge Hospital Medical Center' and nem:eDisposition.02 != '20315') or 
(nem:eDisposition.01 = 'Norwalk Community Hospital' and nem:eDisposition.02 != '20316') or 
(nem:eDisposition.01 = 'Novato Community Hospital' and nem:eDisposition.02 != '20317') or 
(nem:eDisposition.01 = 'Oak Valley Hospital' and nem:eDisposition.02 != '20319') or 
(nem:eDisposition.01 = 'O''Connor Hospital, San Jose' and nem:eDisposition.02 != '20321') or 
(nem:eDisposition.01 = 'Ojai Valley Community Hospital' and nem:eDisposition.02 != '20323') or 
(nem:eDisposition.01 = 'Olympia Medical Center' and nem:eDisposition.02 != '20324') or 
(nem:eDisposition.01 = 'Orange Coast Memorial Medical Center' and nem:eDisposition.02 != '20325') or 
(nem:eDisposition.01 = 'Oroville Hospital' and nem:eDisposition.02 != '20326') or 
(nem:eDisposition.01 = 'College Medical Center' and nem:eDisposition.02 != '20328') or 
(nem:eDisposition.01 = 'Pacifica Hospital of the Valley' and nem:eDisposition.02 != '20331') or 
(nem:eDisposition.01 = 'Palmdale Regional Medical Center' and nem:eDisposition.02 != '20333') or 
(nem:eDisposition.01 = 'Palo Verde Hospital' and nem:eDisposition.02 != '20334') or 
(nem:eDisposition.01 = 'Palomar Health Downtown Campus' and nem:eDisposition.02 != '20336') or 
(nem:eDisposition.01 = 'Paradise Valley Hospital' and nem:eDisposition.02 != '20337') or 
(nem:eDisposition.01 = 'Parkview Community Hospital Medical Center' and nem:eDisposition.02 != '20339') or 
(nem:eDisposition.01 = 'Patients'' Hospital of Redding' and nem:eDisposition.02 != '20340') or 
(nem:eDisposition.01 = 'Mills-Peninsula Medical Center' and nem:eDisposition.02 != '20342') or 
(nem:eDisposition.01 = 'Petaluma Valley Hospital' and nem:eDisposition.02 != '20343') or 
(nem:eDisposition.01 = 'Pioneers Memorial Hospital' and nem:eDisposition.02 != '20344') or 
(nem:eDisposition.01 = 'Placentia-Linda Hospital' and nem:eDisposition.02 != '20345') or 
(nem:eDisposition.01 = 'Plumas District Hospital' and nem:eDisposition.02 != '20346') or 
(nem:eDisposition.01 = 'Pomerado Hospital' and nem:eDisposition.02 != '20347') or 
(nem:eDisposition.01 = 'Pomona Valley Hospital Medical Center' and nem:eDisposition.02 != '20348') or 
(nem:eDisposition.01 = 'Porterville Developmental Center' and nem:eDisposition.02 != '20349') or 
(nem:eDisposition.01 = 'PIH Health Hospital, Whittier' and nem:eDisposition.02 != '20350') or 
(nem:eDisposition.01 = 'Promise Hospital of East Los Angeles, Suburban Campus' and nem:eDisposition.02 != '20352') or 
(nem:eDisposition.01 = 'Providence Holy Cross Medical Center' and nem:eDisposition.02 != '20354') or 
(nem:eDisposition.01 = 'Providence Little Company of Mary Medical Center, San Pedro' and nem:eDisposition.02 != '20356') or 
(nem:eDisposition.01 = 'Providence Little Company of Mary Medical Center, Torrance' and nem:eDisposition.02 != '20357') or 
(nem:eDisposition.01 = 'Providence Saint Joseph Medical Center' and nem:eDisposition.02 != '20360') or 
(nem:eDisposition.01 = 'Providence Tarzana Medical Center' and nem:eDisposition.02 != '20361') or 
(nem:eDisposition.01 = 'Queen Of The Valley Medical Center' and nem:eDisposition.02 != '20362') or 
(nem:eDisposition.01 = 'Rady Children''s Hospital' and nem:eDisposition.02 != '20364') or 
(nem:eDisposition.01 = 'Kindred Hospital, Rancho' and nem:eDisposition.02 != '20365') or 
(nem:eDisposition.01 = 'Redlands Community Hospital' and nem:eDisposition.02 != '20366') or 
(nem:eDisposition.01 = 'Redwood Memorial Hospital' and nem:eDisposition.02 != '20367') or 
(nem:eDisposition.01 = 'Regional Medical Center of San Jose' and nem:eDisposition.02 != '20368') or 
(nem:eDisposition.01 = 'Cottage Rehabilitation Hospital' and nem:eDisposition.02 != '20369') or 
(nem:eDisposition.01 = 'Adventist Health Rideout' and nem:eDisposition.02 != '20371') or 
(nem:eDisposition.01 = 'Ridgecrest Regional Hospital' and nem:eDisposition.02 != '20372') or 
(nem:eDisposition.01 = 'Riverside Community Hospital' and nem:eDisposition.02 != '20374') or 
(nem:eDisposition.01 = 'Riverside University Health System Medical Center' and nem:eDisposition.02 != '20375') or 
(nem:eDisposition.01 = 'Ronald Reagan UCLA Medical Center' and nem:eDisposition.02 != '20377') or 
(nem:eDisposition.01 = 'MemorialCare Saddleback Medical Center' and nem:eDisposition.02 != '20379') or 
(nem:eDisposition.01 = 'Saddleback Memorial Medical Center, San Clemente' and nem:eDisposition.02 != '20380') or 
(nem:eDisposition.01 = 'Salinas Valley Memorial Hospital' and nem:eDisposition.02 != '20381') or 
(nem:eDisposition.01 = 'San Antonio Regional Hospital' and nem:eDisposition.02 != '20382') or 
(nem:eDisposition.01 = 'San Dimas Community Hospital' and nem:eDisposition.02 != '20385') or 
(nem:eDisposition.01 = 'Zuckerberg San Francisco General Hospital and Trauma Center' and nem:eDisposition.02 != '20386') or 
(nem:eDisposition.01 = 'San Gabriel Valley Medical Center' and nem:eDisposition.02 != '20387') or 
(nem:eDisposition.01 = 'San Gorgonio Memorial Hospital' and nem:eDisposition.02 != '20388') or 
(nem:eDisposition.01 = 'Adventist Health Bakersfield' and nem:eDisposition.02 != '20389') or 
(nem:eDisposition.01 = 'San Joaquin General Hospital' and nem:eDisposition.02 != '20391') or 
(nem:eDisposition.01 = 'San Joaquin Valley Rehabilitation Hospital' and nem:eDisposition.02 != '20392') or 
(nem:eDisposition.01 = 'San Leandro Hospital' and nem:eDisposition.02 != '20393') or 
(nem:eDisposition.01 = 'San Mateo Medical Center' and nem:eDisposition.02 != '20395') or 
(nem:eDisposition.01 = 'San Ramon Regional Medical Center' and nem:eDisposition.02 != '20396') or 
(nem:eDisposition.01 = 'San Ramon Regional Medical Center, South Building' and nem:eDisposition.02 != '20397') or 
(nem:eDisposition.01 = 'Santa Barbara Cottage Hospital' and nem:eDisposition.02 != '20398') or 
(nem:eDisposition.01 = 'Santa Clara Valley Medical Center' and nem:eDisposition.02 != '20400') or 
(nem:eDisposition.01 = 'Santa Monica - UCLA Medical Center and Orthopaedic Hospital' and nem:eDisposition.02 != '20401') or 
(nem:eDisposition.01 = 'Santa Rosa Memorial Hospital, Montgomery' and nem:eDisposition.02 != '20402') or 
(nem:eDisposition.01 = 'Santa Rosa Memorial Hospital, Sotoyome' and nem:eDisposition.02 != '20403') or 
(nem:eDisposition.01 = 'Santa Ynez Valley Cottage Hospital' and nem:eDisposition.02 != '20404') or 
(nem:eDisposition.01 = 'Scripps Green Hospital' and nem:eDisposition.02 != '20405') or 
(nem:eDisposition.01 = 'Scripps Memorial Hospital, Encinitas' and nem:eDisposition.02 != '20406') or 
(nem:eDisposition.01 = 'Scripps Memorial Hospital, La Jolla' and nem:eDisposition.02 != '20407') or 
(nem:eDisposition.01 = 'Scripps Mercy Hospital' and nem:eDisposition.02 != '20408') or 
(nem:eDisposition.01 = 'Scripps Mercy Hospital, Chula Vista' and nem:eDisposition.02 != '20409') or 
(nem:eDisposition.01 = 'Adventist Health Selma' and nem:eDisposition.02 != '20410') or 
(nem:eDisposition.01 = 'Seneca District Hospital' and nem:eDisposition.02 != '20412') or 
(nem:eDisposition.01 = 'Sequoia Hospital' and nem:eDisposition.02 != '20413') or 
(nem:eDisposition.01 = 'Seton Medical Center' and nem:eDisposition.02 != '20414') or 
(nem:eDisposition.01 = 'Seton Medical Center, Coastside' and nem:eDisposition.02 != '20415') or 
(nem:eDisposition.01 = 'Sharp Chula Vista Medical Center' and nem:eDisposition.02 != '20416') or 
(nem:eDisposition.01 = 'Sharp Coronado Hospital and Healthcare Center' and nem:eDisposition.02 != '20417') or 
(nem:eDisposition.01 = 'Sharp Mary Birch Hospital for Women and Newborns' and nem:eDisposition.02 != '20418') or 
(nem:eDisposition.01 = 'Sharp Memorial Hospital' and nem:eDisposition.02 != '20419') or 
(nem:eDisposition.01 = 'Sharp Mesa Vista Hospital' and nem:eDisposition.02 != '20420') or 
(nem:eDisposition.01 = 'Shasta Regional Medical Center' and nem:eDisposition.02 != '20423') or 
(nem:eDisposition.01 = 'Sherman Oaks Hospital' and nem:eDisposition.02 != '20424') or 
(nem:eDisposition.01 = 'Shriners Hospitals For Children, Northern California' and nem:eDisposition.02 != '20426') or 
(nem:eDisposition.01 = 'Adventist Health Reedley' and nem:eDisposition.02 != '20427') or 
(nem:eDisposition.01 = 'Sierra Nevada Memorial Hospital' and nem:eDisposition.02 != '20428') or 
(nem:eDisposition.01 = 'Sierra View Medical Center' and nem:eDisposition.02 != '20429') or 
(nem:eDisposition.01 = 'Sierra Vista Regional Medical Center' and nem:eDisposition.02 != '20431') or 
(nem:eDisposition.01 = 'Silver Lake Medical Center, Downtown Campus' and nem:eDisposition.02 != '20432') or 
(nem:eDisposition.01 = 'Silver Lake Medical Center, Ingleside Campus' and nem:eDisposition.02 != '20433') or 
(nem:eDisposition.01 = 'Adventist Health Simi Valley' and nem:eDisposition.02 != '20434') or 
(nem:eDisposition.01 = 'Sonoma Developmental Center' and nem:eDisposition.02 != '20435') or 
(nem:eDisposition.01 = 'Sonoma Valley Hospital' and nem:eDisposition.02 != '20436') or 
(nem:eDisposition.01 = 'Adventist Health Sonora, Fairview' and nem:eDisposition.02 != '20437') or 
(nem:eDisposition.01 = 'Adventist Health Sonora, Greenley' and nem:eDisposition.02 != '20438') or 
(nem:eDisposition.01 = 'Sonora Regional Medical Center Skilled Nursing Facility' and nem:eDisposition.02 != '20439') or 
(nem:eDisposition.01 = 'Southern Inyo Hospital' and nem:eDisposition.02 != '20440') or 
(nem:eDisposition.01 = 'Rancho Springs Medical Center' and nem:eDisposition.02 != '20441') or 
(nem:eDisposition.01 = 'Inland Valley Medical Center' and nem:eDisposition.02 != '20442') or 
(nem:eDisposition.01 = 'Saint Agnes Medical Center' and nem:eDisposition.02 != '20443') or 
(nem:eDisposition.01 = 'St. Bernardine Medical Center' and nem:eDisposition.02 != '20444') or 
(nem:eDisposition.01 = 'St. Elizabeth Community Hospital' and nem:eDisposition.02 != '20445') or 
(nem:eDisposition.01 = 'Saint Francis Medical Center' and nem:eDisposition.02 != '20446') or 
(nem:eDisposition.01 = 'Saint Francis Memorial Hospital' and nem:eDisposition.02 != '20447') or 
(nem:eDisposition.01 = 'Adventist Health St. Helena' and nem:eDisposition.02 != '20448') or 
(nem:eDisposition.01 = 'Adventist Health Clearlake' and nem:eDisposition.02 != '20449') or 
(nem:eDisposition.01 = 'Adventist Health Vallejo, Behavioral Health' and nem:eDisposition.02 != '20450') or 
(nem:eDisposition.01 = 'Providence Saint John''s Health Center' and nem:eDisposition.02 != '20451') or 
(nem:eDisposition.01 = 'Saint John''s Pleasant Valley Hospital' and nem:eDisposition.02 != '20452') or 
(nem:eDisposition.01 = 'Saint John''s Regional Medical Center' and nem:eDisposition.02 != '20453') or 
(nem:eDisposition.01 = 'Saint Joseph Hospital, Eureka' and nem:eDisposition.02 != '20454') or 
(nem:eDisposition.01 = 'St. Joseph Hospital, Orange' and nem:eDisposition.02 != '20455') or 
(nem:eDisposition.01 = 'Saint Joseph''s Behavioral Health Center' and nem:eDisposition.02 != '20456') or 
(nem:eDisposition.01 = 'St. Joseph''s Medical Center of Stockton' and nem:eDisposition.02 != '20457') or 
(nem:eDisposition.01 = 'St. Jude Medical Center' and nem:eDisposition.02 != '20458') or 
(nem:eDisposition.01 = 'St. Louise Regional Hospital' and nem:eDisposition.02 != '20459') or 
(nem:eDisposition.01 = 'St. Mary Medical Center, Long Beach' and nem:eDisposition.02 != '20460') or 
(nem:eDisposition.01 = 'St. Mary Medical Center' and nem:eDisposition.02 != '20461') or 
(nem:eDisposition.01 = 'St. Mary''s Medical Center, San Francisco' and nem:eDisposition.02 != '20462') or 
(nem:eDisposition.01 = 'Saint Rose Hospital' and nem:eDisposition.02 != '20463') or 
(nem:eDisposition.01 = 'Saint Vincent Medical Center' and nem:eDisposition.02 != '20464') or 
(nem:eDisposition.01 = 'Stanford Health Care' and nem:eDisposition.02 != '20465') or 
(nem:eDisposition.01 = 'Stanislaus Surgical Hospital' and nem:eDisposition.02 != '20466') or 
(nem:eDisposition.01 = 'Surprise Valley Community Hospital' and nem:eDisposition.02 != '20468') or 
(nem:eDisposition.01 = 'Sutter Amador Hospital' and nem:eDisposition.02 != '20469') or 
(nem:eDisposition.01 = 'Sutter Auburn Faith Hospital' and nem:eDisposition.02 != '20470') or 
(nem:eDisposition.01 = 'Sutter Coast Hospital' and nem:eDisposition.02 != '20472') or 
(nem:eDisposition.01 = 'Sutter Davis Hospital' and nem:eDisposition.02 != '20473') or 
(nem:eDisposition.01 = 'Sutter Delta Medical Center' and nem:eDisposition.02 != '20474') or 
(nem:eDisposition.01 = 'Sutter Medical Center - Sacramento' and nem:eDisposition.02 != '20475') or 
(nem:eDisposition.01 = 'Sutter Lakeside Hospital' and nem:eDisposition.02 != '20476') or 
(nem:eDisposition.01 = 'Sutter Maternity and Surgery Center of Santa Cruz' and nem:eDisposition.02 != '20477') or 
(nem:eDisposition.01 = 'Sutter Santa Rosa Regional Hospital' and nem:eDisposition.02 != '20478') or 
(nem:eDisposition.01 = 'Sutter Memorial Hospital' and nem:eDisposition.02 != '20479') or 
(nem:eDisposition.01 = 'Sutter Oaks Nursing Center, Midtown' and nem:eDisposition.02 != '20480') or 
(nem:eDisposition.01 = 'Sutter Roseville Medical Center' and nem:eDisposition.02 != '20481') or 
(nem:eDisposition.01 = 'Sutter Solano Medical Center' and nem:eDisposition.02 != '20482') or 
(nem:eDisposition.01 = 'Sutter Surgical Hospital, North Valley' and nem:eDisposition.02 != '20483') or 
(nem:eDisposition.01 = 'Sutter Tracy Community Hospital' and nem:eDisposition.02 != '20484') or 
(nem:eDisposition.01 = 'Tahoe Forest Hospital' and nem:eDisposition.02 != '20486') or 
(nem:eDisposition.01 = 'Tarzana Treatment Center' and nem:eDisposition.02 != '20487') or 
(nem:eDisposition.01 = 'Adventist Health Tehachapi Valley' and nem:eDisposition.02 != '20488') or 
(nem:eDisposition.01 = 'Temple Community Hospital' and nem:eDisposition.02 != '20492') or 
(nem:eDisposition.01 = 'Thousand Oaks Surgical Hospital' and nem:eDisposition.02 != '20493') or 
(nem:eDisposition.01 = 'Torrance Memorial Medical Center' and nem:eDisposition.02 != '20496') or 
(nem:eDisposition.01 = 'Tri-City Medical Center' and nem:eDisposition.02 != '20497') or 
(nem:eDisposition.01 = 'Gardens Regional Hospital &amp; Medical Center' and nem:eDisposition.02 != '20498') or 
(nem:eDisposition.01 = 'Trinity Hospital' and nem:eDisposition.02 != '20499') or 
(nem:eDisposition.01 = 'Tulare Regional Medical Center' and nem:eDisposition.02 != '20500') or 
(nem:eDisposition.01 = 'Twin Cities Community Hospital' and nem:eDisposition.02 != '20502') or 
(nem:eDisposition.01 = 'University of California, San Diego, John M. &amp; Sally B. Thornton Hospital' and nem:eDisposition.02 != '20503') or 
(nem:eDisposition.01 = 'UCSF Medical Center at Parnassus' and nem:eDisposition.02 != '20504') or 
(nem:eDisposition.01 = 'University of California, San Francisco Medical Center at Mount Zion' and nem:eDisposition.02 != '20505') or 
(nem:eDisposition.01 = 'Adventist Health Ukiah Valley' and nem:eDisposition.02 != '20506') or 
(nem:eDisposition.01 = 'UC Davis Medical Center' and nem:eDisposition.02 != '20508') or 
(nem:eDisposition.01 = 'University of California, Irvine Medical Center' and nem:eDisposition.02 != '20509') or 
(nem:eDisposition.01 = 'University of California, San Diego Medical Center' and nem:eDisposition.02 != '20510') or 
(nem:eDisposition.01 = 'USC Kenneth Norris, Jr. Cancer Hospital' and nem:eDisposition.02 != '20511') or 
(nem:eDisposition.01 = 'Keck Hospital of USC' and nem:eDisposition.02 != '20512') or 
(nem:eDisposition.01 = 'Valley Memorial Hospital, Livermore' and nem:eDisposition.02 != '20513') or 
(nem:eDisposition.01 = 'Valley Presbyterian Hospital' and nem:eDisposition.02 != '20514') or 
(nem:eDisposition.01 = 'Stanford Health Care - ValleyCare' and nem:eDisposition.02 != '20515') or 
(nem:eDisposition.01 = 'Ventura County Medical Center' and nem:eDisposition.02 != '20516') or 
(nem:eDisposition.01 = 'Ventura County Medical Center - Santa Paula Hospital' and nem:eDisposition.02 != '20517') or 
(nem:eDisposition.01 = 'USC Verdugo Hills Hospital' and nem:eDisposition.02 != '20518') or 
(nem:eDisposition.01 = 'Vibra Hospital of San Diego' and nem:eDisposition.02 != '20519') or 
(nem:eDisposition.01 = 'Victor Valley Global Medical Center' and nem:eDisposition.02 != '20520') or 
(nem:eDisposition.01 = 'Villa Coronado Convalescent' and nem:eDisposition.02 != '20521') or 
(nem:eDisposition.01 = 'Kindred Hospital, Riverside' and nem:eDisposition.02 != '20522') or 
(nem:eDisposition.01 = 'Kindred Hospital, Baldwin Park' and nem:eDisposition.02 != '20523') or 
(nem:eDisposition.01 = 'Kindred Hospital South Bay' and nem:eDisposition.02 != '20524') or 
(nem:eDisposition.01 = 'Washington Hospital, Fremont' and nem:eDisposition.02 != '20525') or 
(nem:eDisposition.01 = 'Watsonville Community Hospital' and nem:eDisposition.02 != '20526') or 
(nem:eDisposition.01 = 'West Anaheim Medical Center' and nem:eDisposition.02 != '20527') or 
(nem:eDisposition.01 = 'West Hills Hospital and Medical Center' and nem:eDisposition.02 != '20528') or 
(nem:eDisposition.01 = 'Orange County Global Medical Center' and nem:eDisposition.02 != '20529') or 
(nem:eDisposition.01 = 'Anaheim Global Medical Center' and nem:eDisposition.02 != '20530') or 
(nem:eDisposition.01 = 'Adventist Health White Memorial' and nem:eDisposition.02 != '20531') or 
(nem:eDisposition.01 = 'Whittier Hospital Medical Center' and nem:eDisposition.02 != '20532') or 
(nem:eDisposition.01 = 'Woodland Memorial Hospital' and nem:eDisposition.02 != '20533') or 
(nem:eDisposition.01 = 'Loma Linda University Medical Center, Murrieta' and nem:eDisposition.02 != '20535') or 
(nem:eDisposition.01 = 'Veterans Administration Medical Center, Fresno' and nem:eDisposition.02 != '20536') or 
(nem:eDisposition.01 = 'Naval Medical Center San Diego' and nem:eDisposition.02 != '20537') or 
(nem:eDisposition.01 = 'Naval Hospital Camp Pendleton' and nem:eDisposition.02 != '20538') or 
(nem:eDisposition.01 = 'Veterans Administration San Diego Healthcare System' and nem:eDisposition.02 != '20539') or 
(nem:eDisposition.01 = 'Veterans Administration Medical Center, San Francisco' and nem:eDisposition.02 != '20540') or 
(nem:eDisposition.01 = 'Veterans Administration Palo Alto Health Care System, Palo Alto Division' and nem:eDisposition.02 != '20541') or 
(nem:eDisposition.01 = 'Veterans Administration Greater Los Angeles Medical Center' and nem:eDisposition.02 != '20542') or 
(nem:eDisposition.01 = 'Veterans Administration Loma Linda Healthcare System' and nem:eDisposition.02 != '20543') or 
(nem:eDisposition.01 = 'Veterans Administration Long Beach Healthcare System' and nem:eDisposition.02 != '20544') or 
(nem:eDisposition.01 = 'Lancaster Community Hospital' and nem:eDisposition.02 != '20545') or 
(nem:eDisposition.01 = 'Veterans Administration Palo Alto Health Care System, Livermore Division' and nem:eDisposition.02 != '20546') or 
(nem:eDisposition.01 = 'Veterans Administration Palo Alto Health Care System, Menlo Park Division' and nem:eDisposition.02 != '20547') or 
(nem:eDisposition.01 = 'Sacramento VA Medical Center' and nem:eDisposition.02 != '20549') or 
(nem:eDisposition.01 = 'Sky Lakes Medical Center' and nem:eDisposition.02 != '20550') or 
(nem:eDisposition.01 = 'Northern Nevada Medical Center' and nem:eDisposition.02 != '20551') or 
(nem:eDisposition.01 = 'Providence Medford Medical Center' and nem:eDisposition.02 != '20552') or 
(nem:eDisposition.01 = 'Renown Regional Medical Center' and nem:eDisposition.02 != '20553') or 
(nem:eDisposition.01 = 'David Grant US Air Force Medical Center' and nem:eDisposition.02 != '20554') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Ontario' and nem:eDisposition.02 != '20555') or 
(nem:eDisposition.01 = 'Asante Rogue Regional Medical Center' and nem:eDisposition.02 != '20557') or 
(nem:eDisposition.01 = 'Temecula Valley Hospital' and nem:eDisposition.02 != '20559') or 
(nem:eDisposition.01 = 'Kaiser Permanente, Anaheim' and nem:eDisposition.02 != '20560') or 
(nem:eDisposition.01 = 'Palomar Medical Center' and nem:eDisposition.02 != '20561') or 
(nem:eDisposition.01 = 'Alameda Hospital at Waters Edge' and nem:eDisposition.02 != '20563') or 
(nem:eDisposition.01 = 'Totally Kids Rehabilitation Hospital' and nem:eDisposition.02 != '21632') or 
(nem:eDisposition.01 = 'Carson Tahoe Regional Medical Center' and nem:eDisposition.02 != '60248') or 
(nem:eDisposition.01 = 'Martin Luther King, Jr. Community Hospital' and nem:eDisposition.02 != '60988') or 
(nem:eDisposition.01 = 'Alvarado Hospital Medical Center' and nem:eDisposition.02 != '61304') or 
(nem:eDisposition.01 = 'Saint Mary''s Regional Medical Center' and nem:eDisposition.02 != '61412') or 
(nem:eDisposition.01 = 'UMC Medical' and nem:eDisposition.02 != '61531') or 
(nem:eDisposition.01 = 'UMC Trauma' and nem:eDisposition.02 != '61532') or 
(nem:eDisposition.01 = 'USAF Regional Hos' and nem:eDisposition.02 != '61545') or 
(nem:eDisposition.01 = 'VA Greater Los Angeles Healthcare System, Sepulveda' and nem:eDisposition.02 != '61554') or 
(nem:eDisposition.01 = 'Valley Hospital Medical Center' and nem:eDisposition.02 != '61564') or 
(nem:eDisposition.01 = 'Valley View Medical Center' and nem:eDisposition.02 != '61569') or 
(nem:eDisposition.01 = 'Veterans Administration, Reno' and nem:eDisposition.02 != '61588') or 
(nem:eDisposition.01 = 'Weed Army Community Hospital (Wach), Ft Irwin' and nem:eDisposition.02 != '61636') or 
(nem:eDisposition.01 = 'West Hills Hospital' and nem:eDisposition.02 != '61643') or 
(nem:eDisposition.01 = 'LAC+USC Medical Center Women''s and Children''s Hospital' and nem:eDisposition.02 != '61680') or 
(nem:eDisposition.01 = 'David Grant Medical Center-Travis AFB' and nem:eDisposition.02 != '62054') or 
(nem:eDisposition.01 = 'Vibra Hospital of Sacramento' and nem:eDisposition.02 != '62239') or 
(nem:eDisposition.01 = 'Desert Parkway Behavioral Healthcare Hospital' and nem:eDisposition.02 != '62298') or 
(nem:eDisposition.01 = 'Fresno Community Hospital' and nem:eDisposition.02 != '62313') or 
(nem:eDisposition.01 = 'UCSF Medical Center at Mission Bay' and nem:eDisposition.02 != '62338') or 
(nem:eDisposition.01 = 'Mayo Clinic Hospital' and nem:eDisposition.02 != '62346') or 
(nem:eDisposition.01 = 'Kindred Hospital, Arizona' and nem:eDisposition.02 != '62348') or 
(nem:eDisposition.01 = 'VA Sierra Nevada Health Care System' and nem:eDisposition.02 != '62349') or 
(nem:eDisposition.01 = 'Kindred Hospital, Las Vegas - Sahara' and nem:eDisposition.02 != '62352') or 
(nem:eDisposition.01 = 'Kaiser Permanente, San Leandro Medical Center' and nem:eDisposition.02 != '62356') or 
(nem:eDisposition.01 = 'Henderson Hospital' and nem:eDisposition.02 != '62357') or 
(nem:eDisposition.01 = 'Lake District Hospital' and nem:eDisposition.02 != '62358') or 
(nem:eDisposition.01 = 'Barrow Neurological Institute' and nem:eDisposition.02 != '62370') or 
(nem:eDisposition.01 = 'Kaiser Permanente, San Diego Medical Center' and nem:eDisposition.02 != '62393') or 
(nem:eDisposition.01 = 'UCSF Benioff Children''s Hospital' and nem:eDisposition.02 != '62404') or 
(nem:eDisposition.01 = 'San Jose Behavioral Health Hospital' and nem:eDisposition.02 != '62445') or 
(nem:eDisposition.01 = 'Kentfield Hospital San Francisco' and nem:eDisposition.02 != '62463') or 
(nem:eDisposition.01 = 'Sonoma Specialty Hospital' and nem:eDisposition.02 != '62470') or 
(nem:eDisposition.01 = 'CPMC-Van Ness' and nem:eDisposition.02 != '62636') or 
(nem:eDisposition.01 = 'Banner Thunderbird Medical Center' and nem:eDisposition.02 != '62642') or 
(nem:eDisposition.01 = 'Edwards Air Force Base Hospital' and nem:eDisposition.02 != '64691') or 
(nem:eDisposition.01 = 'St. Joseph''s Hospital and Medical Center' and nem:eDisposition.02 != '64709') or 
(nem:eDisposition.01 = 'Asante Three Rivers Medical Center' and nem:eDisposition.02 != '64712') or 
(nem:eDisposition.01 = 'Phoenix Children''s Hospital' and nem:eDisposition.02 != '64802') or 
(nem:eDisposition.01 = 'Abrazo Central Campus' and nem:eDisposition.02 != '64803'))">Submitted value for Destination Name (eDisposition.01) with Destination Code (eDisposition.02) does not exist in the system.</sch:assert>
			</sch:rule>
		</sch:pattern>
	
  <!-- DIAGNOSTICS -->
	<sch:diagnostics>
<sch:diagnostic id="nemsisDiagnostic" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <!-- This is the NEMSIS national diagnostic. It must exist in every NEMSIS Schematron document, 
       and it should be referenced by every assert and report. It provides nationally-
       standardized, structured data to communicate which data elements are of interest in a 
       failed assert or successful report. -->

  <nemsisDiagnostic xmlns="http://www.nemsis.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!-- Elements that uniquely identify the record where the problem happened. -->

    <record>
      <xsl:copy-of select="ancestor-or-self::*:DemographicReport/*:dAgency/(*:dAgency.01 | *:dAgency.02 | *:dAgency.04)"/>
      <xsl:copy-of select="ancestor-or-self::*:Header/*:DemographicGroup/*"/>
      <xsl:copy-of select="ancestor-or-self::*:PatientCareReport/*:eRecord/*:eRecord.01"/>
    </record>

    <!-- Elements that the user may want to revisit to resolve the problem, along with their values. -->

    <elements>
      <xsl:for-each select="$nemsisElements">
        <xsl:element name="element">
          <xsl:attribute name="location">
            <xsl:apply-templates select="." mode="schematron-get-full-path"/>
          </xsl:attribute>
          <xsl:for-each select ="@*">
            <xsl:attribute name="{name()}">
              <xsl:value-of select="."/>
            </xsl:attribute>
          </xsl:for-each>
          <xsl:if test="not(*)">
            <xsl:value-of select="."/>
          </xsl:if>
        </xsl:element>
      </xsl:for-each>
    </elements>

    <!-- Elements that were missing, that the user may want to visit to resolve the problem. -->

    <elementsMissing>
      <xsl:variable name="default_context" select="."/>
      <xsl:for-each select="tokenize($nemsisElementsMissing, ' ')">
        <xsl:variable name="parent" select="$nemsisElementsMissingContext[contains(local-name(), substring-before(current(), '.'))][1]"/>
        <element>
          <xsl:attribute name="parentLocation">
            <xsl:choose>
              <xsl:when test="$parent">
                <xsl:apply-templates select="$parent" mode="schematron-get-full-path"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:apply-templates select="$default_context" mode="schematron-get-full-path"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:attribute name="name">
            <xsl:value-of select="."/>
          </xsl:attribute>
        </element>
      </xsl:for-each>
    </elementsMissing>

  </nemsisDiagnostic>

</sch:diagnostic>
      
  </sch:diagnostics>

</sch:schema>

